/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vcita.platform.client.model.BookingRestriction;
import com.vcita.platform.client.model.StaffSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Service
 */
public class ServiceTest {
    private final Service model = new Service();

    /**
     * Model tests for Service
     */
    @Test
    public void testService() {
        // TODO: test Service
    }

    /**
     * Test the property 'autoFollowUpHours'
     */
    @Test
    public void autoFollowUpHoursTest() {
        // TODO: test autoFollowUpHours
    }

    /**
     * Test the property 'approvalMode'
     */
    @Test
    public void approvalModeTest() {
        // TODO: test approvalMode
    }

    /**
     * Test the property 'bookingRestriction'
     */
    @Test
    public void bookingRestrictionTest() {
        // TODO: test bookingRestriction
    }

    /**
     * Test the property 'businessEnabled'
     */
    @Test
    public void businessEnabledTest() {
        // TODO: test businessEnabled
    }

    /**
     * Test the property 'businessUid'
     */
    @Test
    public void businessUidTest() {
        // TODO: test businessUid
    }

    /**
     * Test the property 'chargeType'
     */
    @Test
    public void chargeTypeTest() {
        // TODO: test chargeType
    }

    /**
     * Test the property 'colorId'
     */
    @Test
    public void colorIdTest() {
        // TODO: test colorId
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'defaultStaff'
     */
    @Test
    public void defaultStaffTest() {
        // TODO: test defaultStaff
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'display'
     */
    @Test
    public void displayTest() {
        // TODO: test display
    }

    /**
     * Test the property 'displayMissingError'
     */
    @Test
    public void displayMissingErrorTest() {
        // TODO: test displayMissingError
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'eventDisplayRemainingSpots'
     */
    @Test
    public void eventDisplayRemainingSpotsTest() {
        // TODO: test eventDisplayRemainingSpots
    }

    /**
     * Test the property 'futureBookingsLimit'
     */
    @Test
    public void futureBookingsLimitTest() {
        // TODO: test futureBookingsLimit
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imagePath'
     */
    @Test
    public void imagePathTest() {
        // TODO: test imagePath
    }

    /**
     * Test the property 'interactionType'
     */
    @Test
    public void interactionTypeTest() {
        // TODO: test interactionType
    }

    /**
     * Test the property 'meetingInteractionDetails'
     */
    @Test
    public void meetingInteractionDetailsTest() {
        // TODO: test meetingInteractionDetails
    }

    /**
     * Test the property 'meetingReminderSms1'
     */
    @Test
    public void meetingReminderSms1Test() {
        // TODO: test meetingReminderSms1
    }

    /**
     * Test the property 'meetingReminderSms2'
     */
    @Test
    public void meetingReminderSms2Test() {
        // TODO: test meetingReminderSms2
    }

    /**
     * Test the property 'minHoursBeforeMeeting'
     */
    @Test
    public void minHoursBeforeMeetingTest() {
        // TODO: test minHoursBeforeMeeting
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'maxAttendance'
     */
    @Test
    public void maxAttendanceTest() {
        // TODO: test maxAttendance
    }

    /**
     * Test the property 'order'
     */
    @Test
    public void orderTest() {
        // TODO: test order
    }

    /**
     * Test the property 'padding'
     */
    @Test
    public void paddingTest() {
        // TODO: test padding
    }

    /**
     * Test the property 'photoPath'
     */
    @Test
    public void photoPathTest() {
        // TODO: test photoPath
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'remindBeforeInHours1'
     */
    @Test
    public void remindBeforeInHours1Test() {
        // TODO: test remindBeforeInHours1
    }

    /**
     * Test the property 'remindBeforeInHours2'
     */
    @Test
    public void remindBeforeInHours2Test() {
        // TODO: test remindBeforeInHours2
    }

    /**
     * Test the property 'rwgEligible'
     */
    @Test
    public void rwgEligibleTest() {
        // TODO: test rwgEligible
    }

    /**
     * Test the property 'serviceType'
     */
    @Test
    public void serviceTypeTest() {
        // TODO: test serviceType
    }

    /**
     * Test the property 'smsBookingConfirmation'
     */
    @Test
    public void smsBookingConfirmationTest() {
        // TODO: test smsBookingConfirmation
    }

    /**
     * Test the property 'staffSettings'
     */
    @Test
    public void staffSettingsTest() {
        // TODO: test staffSettings
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
