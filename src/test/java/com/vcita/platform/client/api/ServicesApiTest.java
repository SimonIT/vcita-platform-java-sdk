/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.api;

import com.vcita.platform.client.ApiException;
import com.vcita.platform.client.model.CategoriesCategoryIdServicesGet200Response;
import com.vcita.platform.client.model.GlobalServicesGet200Response;
import com.vcita.platform.client.model.ServicesGet200Response;
import com.vcita.platform.client.model.ServicesServiceIdGet200Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServicesApi
 */
@Ignore
public class ServicesApiTest {

    private final ServicesApi api = new ServicesApi();

    
    /**
     * Get Services List by category [Alpha]
     *
     * Get Services List by category [Alpha]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void categoriesCategoryIdServicesGetTest() throws ApiException {
        String categoryId = null;
        String businessId = null;
        String authorization = null;
        List<String> staffArray = null;
        Boolean hasFutureInstance = null;
        Integer page = null;
        Integer perPage = null;
                CategoriesCategoryIdServicesGet200Response response = api.categoriesCategoryIdServicesGet(categoryId, businessId, authorization, staffArray, hasFutureInstance, page, perPage);
        // TODO: test validations
    }
    
    /**
     * Gets a list of services
     *
     * Gets a list of services
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void globalServicesGetTest() throws ApiException {
        String date = null;
        String authorization = null;
        Integer page = null;
                GlobalServicesGet200Response response = api.globalServicesGet(date, authorization, page);
        // TODO: test validations
    }
    
    /**
     * Get Services List [Alpha]
     *
     * Get Services List [Alpha]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void servicesGetTest() throws ApiException {
        String businessId = null;
        String authorization = null;
        List<String> staffArray = null;
        Boolean hasFutureInstance = null;
        Boolean includeHidden = null;
        Boolean activeStaffOnly = null;
        Boolean extraDecoratorFields = null;
        Integer page = null;
        Integer perPage = null;
                ServicesGet200Response response = api.servicesGet(businessId, authorization, staffArray, hasFutureInstance, includeHidden, activeStaffOnly, extraDecoratorFields, page, perPage);
        // TODO: test validations
    }
    
    /**
     * Get Service By ID [Alpha]
     *
     * Get Service By ID [Alpha]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void servicesServiceIdGetTest() throws ApiException {
        String serviceId = null;
        String authorization = null;
                ServicesServiceIdGet200Response response = api.servicesServiceIdGet(serviceId, authorization);
        // TODO: test validations
    }
    
}
