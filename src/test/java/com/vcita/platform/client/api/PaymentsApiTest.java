/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.api;

import com.vcita.platform.client.ApiException;
import com.vcita.platform.client.model.ClientsClientIdPaymentsGet201Response;
import com.vcita.platform.client.model.GlobalPaymentsGet200Response;
import com.vcita.platform.client.model.InlineObject23;
import com.vcita.platform.client.model.InlineObject24;
import com.vcita.platform.client.model.PaymentsGet201Response;
import com.vcita.platform.client.model.PaymentsPaymentUidMatchPost201Response;
import com.vcita.platform.client.model.PaymentsPost201Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentsApi
 */
@Ignore
public class PaymentsApiTest {

    private final PaymentsApi api = new PaymentsApi();

    
    /**
     * Get Payments of Client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsClientIdPaymentsGetTest() throws ApiException {
        String authorization = null;
        String clientId = null;
        String page = null;
        String perPage = null;
                ClientsClientIdPaymentsGet201Response response = api.clientsClientIdPaymentsGet(authorization, clientId, page, perPage);
        // TODO: test validations
    }
    
    /**
     * Gets a list of payments
     *
     * Gets a list of payments
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void globalPaymentsGetTest() throws ApiException {
        String date = null;
        String authorization = null;
        Integer page = null;
                GlobalPaymentsGet200Response response = api.globalPaymentsGet(date, authorization, page);
        // TODO: test validations
    }
    
    /**
     * Get Payments List
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentsGetTest() throws ApiException {
        String authorization = null;
        String page = null;
        String perPage = null;
        String invoiceId = null;
                PaymentsGet201Response response = api.paymentsGet(authorization, page, perPage, invoiceId);
        // TODO: test validations
    }
    
    /**
     * Match Payment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentsPaymentUidMatchPostTest() throws ApiException {
        String authorization = null;
        String paymentUid = null;
        InlineObject24 inlineObject24 = null;
                PaymentsPaymentUidMatchPost201Response response = api.paymentsPaymentUidMatchPost(authorization, paymentUid, inlineObject24);
        // TODO: test validations
    }
    
    /**
     * Create New Payment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentsPostTest() throws ApiException {
        String authorization = null;
        InlineObject23 inlineObject23 = null;
                PaymentsPost201Response response = api.paymentsPost(authorization, inlineObject23);
        // TODO: test validations
    }
    
}
