/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.api;

import com.vcita.platform.client.ApiException;
import com.vcita.platform.client.model.FieldsFieldIdDelete200Response;
import com.vcita.platform.client.model.FieldsFieldIdGet200Response;
import com.vcita.platform.client.model.FieldsFieldIdPut200Response;
import com.vcita.platform.client.model.FieldsGet200Response;
import com.vcita.platform.client.model.FieldsPost201Response;
import com.vcita.platform.client.model.InlineObject11;
import com.vcita.platform.client.model.InlineObject12;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FieldsApi
 */
@Ignore
public class FieldsApiTest {

    private final FieldsApi api = new FieldsApi();

    
    /**
     * Deletes a Field
     *
     * Deletes a Field
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fieldsFieldIdDeleteTest() throws ApiException {
        String fieldId = null;
        String authorization = null;
                FieldsFieldIdDelete200Response response = api.fieldsFieldIdDelete(fieldId, authorization);
        // TODO: test validations
    }
    
    /**
     * Get Field
     *
     * Gets the field
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fieldsFieldIdGetTest() throws ApiException {
        String fieldId = null;
        String authorization = null;
                FieldsFieldIdGet200Response response = api.fieldsFieldIdGet(fieldId, authorization);
        // TODO: test validations
    }
    
    /**
     * Updates a Field
     *
     * Updates a Field
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fieldsFieldIdPutTest() throws ApiException {
        String fieldId = null;
        String authorization = null;
        InlineObject12 inlineObject12 = null;
                FieldsFieldIdPut200Response response = api.fieldsFieldIdPut(fieldId, authorization, inlineObject12);
        // TODO: test validations
    }
    
    /**
     * Get all Fields
     *
     * Get all Fields
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fieldsGetTest() throws ApiException {
        String authorization = null;
                FieldsGet200Response response = api.fieldsGet(authorization);
        // TODO: test validations
    }
    
    /**
     * Create a New Field
     *
     * Create a New Field
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fieldsPostTest() throws ApiException {
        String authorization = null;
        InlineObject11 inlineObject11 = null;
                FieldsPost201Response response = api.fieldsPost(authorization, inlineObject11);
        // TODO: test validations
    }
    
}
