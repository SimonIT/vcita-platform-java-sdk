/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * PaymentStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentStatus {
  public static final String SERIALIZED_NAME_AMOUNT_TO_PAY_H = "amount_to_pay_h";
  @SerializedName(SERIALIZED_NAME_AMOUNT_TO_PAY_H)
  private String amountToPayH;

  public static final String SERIALIZED_NAME_BALANCE_H = "balance_h";
  @SerializedName(SERIALIZED_NAME_BALANCE_H)
  private String balanceH;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private String price;

  public static final String SERIALIZED_NAME_PRICE_BEFORE_COUPON = "price_before_coupon";
  @SerializedName(SERIALIZED_NAME_PRICE_BEFORE_COUPON)
  private String priceBeforeCoupon;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public PaymentStatus() { 
  }

  public PaymentStatus amountToPayH(String amountToPayH) {
    
    this.amountToPayH = amountToPayH;
    return this;
  }

   /**
   * Get amountToPayH
   * @return amountToPayH
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAmountToPayH() {
    return amountToPayH;
  }


  public void setAmountToPayH(String amountToPayH) {
    this.amountToPayH = amountToPayH;
  }


  public PaymentStatus balanceH(String balanceH) {
    
    this.balanceH = balanceH;
    return this;
  }

   /**
   * Get balanceH
   * @return balanceH
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBalanceH() {
    return balanceH;
  }


  public void setBalanceH(String balanceH) {
    this.balanceH = balanceH;
  }


  public PaymentStatus currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public PaymentStatus id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public PaymentStatus price(String price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrice() {
    return price;
  }


  public void setPrice(String price) {
    this.price = price;
  }


  public PaymentStatus priceBeforeCoupon(String priceBeforeCoupon) {
    
    this.priceBeforeCoupon = priceBeforeCoupon;
    return this;
  }

   /**
   * Get priceBeforeCoupon
   * @return priceBeforeCoupon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPriceBeforeCoupon() {
    return priceBeforeCoupon;
  }


  public void setPriceBeforeCoupon(String priceBeforeCoupon) {
    this.priceBeforeCoupon = priceBeforeCoupon;
  }


  public PaymentStatus state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentStatus paymentStatus = (PaymentStatus) o;
    return Objects.equals(this.amountToPayH, paymentStatus.amountToPayH) &&
        Objects.equals(this.balanceH, paymentStatus.balanceH) &&
        Objects.equals(this.currency, paymentStatus.currency) &&
        Objects.equals(this.id, paymentStatus.id) &&
        Objects.equals(this.price, paymentStatus.price) &&
        Objects.equals(this.priceBeforeCoupon, paymentStatus.priceBeforeCoupon) &&
        Objects.equals(this.state, paymentStatus.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountToPayH, balanceH, currency, id, price, priceBeforeCoupon, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentStatus {\n");
    sb.append("    amountToPayH: ").append(toIndentedString(amountToPayH)).append("\n");
    sb.append("    balanceH: ").append(toIndentedString(balanceH)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceBeforeCoupon: ").append(toIndentedString(priceBeforeCoupon)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount_to_pay_h");
    openapiFields.add("balance_h");
    openapiFields.add("currency");
    openapiFields.add("id");
    openapiFields.add("price");
    openapiFields.add("price_before_coupon");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PaymentStatus
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PaymentStatus.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has reuqired fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentStatus is not found in the empty JSON string", PaymentStatus.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PaymentStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PaymentStatus` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentStatus>() {
           @Override
           public void write(JsonWriter out, PaymentStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentStatus read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PaymentStatus given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PaymentStatus
  * @throws IOException if the JSON string is invalid with respect to PaymentStatus
  */
  public static PaymentStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentStatus.class);
  }

 /**
  * Convert an instance of PaymentStatus to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

