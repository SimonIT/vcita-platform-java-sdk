/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vcita.platform.client.model.Matter;
import com.vcita.platform.client.model.StateSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * Waitlist
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Waitlist {
  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private Integer clientId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_EVENT_INSTANCE_UID = "event_instance_uid";
  @SerializedName(SERIALIZED_NAME_EVENT_INSTANCE_UID)
  private String eventInstanceUid;

  public static final String SERIALIZED_NAME_INITIATOR = "initiator";
  @SerializedName(SERIALIZED_NAME_INITIATOR)
  private String initiator;

  public static final String SERIALIZED_NAME_MATTER = "matter";
  @SerializedName(SERIALIZED_NAME_MATTER)
  private Matter matter;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private Integer sourceId;

  public static final String SERIALIZED_NAME_SPOT = "spot";
  @SerializedName(SERIALIZED_NAME_SPOT)
  private Integer spot;

  public static final String SERIALIZED_NAME_STAFF_UID = "staff_uid";
  @SerializedName(SERIALIZED_NAME_STAFF_UID)
  private String staffUid;

  public static final String SERIALIZED_NAME_START_TIME_H = "start_time_h";
  @SerializedName(SERIALIZED_NAME_START_TIME_H)
  private String startTimeH;

  public static final String SERIALIZED_NAME_STATE_SUMMARY = "state_summary";
  @SerializedName(SERIALIZED_NAME_STATE_SUMMARY)
  private StateSummary stateSummary;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_WHERE_H = "where_h";
  @SerializedName(SERIALIZED_NAME_WHERE_H)
  private String whereH;

  public Waitlist() { 
  }

  public Waitlist clientId(Integer clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getClientId() {
    return clientId;
  }


  public void setClientId(Integer clientId) {
    this.clientId = clientId;
  }


  public Waitlist createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Waitlist entityId(Integer entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEntityId() {
    return entityId;
  }


  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public Waitlist entityType(String entityType) {
    
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEntityType() {
    return entityType;
  }


  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public Waitlist eventInstanceUid(String eventInstanceUid) {
    
    this.eventInstanceUid = eventInstanceUid;
    return this;
  }

   /**
   * Get eventInstanceUid
   * @return eventInstanceUid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventInstanceUid() {
    return eventInstanceUid;
  }


  public void setEventInstanceUid(String eventInstanceUid) {
    this.eventInstanceUid = eventInstanceUid;
  }


  public Waitlist initiator(String initiator) {
    
    this.initiator = initiator;
    return this;
  }

   /**
   * Get initiator
   * @return initiator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInitiator() {
    return initiator;
  }


  public void setInitiator(String initiator) {
    this.initiator = initiator;
  }


  public Waitlist matter(Matter matter) {
    
    this.matter = matter;
    return this;
  }

   /**
   * Get matter
   * @return matter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Matter getMatter() {
    return matter;
  }


  public void setMatter(Matter matter) {
    this.matter = matter;
  }


  public Waitlist sourceId(Integer sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSourceId() {
    return sourceId;
  }


  public void setSourceId(Integer sourceId) {
    this.sourceId = sourceId;
  }


  public Waitlist spot(Integer spot) {
    
    this.spot = spot;
    return this;
  }

   /**
   * Get spot
   * @return spot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSpot() {
    return spot;
  }


  public void setSpot(Integer spot) {
    this.spot = spot;
  }


  public Waitlist staffUid(String staffUid) {
    
    this.staffUid = staffUid;
    return this;
  }

   /**
   * Get staffUid
   * @return staffUid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStaffUid() {
    return staffUid;
  }


  public void setStaffUid(String staffUid) {
    this.staffUid = staffUid;
  }


  public Waitlist startTimeH(String startTimeH) {
    
    this.startTimeH = startTimeH;
    return this;
  }

   /**
   * Get startTimeH
   * @return startTimeH
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStartTimeH() {
    return startTimeH;
  }


  public void setStartTimeH(String startTimeH) {
    this.startTimeH = startTimeH;
  }


  public Waitlist stateSummary(StateSummary stateSummary) {
    
    this.stateSummary = stateSummary;
    return this;
  }

   /**
   * Get stateSummary
   * @return stateSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StateSummary getStateSummary() {
    return stateSummary;
  }


  public void setStateSummary(StateSummary stateSummary) {
    this.stateSummary = stateSummary;
  }


  public Waitlist status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public Waitlist title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Waitlist type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public Waitlist uid(String uid) {
    
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUid() {
    return uid;
  }


  public void setUid(String uid) {
    this.uid = uid;
  }


  public Waitlist whereH(String whereH) {
    
    this.whereH = whereH;
    return this;
  }

   /**
   * Get whereH
   * @return whereH
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWhereH() {
    return whereH;
  }


  public void setWhereH(String whereH) {
    this.whereH = whereH;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Waitlist waitlist = (Waitlist) o;
    return Objects.equals(this.clientId, waitlist.clientId) &&
        Objects.equals(this.createdAt, waitlist.createdAt) &&
        Objects.equals(this.entityId, waitlist.entityId) &&
        Objects.equals(this.entityType, waitlist.entityType) &&
        Objects.equals(this.eventInstanceUid, waitlist.eventInstanceUid) &&
        Objects.equals(this.initiator, waitlist.initiator) &&
        Objects.equals(this.matter, waitlist.matter) &&
        Objects.equals(this.sourceId, waitlist.sourceId) &&
        Objects.equals(this.spot, waitlist.spot) &&
        Objects.equals(this.staffUid, waitlist.staffUid) &&
        Objects.equals(this.startTimeH, waitlist.startTimeH) &&
        Objects.equals(this.stateSummary, waitlist.stateSummary) &&
        Objects.equals(this.status, waitlist.status) &&
        Objects.equals(this.title, waitlist.title) &&
        Objects.equals(this.type, waitlist.type) &&
        Objects.equals(this.uid, waitlist.uid) &&
        Objects.equals(this.whereH, waitlist.whereH);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, createdAt, entityId, entityType, eventInstanceUid, initiator, matter, sourceId, spot, staffUid, startTimeH, stateSummary, status, title, type, uid, whereH);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Waitlist {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    eventInstanceUid: ").append(toIndentedString(eventInstanceUid)).append("\n");
    sb.append("    initiator: ").append(toIndentedString(initiator)).append("\n");
    sb.append("    matter: ").append(toIndentedString(matter)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    spot: ").append(toIndentedString(spot)).append("\n");
    sb.append("    staffUid: ").append(toIndentedString(staffUid)).append("\n");
    sb.append("    startTimeH: ").append(toIndentedString(startTimeH)).append("\n");
    sb.append("    stateSummary: ").append(toIndentedString(stateSummary)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    whereH: ").append(toIndentedString(whereH)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("client_id");
    openapiFields.add("created_at");
    openapiFields.add("entity_id");
    openapiFields.add("entity_type");
    openapiFields.add("event_instance_uid");
    openapiFields.add("initiator");
    openapiFields.add("matter");
    openapiFields.add("source_id");
    openapiFields.add("spot");
    openapiFields.add("staff_uid");
    openapiFields.add("start_time_h");
    openapiFields.add("state_summary");
    openapiFields.add("status");
    openapiFields.add("title");
    openapiFields.add("type");
    openapiFields.add("uid");
    openapiFields.add("where_h");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Waitlist
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Waitlist.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Waitlist is not found in the empty JSON string", Waitlist.openapiRequiredFields.toString()));
        }
      }
      Set<java.util.Map.Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (java.util.Map.Entry<String, JsonElement> entry : entries) {
        if (!Waitlist.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Waitlist` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `matter`
      if (jsonObj.getAsJsonObject("matter") != null) {
        Matter.validateJsonObject(jsonObj.getAsJsonObject("matter"));
      }
      // validate the optional field `state_summary`
      if (jsonObj.getAsJsonObject("state_summary") != null) {
        StateSummary.validateJsonObject(jsonObj.getAsJsonObject("state_summary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Waitlist.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Waitlist' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Waitlist> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Waitlist.class));

       return (TypeAdapter<T>) new TypeAdapter<Waitlist>() {
           @Override
           public void write(JsonWriter out, Waitlist value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Waitlist read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Waitlist given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Waitlist
  * @throws IOException if the JSON string is invalid with respect to Waitlist
  */
  public static Waitlist fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Waitlist.class);
  }

 /**
  * Convert an instance of Waitlist to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

