/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vcita.platform.client.model.FormData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * InlineObject25
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineObject25 {
  public static final String SERIALIZED_NAME_BUSINESS_ID = "business_id";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ID)
  private String businessId;

  public static final String SERIALIZED_NAME_CAMPAIGN = "campaign";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN)
  private String campaign;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_EVENT_INSTANCE_ID = "event_instance_id";
  @SerializedName(SERIALIZED_NAME_EVENT_INSTANCE_ID)
  private String eventInstanceId;

  public static final String SERIALIZED_NAME_FORM_DATA = "form_data";
  @SerializedName(SERIALIZED_NAME_FORM_DATA)
  private FormData formData;

  public static final String SERIALIZED_NAME_MATTER_UID = "matter_uid";
  @SerializedName(SERIALIZED_NAME_MATTER_UID)
  private String matterUid;

  public static final String SERIALIZED_NAME_OPTIONAL_TIMES = "optional_times";
  @SerializedName(SERIALIZED_NAME_OPTIONAL_TIMES)
  private List<OffsetDateTime> optionalTimes = null;

  public static final String SERIALIZED_NAME_SERVICE_ID = "service_id";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public static final String SERIALIZED_NAME_SOURCE_NAME = "source_name";
  @SerializedName(SERIALIZED_NAME_SOURCE_NAME)
  private String sourceName;

  public static final String SERIALIZED_NAME_SOURCE_URL = "source_url";
  @SerializedName(SERIALIZED_NAME_SOURCE_URL)
  private String sourceUrl;

  public static final String SERIALIZED_NAME_STAFF_ID = "staff_id";
  @SerializedName(SERIALIZED_NAME_STAFF_ID)
  private String staffId;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_TIME_ZONE = "time_zone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public InlineObject25() { 
  }

  public InlineObject25 businessId(String businessId) {
    
    this.businessId = businessId;
    return this;
  }

   /**
   * Business uid
   * @return businessId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Business uid")

  public String getBusinessId() {
    return businessId;
  }


  public void setBusinessId(String businessId) {
    this.businessId = businessId;
  }


  public InlineObject25 campaign(String campaign) {
    
    this.campaign = campaign;
    return this;
  }

   /**
   * Source campaign
   * @return campaign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source campaign")

  public String getCampaign() {
    return campaign;
  }


  public void setCampaign(String campaign) {
    this.campaign = campaign;
  }


  public InlineObject25 channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Source channel
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source channel")

  public String getChannel() {
    return channel;
  }


  public void setChannel(String channel) {
    this.channel = channel;
  }


  public InlineObject25 clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Client uid
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Client uid")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public InlineObject25 eventInstanceId(String eventInstanceId) {
    
    this.eventInstanceId = eventInstanceId;
    return this;
  }

   /**
   * Event instance uid. Required for event.
   * @return eventInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Event instance uid. Required for event.")

  public String getEventInstanceId() {
    return eventInstanceId;
  }


  public void setEventInstanceId(String eventInstanceId) {
    this.eventInstanceId = eventInstanceId;
  }


  public InlineObject25 formData(FormData formData) {
    
    this.formData = formData;
    return this;
  }

   /**
   * Get formData
   * @return formData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FormData getFormData() {
    return formData;
  }


  public void setFormData(FormData formData) {
    this.formData = formData;
  }


  public InlineObject25 matterUid(String matterUid) {
    
    this.matterUid = matterUid;
    return this;
  }

   /**
   * Matter uid
   * @return matterUid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Matter uid")

  public String getMatterUid() {
    return matterUid;
  }


  public void setMatterUid(String matterUid) {
    this.matterUid = matterUid;
  }


  public InlineObject25 optionalTimes(List<OffsetDateTime> optionalTimes) {
    
    this.optionalTimes = optionalTimes;
    return this;
  }

  public InlineObject25 addOptionalTimesItem(OffsetDateTime optionalTimesItem) {
    if (this.optionalTimes == null) {
      this.optionalTimes = new ArrayList<>();
    }
    this.optionalTimes.add(optionalTimesItem);
    return this;
  }

   /**
   * Get optionalTimes
   * @return optionalTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OffsetDateTime> getOptionalTimes() {
    return optionalTimes;
  }


  public void setOptionalTimes(List<OffsetDateTime> optionalTimes) {
    this.optionalTimes = optionalTimes;
  }


  public InlineObject25 serviceId(String serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

   /**
   * Service uid. Required for appointment.
   * @return serviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Service uid. Required for appointment.")

  public String getServiceId() {
    return serviceId;
  }


  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }


  public InlineObject25 sourceName(String sourceName) {
    
    this.sourceName = sourceName;
    return this;
  }

   /**
   * Source name
   * @return sourceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source name")

  public String getSourceName() {
    return sourceName;
  }


  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }


  public InlineObject25 sourceUrl(String sourceUrl) {
    
    this.sourceUrl = sourceUrl;
    return this;
  }

   /**
   * Source URL
   * @return sourceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source URL")

  public String getSourceUrl() {
    return sourceUrl;
  }


  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }


  public InlineObject25 staffId(String staffId) {
    
    this.staffId = staffId;
    return this;
  }

   /**
   * Staff uid. Required for appointment.
   * @return staffId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Staff uid. Required for appointment.")

  public String getStaffId() {
    return staffId;
  }


  public void setStaffId(String staffId) {
    this.staffId = staffId;
  }


  public InlineObject25 startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * ISO 8601 format. Required for appointment.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO 8601 format. Required for appointment.")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public InlineObject25 timeZone(String timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Default is set to UTC if not provided
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default is set to UTC if not provided")

  public String getTimeZone() {
    return timeZone;
  }


  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject25 inlineObject25 = (InlineObject25) o;
    return Objects.equals(this.businessId, inlineObject25.businessId) &&
        Objects.equals(this.campaign, inlineObject25.campaign) &&
        Objects.equals(this.channel, inlineObject25.channel) &&
        Objects.equals(this.clientId, inlineObject25.clientId) &&
        Objects.equals(this.eventInstanceId, inlineObject25.eventInstanceId) &&
        Objects.equals(this.formData, inlineObject25.formData) &&
        Objects.equals(this.matterUid, inlineObject25.matterUid) &&
        Objects.equals(this.optionalTimes, inlineObject25.optionalTimes) &&
        Objects.equals(this.serviceId, inlineObject25.serviceId) &&
        Objects.equals(this.sourceName, inlineObject25.sourceName) &&
        Objects.equals(this.sourceUrl, inlineObject25.sourceUrl) &&
        Objects.equals(this.staffId, inlineObject25.staffId) &&
        Objects.equals(this.startTime, inlineObject25.startTime) &&
        Objects.equals(this.timeZone, inlineObject25.timeZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessId, campaign, channel, clientId, eventInstanceId, formData, matterUid, optionalTimes, serviceId, sourceName, sourceUrl, staffId, startTime, timeZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject25 {\n");
    sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
    sb.append("    campaign: ").append(toIndentedString(campaign)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    eventInstanceId: ").append(toIndentedString(eventInstanceId)).append("\n");
    sb.append("    formData: ").append(toIndentedString(formData)).append("\n");
    sb.append("    matterUid: ").append(toIndentedString(matterUid)).append("\n");
    sb.append("    optionalTimes: ").append(toIndentedString(optionalTimes)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    staffId: ").append(toIndentedString(staffId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("business_id");
    openapiFields.add("campaign");
    openapiFields.add("channel");
    openapiFields.add("client_id");
    openapiFields.add("event_instance_id");
    openapiFields.add("form_data");
    openapiFields.add("matter_uid");
    openapiFields.add("optional_times");
    openapiFields.add("service_id");
    openapiFields.add("source_name");
    openapiFields.add("source_url");
    openapiFields.add("staff_id");
    openapiFields.add("start_time");
    openapiFields.add("time_zone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("business_id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InlineObject25
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (InlineObject25.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in InlineObject25 is not found in the empty JSON string", InlineObject25.openapiRequiredFields.toString()));
        }
      }
      Set<java.util.Map.Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (java.util.Map.Entry<String, JsonElement> entry : entries) {
        if (!InlineObject25.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InlineObject25` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InlineObject25.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InlineObject25.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InlineObject25' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InlineObject25> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InlineObject25.class));

       return (TypeAdapter<T>) new TypeAdapter<InlineObject25>() {
           @Override
           public void write(JsonWriter out, InlineObject25 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InlineObject25 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InlineObject25 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InlineObject25
  * @throws IOException if the JSON string is invalid with respect to InlineObject25
  */
  public static InlineObject25 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InlineObject25.class);
  }

 /**
  * Convert an instance of InlineObject25 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

