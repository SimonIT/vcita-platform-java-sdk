/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vcita.platform.client.model.Branding;
import com.vcita.platform.client.model.Plan;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * Meta
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Meta {
  public static final String SERIALIZED_NAME_AUTH_TOKEN = "auth_token";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN)
  private String authToken;

  public static final String SERIALIZED_NAME_BRANDING = "branding";
  @SerializedName(SERIALIZED_NAME_BRANDING)
  private Branding branding;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "external_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_IDENTITIES = "identities";
  @SerializedName(SERIALIZED_NAME_IDENTITIES)
  private List<String> identities = null;

  public static final String SERIALIZED_NAME_IN_SETUP = "in_setup";
  @SerializedName(SERIALIZED_NAME_IN_SETUP)
  private String inSetup;

  public static final String SERIALIZED_NAME_INTENTS = "intents";
  @SerializedName(SERIALIZED_NAME_INTENTS)
  private List<String> intents = null;

  public static final String SERIALIZED_NAME_IS_TEMPLATE = "is_template";
  @SerializedName(SERIALIZED_NAME_IS_TEMPLATE)
  private String isTemplate;

  public static final String SERIALIZED_NAME_MARKETING_CHANNEL = "marketing_channel";
  @SerializedName(SERIALIZED_NAME_MARKETING_CHANNEL)
  private String marketingChannel;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private Plan plan;

  public static final String SERIALIZED_NAME_SUGGESTED_IDENTITIES = "suggested_identities";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_IDENTITIES)
  private List<String> suggestedIdentities = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public Meta() { 
  }

  public Meta authToken(String authToken) {
    
    this.authToken = authToken;
    return this;
  }

   /**
   * Get authToken
   * @return authToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthToken() {
    return authToken;
  }


  public void setAuthToken(String authToken) {
    this.authToken = authToken;
  }


  public Meta branding(Branding branding) {
    
    this.branding = branding;
    return this;
  }

   /**
   * Get branding
   * @return branding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Branding getBranding() {
    return branding;
  }


  public void setBranding(Branding branding) {
    this.branding = branding;
  }


  public Meta externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public Meta identities(List<String> identities) {
    
    this.identities = identities;
    return this;
  }

  public Meta addIdentitiesItem(String identitiesItem) {
    if (this.identities == null) {
      this.identities = new ArrayList<>();
    }
    this.identities.add(identitiesItem);
    return this;
  }

   /**
   * Get identities
   * @return identities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIdentities() {
    return identities;
  }


  public void setIdentities(List<String> identities) {
    this.identities = identities;
  }


  public Meta inSetup(String inSetup) {
    
    this.inSetup = inSetup;
    return this;
  }

   /**
   * Get inSetup
   * @return inSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInSetup() {
    return inSetup;
  }


  public void setInSetup(String inSetup) {
    this.inSetup = inSetup;
  }


  public Meta intents(List<String> intents) {
    
    this.intents = intents;
    return this;
  }

  public Meta addIntentsItem(String intentsItem) {
    if (this.intents == null) {
      this.intents = new ArrayList<>();
    }
    this.intents.add(intentsItem);
    return this;
  }

   /**
   * Get intents
   * @return intents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIntents() {
    return intents;
  }


  public void setIntents(List<String> intents) {
    this.intents = intents;
  }


  public Meta isTemplate(String isTemplate) {
    
    this.isTemplate = isTemplate;
    return this;
  }

   /**
   * Get isTemplate
   * @return isTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsTemplate() {
    return isTemplate;
  }


  public void setIsTemplate(String isTemplate) {
    this.isTemplate = isTemplate;
  }


  public Meta marketingChannel(String marketingChannel) {
    
    this.marketingChannel = marketingChannel;
    return this;
  }

   /**
   * Get marketingChannel
   * @return marketingChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMarketingChannel() {
    return marketingChannel;
  }


  public void setMarketingChannel(String marketingChannel) {
    this.marketingChannel = marketingChannel;
  }


  public Meta note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public Meta plan(Plan plan) {
    
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Plan getPlan() {
    return plan;
  }


  public void setPlan(Plan plan) {
    this.plan = plan;
  }


  public Meta suggestedIdentities(List<String> suggestedIdentities) {
    
    this.suggestedIdentities = suggestedIdentities;
    return this;
  }

  public Meta addSuggestedIdentitiesItem(String suggestedIdentitiesItem) {
    if (this.suggestedIdentities == null) {
      this.suggestedIdentities = new ArrayList<>();
    }
    this.suggestedIdentities.add(suggestedIdentitiesItem);
    return this;
  }

   /**
   * Get suggestedIdentities
   * @return suggestedIdentities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSuggestedIdentities() {
    return suggestedIdentities;
  }


  public void setSuggestedIdentities(List<String> suggestedIdentities) {
    this.suggestedIdentities = suggestedIdentities;
  }


  public Meta tags(String tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTags() {
    return tags;
  }


  public void setTags(String tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Meta meta = (Meta) o;
    return Objects.equals(this.authToken, meta.authToken) &&
        Objects.equals(this.branding, meta.branding) &&
        Objects.equals(this.externalId, meta.externalId) &&
        Objects.equals(this.identities, meta.identities) &&
        Objects.equals(this.inSetup, meta.inSetup) &&
        Objects.equals(this.intents, meta.intents) &&
        Objects.equals(this.isTemplate, meta.isTemplate) &&
        Objects.equals(this.marketingChannel, meta.marketingChannel) &&
        Objects.equals(this.note, meta.note) &&
        Objects.equals(this.plan, meta.plan) &&
        Objects.equals(this.suggestedIdentities, meta.suggestedIdentities) &&
        Objects.equals(this.tags, meta.tags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(authToken, branding, externalId, identities, inSetup, intents, isTemplate, marketingChannel, note, plan, suggestedIdentities, tags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Meta {\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("    branding: ").append(toIndentedString(branding)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    identities: ").append(toIndentedString(identities)).append("\n");
    sb.append("    inSetup: ").append(toIndentedString(inSetup)).append("\n");
    sb.append("    intents: ").append(toIndentedString(intents)).append("\n");
    sb.append("    isTemplate: ").append(toIndentedString(isTemplate)).append("\n");
    sb.append("    marketingChannel: ").append(toIndentedString(marketingChannel)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    suggestedIdentities: ").append(toIndentedString(suggestedIdentities)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auth_token");
    openapiFields.add("branding");
    openapiFields.add("external_id");
    openapiFields.add("identities");
    openapiFields.add("in_setup");
    openapiFields.add("intents");
    openapiFields.add("is_template");
    openapiFields.add("marketing_channel");
    openapiFields.add("note");
    openapiFields.add("plan");
    openapiFields.add("suggested_identities");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Meta
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Meta.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has reuqired fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Meta is not found in the empty JSON string", Meta.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Meta.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Meta` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `branding`
      if (jsonObj.getAsJsonObject("branding") != null) {
        Branding.validateJsonObject(jsonObj.getAsJsonObject("branding"));
      }
      // validate the optional field `plan`
      if (jsonObj.getAsJsonObject("plan") != null) {
        Plan.validateJsonObject(jsonObj.getAsJsonObject("plan"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Meta.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Meta' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Meta> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Meta.class));

       return (TypeAdapter<T>) new TypeAdapter<Meta>() {
           @Override
           public void write(JsonWriter out, Meta value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Meta read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Meta given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Meta
  * @throws IOException if the JSON string is invalid with respect to Meta
  */
  public static Meta fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Meta.class);
  }

 /**
  * Convert an instance of Meta to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

