/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * Datum7
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Datum7 {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_BOOKING_CREDITS = "booking_credits";
  @SerializedName(SERIALIZED_NAME_BOOKING_CREDITS)
  private List<Object> bookingCredits = null;

  public static final String SERIALIZED_NAME_BOOKINGS_USAGE = "bookings_usage";
  @SerializedName(SERIALIZED_NAME_BOOKINGS_USAGE)
  private Integer bookingsUsage;

  public static final String SERIALIZED_NAME_BUSINESS_ID = "business_id";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ID)
  private String businessId;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_CONVERSATION_ID = "conversation_id";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_ID)
  private Object conversationId = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGE_PATH = "image_path";
  @SerializedName(SERIALIZED_NAME_IMAGE_PATH)
  private String imagePath;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "package_id";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private String packageId;

  public static final String SERIALIZED_NAME_PAYMENT_REQUEST_ID = "payment_request_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REQUEST_ID)
  private Object paymentRequestId = null;

  public static final String SERIALIZED_NAME_PAYMENT_REQUEST_STATE = "payment_request_state";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REQUEST_STATE)
  private Object paymentRequestState = null;

  public static final String SERIALIZED_NAME_PAYMENT_STATUS_ID = "payment_status_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_STATUS_ID)
  private Object paymentStatusId = null;

  public static final String SERIALIZED_NAME_PAYMENT_STATUS_STATE = "payment_status_state";
  @SerializedName(SERIALIZED_NAME_PAYMENT_STATUS_STATE)
  private Object paymentStatusState = null;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Object price = null;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private List<Object> products = null;

  public static final String SERIALIZED_NAME_STAFF_ID = "staff_id";
  @SerializedName(SERIALIZED_NAME_STAFF_ID)
  private String staffId;

  public static final String SERIALIZED_NAME_TOTAL_BOOKINGS = "total_bookings";
  @SerializedName(SERIALIZED_NAME_TOTAL_BOOKINGS)
  private Integer totalBookings;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_VALID_FROM = "valid_from";
  @SerializedName(SERIALIZED_NAME_VALID_FROM)
  private LocalDate validFrom;

  public static final String SERIALIZED_NAME_VALID_UNTIL = "valid_until";
  @SerializedName(SERIALIZED_NAME_VALID_UNTIL)
  private LocalDate validUntil;

  public Datum7() { 
  }

  public Datum7 active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public Datum7 bookingCredits(List<Object> bookingCredits) {
    
    this.bookingCredits = bookingCredits;
    return this;
  }

  public Datum7 addBookingCreditsItem(Object bookingCreditsItem) {
    if (this.bookingCredits == null) {
      this.bookingCredits = new ArrayList<>();
    }
    this.bookingCredits.add(bookingCreditsItem);
    return this;
  }

   /**
   * Get bookingCredits
   * @return bookingCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getBookingCredits() {
    return bookingCredits;
  }


  public void setBookingCredits(List<Object> bookingCredits) {
    this.bookingCredits = bookingCredits;
  }


  public Datum7 bookingsUsage(Integer bookingsUsage) {
    
    this.bookingsUsage = bookingsUsage;
    return this;
  }

   /**
   * Get bookingsUsage
   * @return bookingsUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBookingsUsage() {
    return bookingsUsage;
  }


  public void setBookingsUsage(Integer bookingsUsage) {
    this.bookingsUsage = bookingsUsage;
  }


  public Datum7 businessId(String businessId) {
    
    this.businessId = businessId;
    return this;
  }

   /**
   * Get businessId
   * @return businessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBusinessId() {
    return businessId;
  }


  public void setBusinessId(String businessId) {
    this.businessId = businessId;
  }


  public Datum7 clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public Datum7 conversationId(Object conversationId) {
    
    this.conversationId = conversationId;
    return this;
  }

   /**
   * Get conversationId
   * @return conversationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getConversationId() {
    return conversationId;
  }


  public void setConversationId(Object conversationId) {
    this.conversationId = conversationId;
  }


  public Datum7 createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Datum7 currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public Datum7 id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Datum7 imagePath(String imagePath) {
    
    this.imagePath = imagePath;
    return this;
  }

   /**
   * Get imagePath
   * @return imagePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImagePath() {
    return imagePath;
  }


  public void setImagePath(String imagePath) {
    this.imagePath = imagePath;
  }


  public Datum7 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Datum7 packageId(String packageId) {
    
    this.packageId = packageId;
    return this;
  }

   /**
   * Get packageId
   * @return packageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackageId() {
    return packageId;
  }


  public void setPackageId(String packageId) {
    this.packageId = packageId;
  }


  public Datum7 paymentRequestId(Object paymentRequestId) {
    
    this.paymentRequestId = paymentRequestId;
    return this;
  }

   /**
   * Get paymentRequestId
   * @return paymentRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPaymentRequestId() {
    return paymentRequestId;
  }


  public void setPaymentRequestId(Object paymentRequestId) {
    this.paymentRequestId = paymentRequestId;
  }


  public Datum7 paymentRequestState(Object paymentRequestState) {
    
    this.paymentRequestState = paymentRequestState;
    return this;
  }

   /**
   * Get paymentRequestState
   * @return paymentRequestState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPaymentRequestState() {
    return paymentRequestState;
  }


  public void setPaymentRequestState(Object paymentRequestState) {
    this.paymentRequestState = paymentRequestState;
  }


  public Datum7 paymentStatusId(Object paymentStatusId) {
    
    this.paymentStatusId = paymentStatusId;
    return this;
  }

   /**
   * Get paymentStatusId
   * @return paymentStatusId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPaymentStatusId() {
    return paymentStatusId;
  }


  public void setPaymentStatusId(Object paymentStatusId) {
    this.paymentStatusId = paymentStatusId;
  }


  public Datum7 paymentStatusState(Object paymentStatusState) {
    
    this.paymentStatusState = paymentStatusState;
    return this;
  }

   /**
   * Get paymentStatusState
   * @return paymentStatusState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPaymentStatusState() {
    return paymentStatusState;
  }


  public void setPaymentStatusState(Object paymentStatusState) {
    this.paymentStatusState = paymentStatusState;
  }


  public Datum7 price(Object price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPrice() {
    return price;
  }


  public void setPrice(Object price) {
    this.price = price;
  }


  public Datum7 products(List<Object> products) {
    
    this.products = products;
    return this;
  }

  public Datum7 addProductsItem(Object productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Get products
   * @return products
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getProducts() {
    return products;
  }


  public void setProducts(List<Object> products) {
    this.products = products;
  }


  public Datum7 staffId(String staffId) {
    
    this.staffId = staffId;
    return this;
  }

   /**
   * Get staffId
   * @return staffId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStaffId() {
    return staffId;
  }


  public void setStaffId(String staffId) {
    this.staffId = staffId;
  }


  public Datum7 totalBookings(Integer totalBookings) {
    
    this.totalBookings = totalBookings;
    return this;
  }

   /**
   * Get totalBookings
   * @return totalBookings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalBookings() {
    return totalBookings;
  }


  public void setTotalBookings(Integer totalBookings) {
    this.totalBookings = totalBookings;
  }


  public Datum7 updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Datum7 validFrom(LocalDate validFrom) {
    
    this.validFrom = validFrom;
    return this;
  }

   /**
   * Get validFrom
   * @return validFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getValidFrom() {
    return validFrom;
  }


  public void setValidFrom(LocalDate validFrom) {
    this.validFrom = validFrom;
  }


  public Datum7 validUntil(LocalDate validUntil) {
    
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Get validUntil
   * @return validUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getValidUntil() {
    return validUntil;
  }


  public void setValidUntil(LocalDate validUntil) {
    this.validUntil = validUntil;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Datum7 datum7 = (Datum7) o;
    return Objects.equals(this.active, datum7.active) &&
        Objects.equals(this.bookingCredits, datum7.bookingCredits) &&
        Objects.equals(this.bookingsUsage, datum7.bookingsUsage) &&
        Objects.equals(this.businessId, datum7.businessId) &&
        Objects.equals(this.clientId, datum7.clientId) &&
        Objects.equals(this.conversationId, datum7.conversationId) &&
        Objects.equals(this.createdAt, datum7.createdAt) &&
        Objects.equals(this.currency, datum7.currency) &&
        Objects.equals(this.id, datum7.id) &&
        Objects.equals(this.imagePath, datum7.imagePath) &&
        Objects.equals(this.name, datum7.name) &&
        Objects.equals(this.packageId, datum7.packageId) &&
        Objects.equals(this.paymentRequestId, datum7.paymentRequestId) &&
        Objects.equals(this.paymentRequestState, datum7.paymentRequestState) &&
        Objects.equals(this.paymentStatusId, datum7.paymentStatusId) &&
        Objects.equals(this.paymentStatusState, datum7.paymentStatusState) &&
        Objects.equals(this.price, datum7.price) &&
        Objects.equals(this.products, datum7.products) &&
        Objects.equals(this.staffId, datum7.staffId) &&
        Objects.equals(this.totalBookings, datum7.totalBookings) &&
        Objects.equals(this.updatedAt, datum7.updatedAt) &&
        Objects.equals(this.validFrom, datum7.validFrom) &&
        Objects.equals(this.validUntil, datum7.validUntil);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, bookingCredits, bookingsUsage, businessId, clientId, conversationId, createdAt, currency, id, imagePath, name, packageId, paymentRequestId, paymentRequestState, paymentStatusId, paymentStatusState, price, products, staffId, totalBookings, updatedAt, validFrom, validUntil);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Datum7 {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    bookingCredits: ").append(toIndentedString(bookingCredits)).append("\n");
    sb.append("    bookingsUsage: ").append(toIndentedString(bookingsUsage)).append("\n");
    sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    conversationId: ").append(toIndentedString(conversationId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imagePath: ").append(toIndentedString(imagePath)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    paymentRequestId: ").append(toIndentedString(paymentRequestId)).append("\n");
    sb.append("    paymentRequestState: ").append(toIndentedString(paymentRequestState)).append("\n");
    sb.append("    paymentStatusId: ").append(toIndentedString(paymentStatusId)).append("\n");
    sb.append("    paymentStatusState: ").append(toIndentedString(paymentStatusState)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    staffId: ").append(toIndentedString(staffId)).append("\n");
    sb.append("    totalBookings: ").append(toIndentedString(totalBookings)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("booking_credits");
    openapiFields.add("bookings_usage");
    openapiFields.add("business_id");
    openapiFields.add("client_id");
    openapiFields.add("conversation_id");
    openapiFields.add("created_at");
    openapiFields.add("currency");
    openapiFields.add("id");
    openapiFields.add("image_path");
    openapiFields.add("name");
    openapiFields.add("package_id");
    openapiFields.add("payment_request_id");
    openapiFields.add("payment_request_state");
    openapiFields.add("payment_status_id");
    openapiFields.add("payment_status_state");
    openapiFields.add("price");
    openapiFields.add("products");
    openapiFields.add("staff_id");
    openapiFields.add("total_bookings");
    openapiFields.add("updated_at");
    openapiFields.add("valid_from");
    openapiFields.add("valid_until");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Datum7
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Datum7.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Datum7 is not found in the empty JSON string", Datum7.openapiRequiredFields.toString()));
        }
      }
      Set<java.util.Map.Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (java.util.Map.Entry<String, JsonElement> entry : entries) {
        if (!Datum7.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Datum7` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Datum7.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Datum7' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Datum7> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Datum7.class));

       return (TypeAdapter<T>) new TypeAdapter<Datum7>() {
           @Override
           public void write(JsonWriter out, Datum7 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Datum7 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Datum7 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Datum7
  * @throws IOException if the JSON string is invalid with respect to Datum7
  */
  public static Datum7 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Datum7.class);
  }

 /**
  * Convert an instance of Datum7 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

