/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vcita.platform.client.model.ActionData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * Datum6
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Datum6 {
  public static final String SERIALIZED_NAME_ACTED_COUNT = "acted_count";
  @SerializedName(SERIALIZED_NAME_ACTED_COUNT)
  private Integer actedCount;

  public static final String SERIALIZED_NAME_ACTION_DATA = "action_data";
  @SerializedName(SERIALIZED_NAME_ACTION_DATA)
  private ActionData actionData;

  public static final String SERIALIZED_NAME_ADDED_COUNT = "added_count";
  @SerializedName(SERIALIZED_NAME_ADDED_COUNT)
  private Integer addedCount;

  public static final String SERIALIZED_NAME_BACKGROUND_COLOR = "background_color";
  @SerializedName(SERIALIZED_NAME_BACKGROUND_COLOR)
  private Object backgroundColor = null;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_BOUNCED_COUNT = "bounced_count";
  @SerializedName(SERIALIZED_NAME_BOUNCED_COUNT)
  private Integer bouncedCount;

  public static final String SERIALIZED_NAME_BUSINESS_UID = "business_uid";
  @SerializedName(SERIALIZED_NAME_BUSINESS_UID)
  private String businessUid;

  public static final String SERIALIZED_NAME_BUTTON_BACKGROUND_COLOR = "button_background_color";
  @SerializedName(SERIALIZED_NAME_BUTTON_BACKGROUND_COLOR)
  private Object buttonBackgroundColor = null;

  public static final String SERIALIZED_NAME_BUTTON_TEXT = "button_text";
  @SerializedName(SERIALIZED_NAME_BUTTON_TEXT)
  private Object buttonText = null;

  public static final String SERIALIZED_NAME_BUTTON_TEXT_COLOR = "button_text_color";
  @SerializedName(SERIALIZED_NAME_BUTTON_TEXT_COLOR)
  private Object buttonTextColor = null;

  public static final String SERIALIZED_NAME_CLICK_COUNT = "click_count";
  @SerializedName(SERIALIZED_NAME_CLICK_COUNT)
  private Integer clickCount;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DELIVER_COUNT = "deliver_count";
  @SerializedName(SERIALIZED_NAME_DELIVER_COUNT)
  private Integer deliverCount;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private Object image = null;

  public static final String SERIALIZED_NAME_LAST_SCHEDULED_AT = "last_scheduled_at";
  @SerializedName(SERIALIZED_NAME_LAST_SCHEDULED_AT)
  private Object lastScheduledAt = null;

  public static final String SERIALIZED_NAME_LAST_SENT_AT = "last_sent_at";
  @SerializedName(SERIALIZED_NAME_LAST_SENT_AT)
  private Object lastSentAt = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_READ_ONLY = "read_only";
  @SerializedName(SERIALIZED_NAME_READ_ONLY)
  private Boolean readOnly;

  public static final String SERIALIZED_NAME_SMS_CONTENT = "sms_content";
  @SerializedName(SERIALIZED_NAME_SMS_CONTENT)
  private Object smsContent = null;

  public static final String SERIALIZED_NAME_SPAM_COUNT = "spam_count";
  @SerializedName(SERIALIZED_NAME_SPAM_COUNT)
  private Integer spamCount;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private Object subject = null;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_VIEW_COUNT = "view_count";
  @SerializedName(SERIALIZED_NAME_VIEW_COUNT)
  private Integer viewCount;

  public Datum6() { 
  }

  public Datum6 actedCount(Integer actedCount) {
    
    this.actedCount = actedCount;
    return this;
  }

   /**
   * Get actedCount
   * @return actedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getActedCount() {
    return actedCount;
  }


  public void setActedCount(Integer actedCount) {
    this.actedCount = actedCount;
  }


  public Datum6 actionData(ActionData actionData) {
    
    this.actionData = actionData;
    return this;
  }

   /**
   * Get actionData
   * @return actionData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ActionData getActionData() {
    return actionData;
  }


  public void setActionData(ActionData actionData) {
    this.actionData = actionData;
  }


  public Datum6 addedCount(Integer addedCount) {
    
    this.addedCount = addedCount;
    return this;
  }

   /**
   * Get addedCount
   * @return addedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAddedCount() {
    return addedCount;
  }


  public void setAddedCount(Integer addedCount) {
    this.addedCount = addedCount;
  }


  public Datum6 backgroundColor(Object backgroundColor) {
    
    this.backgroundColor = backgroundColor;
    return this;
  }

   /**
   * Get backgroundColor
   * @return backgroundColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getBackgroundColor() {
    return backgroundColor;
  }


  public void setBackgroundColor(Object backgroundColor) {
    this.backgroundColor = backgroundColor;
  }


  public Datum6 body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public Datum6 bouncedCount(Integer bouncedCount) {
    
    this.bouncedCount = bouncedCount;
    return this;
  }

   /**
   * Get bouncedCount
   * @return bouncedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBouncedCount() {
    return bouncedCount;
  }


  public void setBouncedCount(Integer bouncedCount) {
    this.bouncedCount = bouncedCount;
  }


  public Datum6 businessUid(String businessUid) {
    
    this.businessUid = businessUid;
    return this;
  }

   /**
   * Get businessUid
   * @return businessUid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBusinessUid() {
    return businessUid;
  }


  public void setBusinessUid(String businessUid) {
    this.businessUid = businessUid;
  }


  public Datum6 buttonBackgroundColor(Object buttonBackgroundColor) {
    
    this.buttonBackgroundColor = buttonBackgroundColor;
    return this;
  }

   /**
   * Get buttonBackgroundColor
   * @return buttonBackgroundColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getButtonBackgroundColor() {
    return buttonBackgroundColor;
  }


  public void setButtonBackgroundColor(Object buttonBackgroundColor) {
    this.buttonBackgroundColor = buttonBackgroundColor;
  }


  public Datum6 buttonText(Object buttonText) {
    
    this.buttonText = buttonText;
    return this;
  }

   /**
   * Get buttonText
   * @return buttonText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getButtonText() {
    return buttonText;
  }


  public void setButtonText(Object buttonText) {
    this.buttonText = buttonText;
  }


  public Datum6 buttonTextColor(Object buttonTextColor) {
    
    this.buttonTextColor = buttonTextColor;
    return this;
  }

   /**
   * Get buttonTextColor
   * @return buttonTextColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getButtonTextColor() {
    return buttonTextColor;
  }


  public void setButtonTextColor(Object buttonTextColor) {
    this.buttonTextColor = buttonTextColor;
  }


  public Datum6 clickCount(Integer clickCount) {
    
    this.clickCount = clickCount;
    return this;
  }

   /**
   * Get clickCount
   * @return clickCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getClickCount() {
    return clickCount;
  }


  public void setClickCount(Integer clickCount) {
    this.clickCount = clickCount;
  }


  public Datum6 createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Datum6 deliverCount(Integer deliverCount) {
    
    this.deliverCount = deliverCount;
    return this;
  }

   /**
   * Get deliverCount
   * @return deliverCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeliverCount() {
    return deliverCount;
  }


  public void setDeliverCount(Integer deliverCount) {
    this.deliverCount = deliverCount;
  }


  public Datum6 image(Object image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getImage() {
    return image;
  }


  public void setImage(Object image) {
    this.image = image;
  }


  public Datum6 lastScheduledAt(Object lastScheduledAt) {
    
    this.lastScheduledAt = lastScheduledAt;
    return this;
  }

   /**
   * Get lastScheduledAt
   * @return lastScheduledAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLastScheduledAt() {
    return lastScheduledAt;
  }


  public void setLastScheduledAt(Object lastScheduledAt) {
    this.lastScheduledAt = lastScheduledAt;
  }


  public Datum6 lastSentAt(Object lastSentAt) {
    
    this.lastSentAt = lastSentAt;
    return this;
  }

   /**
   * Get lastSentAt
   * @return lastSentAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLastSentAt() {
    return lastSentAt;
  }


  public void setLastSentAt(Object lastSentAt) {
    this.lastSentAt = lastSentAt;
  }


  public Datum6 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Datum6 readOnly(Boolean readOnly) {
    
    this.readOnly = readOnly;
    return this;
  }

   /**
   * Get readOnly
   * @return readOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReadOnly() {
    return readOnly;
  }


  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public Datum6 smsContent(Object smsContent) {
    
    this.smsContent = smsContent;
    return this;
  }

   /**
   * Get smsContent
   * @return smsContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSmsContent() {
    return smsContent;
  }


  public void setSmsContent(Object smsContent) {
    this.smsContent = smsContent;
  }


  public Datum6 spamCount(Integer spamCount) {
    
    this.spamCount = spamCount;
    return this;
  }

   /**
   * Get spamCount
   * @return spamCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSpamCount() {
    return spamCount;
  }


  public void setSpamCount(Integer spamCount) {
    this.spamCount = spamCount;
  }


  public Datum6 subject(Object subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSubject() {
    return subject;
  }


  public void setSubject(Object subject) {
    this.subject = subject;
  }


  public Datum6 title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Datum6 uid(String uid) {
    
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUid() {
    return uid;
  }


  public void setUid(String uid) {
    this.uid = uid;
  }


  public Datum6 updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Datum6 viewCount(Integer viewCount) {
    
    this.viewCount = viewCount;
    return this;
  }

   /**
   * Get viewCount
   * @return viewCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getViewCount() {
    return viewCount;
  }


  public void setViewCount(Integer viewCount) {
    this.viewCount = viewCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Datum6 datum6 = (Datum6) o;
    return Objects.equals(this.actedCount, datum6.actedCount) &&
        Objects.equals(this.actionData, datum6.actionData) &&
        Objects.equals(this.addedCount, datum6.addedCount) &&
        Objects.equals(this.backgroundColor, datum6.backgroundColor) &&
        Objects.equals(this.body, datum6.body) &&
        Objects.equals(this.bouncedCount, datum6.bouncedCount) &&
        Objects.equals(this.businessUid, datum6.businessUid) &&
        Objects.equals(this.buttonBackgroundColor, datum6.buttonBackgroundColor) &&
        Objects.equals(this.buttonText, datum6.buttonText) &&
        Objects.equals(this.buttonTextColor, datum6.buttonTextColor) &&
        Objects.equals(this.clickCount, datum6.clickCount) &&
        Objects.equals(this.createdAt, datum6.createdAt) &&
        Objects.equals(this.deliverCount, datum6.deliverCount) &&
        Objects.equals(this.image, datum6.image) &&
        Objects.equals(this.lastScheduledAt, datum6.lastScheduledAt) &&
        Objects.equals(this.lastSentAt, datum6.lastSentAt) &&
        Objects.equals(this.name, datum6.name) &&
        Objects.equals(this.readOnly, datum6.readOnly) &&
        Objects.equals(this.smsContent, datum6.smsContent) &&
        Objects.equals(this.spamCount, datum6.spamCount) &&
        Objects.equals(this.subject, datum6.subject) &&
        Objects.equals(this.title, datum6.title) &&
        Objects.equals(this.uid, datum6.uid) &&
        Objects.equals(this.updatedAt, datum6.updatedAt) &&
        Objects.equals(this.viewCount, datum6.viewCount);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actedCount, actionData, addedCount, backgroundColor, body, bouncedCount, businessUid, buttonBackgroundColor, buttonText, buttonTextColor, clickCount, createdAt, deliverCount, image, lastScheduledAt, lastSentAt, name, readOnly, smsContent, spamCount, subject, title, uid, updatedAt, viewCount);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Datum6 {\n");
    sb.append("    actedCount: ").append(toIndentedString(actedCount)).append("\n");
    sb.append("    actionData: ").append(toIndentedString(actionData)).append("\n");
    sb.append("    addedCount: ").append(toIndentedString(addedCount)).append("\n");
    sb.append("    backgroundColor: ").append(toIndentedString(backgroundColor)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    bouncedCount: ").append(toIndentedString(bouncedCount)).append("\n");
    sb.append("    businessUid: ").append(toIndentedString(businessUid)).append("\n");
    sb.append("    buttonBackgroundColor: ").append(toIndentedString(buttonBackgroundColor)).append("\n");
    sb.append("    buttonText: ").append(toIndentedString(buttonText)).append("\n");
    sb.append("    buttonTextColor: ").append(toIndentedString(buttonTextColor)).append("\n");
    sb.append("    clickCount: ").append(toIndentedString(clickCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deliverCount: ").append(toIndentedString(deliverCount)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    lastScheduledAt: ").append(toIndentedString(lastScheduledAt)).append("\n");
    sb.append("    lastSentAt: ").append(toIndentedString(lastSentAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    smsContent: ").append(toIndentedString(smsContent)).append("\n");
    sb.append("    spamCount: ").append(toIndentedString(spamCount)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acted_count");
    openapiFields.add("action_data");
    openapiFields.add("added_count");
    openapiFields.add("background_color");
    openapiFields.add("body");
    openapiFields.add("bounced_count");
    openapiFields.add("business_uid");
    openapiFields.add("button_background_color");
    openapiFields.add("button_text");
    openapiFields.add("button_text_color");
    openapiFields.add("click_count");
    openapiFields.add("created_at");
    openapiFields.add("deliver_count");
    openapiFields.add("image");
    openapiFields.add("last_scheduled_at");
    openapiFields.add("last_sent_at");
    openapiFields.add("name");
    openapiFields.add("read_only");
    openapiFields.add("sms_content");
    openapiFields.add("spam_count");
    openapiFields.add("subject");
    openapiFields.add("title");
    openapiFields.add("uid");
    openapiFields.add("updated_at");
    openapiFields.add("view_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Datum6
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Datum6.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has reuqired fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Datum6 is not found in the empty JSON string", Datum6.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Datum6.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Datum6` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `action_data`
      if (jsonObj.getAsJsonObject("action_data") != null) {
        ActionData.validateJsonObject(jsonObj.getAsJsonObject("action_data"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Datum6.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Datum6' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Datum6> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Datum6.class));

       return (TypeAdapter<T>) new TypeAdapter<Datum6>() {
           @Override
           public void write(JsonWriter out, Datum6 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Datum6 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Datum6 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Datum6
  * @throws IOException if the JSON string is invalid with respect to Datum6
  */
  public static Datum6 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Datum6.class);
  }

 /**
  * Convert an instance of Datum6 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

