/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vcita.platform.client.model.Description;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * AppData1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AppData1 {
  public static final String SERIALIZED_NAME_APP_CODE_NAME = "app_code_name";
  @SerializedName(SERIALIZED_NAME_APP_CODE_NAME)
  private String appCodeName;

  public static final String SERIALIZED_NAME_APP_FEATURES = "app_features";
  @SerializedName(SERIALIZED_NAME_APP_FEATURES)
  private List<Object> appFeatures = null;

  public static final String SERIALIZED_NAME_APP_HOST = "app_host";
  @SerializedName(SERIALIZED_NAME_APP_HOST)
  private URI appHost;

  public static final String SERIALIZED_NAME_APP_ID = "app_id";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private Integer appId;

  public static final String SERIALIZED_NAME_APP_NAME = "app_name";
  @SerializedName(SERIALIZED_NAME_APP_NAME)
  private String appName;

  public static final String SERIALIZED_NAME_APP_SCREENSHOT_URIS = "app_screenshot_uris";
  @SerializedName(SERIALIZED_NAME_APP_SCREENSHOT_URIS)
  private List<Object> appScreenshotUris = null;

  public static final String SERIALIZED_NAME_CONTACT_SUPPORT_LINK = "contact_support_link";
  @SerializedName(SERIALIZED_NAME_CONTACT_SUPPORT_LINK)
  private Object contactSupportLink = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Description description;

  public static final String SERIALIZED_NAME_IS_INTERNAL = "is_internal";
  @SerializedName(SERIALIZED_NAME_IS_INTERNAL)
  private Boolean isInternal;

  public static final String SERIALIZED_NAME_LOCALES = "locales";
  @SerializedName(SERIALIZED_NAME_LOCALES)
  private List<Object> locales = null;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private Object permissions = null;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY_LINK = "privacy_policy_link";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY_LINK)
  private Object privacyPolicyLink = null;

  public static final String SERIALIZED_NAME_REQUIRES_UPGRADE = "requires_upgrade";
  @SerializedName(SERIALIZED_NAME_REQUIRES_UPGRADE)
  private Boolean requiresUpgrade;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SUPPORTED_COUNTRIES = "supported_countries";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_COUNTRIES)
  private List<Object> supportedCountries = null;

  public static final String SERIALIZED_NAME_URL_PARAMS = "url_params";
  @SerializedName(SERIALIZED_NAME_URL_PARAMS)
  private List<String> urlParams = null;

  public AppData1() { 
  }

  public AppData1 appCodeName(String appCodeName) {
    
    this.appCodeName = appCodeName;
    return this;
  }

   /**
   * Get appCodeName
   * @return appCodeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppCodeName() {
    return appCodeName;
  }


  public void setAppCodeName(String appCodeName) {
    this.appCodeName = appCodeName;
  }


  public AppData1 appFeatures(List<Object> appFeatures) {
    
    this.appFeatures = appFeatures;
    return this;
  }

  public AppData1 addAppFeaturesItem(Object appFeaturesItem) {
    if (this.appFeatures == null) {
      this.appFeatures = new ArrayList<>();
    }
    this.appFeatures.add(appFeaturesItem);
    return this;
  }

   /**
   * Get appFeatures
   * @return appFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAppFeatures() {
    return appFeatures;
  }


  public void setAppFeatures(List<Object> appFeatures) {
    this.appFeatures = appFeatures;
  }


  public AppData1 appHost(URI appHost) {
    
    this.appHost = appHost;
    return this;
  }

   /**
   * Get appHost
   * @return appHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getAppHost() {
    return appHost;
  }


  public void setAppHost(URI appHost) {
    this.appHost = appHost;
  }


  public AppData1 appId(Integer appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * Get appId
   * @return appId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAppId() {
    return appId;
  }


  public void setAppId(Integer appId) {
    this.appId = appId;
  }


  public AppData1 appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppName() {
    return appName;
  }


  public void setAppName(String appName) {
    this.appName = appName;
  }


  public AppData1 appScreenshotUris(List<Object> appScreenshotUris) {
    
    this.appScreenshotUris = appScreenshotUris;
    return this;
  }

  public AppData1 addAppScreenshotUrisItem(Object appScreenshotUrisItem) {
    if (this.appScreenshotUris == null) {
      this.appScreenshotUris = new ArrayList<>();
    }
    this.appScreenshotUris.add(appScreenshotUrisItem);
    return this;
  }

   /**
   * Get appScreenshotUris
   * @return appScreenshotUris
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAppScreenshotUris() {
    return appScreenshotUris;
  }


  public void setAppScreenshotUris(List<Object> appScreenshotUris) {
    this.appScreenshotUris = appScreenshotUris;
  }


  public AppData1 contactSupportLink(Object contactSupportLink) {
    
    this.contactSupportLink = contactSupportLink;
    return this;
  }

   /**
   * Get contactSupportLink
   * @return contactSupportLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getContactSupportLink() {
    return contactSupportLink;
  }


  public void setContactSupportLink(Object contactSupportLink) {
    this.contactSupportLink = contactSupportLink;
  }


  public AppData1 description(Description description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Description getDescription() {
    return description;
  }


  public void setDescription(Description description) {
    this.description = description;
  }


  public AppData1 isInternal(Boolean isInternal) {
    
    this.isInternal = isInternal;
    return this;
  }

   /**
   * Get isInternal
   * @return isInternal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsInternal() {
    return isInternal;
  }


  public void setIsInternal(Boolean isInternal) {
    this.isInternal = isInternal;
  }


  public AppData1 locales(List<Object> locales) {
    
    this.locales = locales;
    return this;
  }

  public AppData1 addLocalesItem(Object localesItem) {
    if (this.locales == null) {
      this.locales = new ArrayList<>();
    }
    this.locales.add(localesItem);
    return this;
  }

   /**
   * Get locales
   * @return locales
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getLocales() {
    return locales;
  }


  public void setLocales(List<Object> locales) {
    this.locales = locales;
  }


  public AppData1 permissions(Object permissions) {
    
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPermissions() {
    return permissions;
  }


  public void setPermissions(Object permissions) {
    this.permissions = permissions;
  }


  public AppData1 privacyPolicyLink(Object privacyPolicyLink) {
    
    this.privacyPolicyLink = privacyPolicyLink;
    return this;
  }

   /**
   * Get privacyPolicyLink
   * @return privacyPolicyLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPrivacyPolicyLink() {
    return privacyPolicyLink;
  }


  public void setPrivacyPolicyLink(Object privacyPolicyLink) {
    this.privacyPolicyLink = privacyPolicyLink;
  }


  public AppData1 requiresUpgrade(Boolean requiresUpgrade) {
    
    this.requiresUpgrade = requiresUpgrade;
    return this;
  }

   /**
   * Get requiresUpgrade
   * @return requiresUpgrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequiresUpgrade() {
    return requiresUpgrade;
  }


  public void setRequiresUpgrade(Boolean requiresUpgrade) {
    this.requiresUpgrade = requiresUpgrade;
  }


  public AppData1 status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public AppData1 supportedCountries(List<Object> supportedCountries) {
    
    this.supportedCountries = supportedCountries;
    return this;
  }

  public AppData1 addSupportedCountriesItem(Object supportedCountriesItem) {
    if (this.supportedCountries == null) {
      this.supportedCountries = new ArrayList<>();
    }
    this.supportedCountries.add(supportedCountriesItem);
    return this;
  }

   /**
   * Get supportedCountries
   * @return supportedCountries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getSupportedCountries() {
    return supportedCountries;
  }


  public void setSupportedCountries(List<Object> supportedCountries) {
    this.supportedCountries = supportedCountries;
  }


  public AppData1 urlParams(List<String> urlParams) {
    
    this.urlParams = urlParams;
    return this;
  }

  public AppData1 addUrlParamsItem(String urlParamsItem) {
    if (this.urlParams == null) {
      this.urlParams = new ArrayList<>();
    }
    this.urlParams.add(urlParamsItem);
    return this;
  }

   /**
   * Get urlParams
   * @return urlParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUrlParams() {
    return urlParams;
  }


  public void setUrlParams(List<String> urlParams) {
    this.urlParams = urlParams;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppData1 appData1 = (AppData1) o;
    return Objects.equals(this.appCodeName, appData1.appCodeName) &&
        Objects.equals(this.appFeatures, appData1.appFeatures) &&
        Objects.equals(this.appHost, appData1.appHost) &&
        Objects.equals(this.appId, appData1.appId) &&
        Objects.equals(this.appName, appData1.appName) &&
        Objects.equals(this.appScreenshotUris, appData1.appScreenshotUris) &&
        Objects.equals(this.contactSupportLink, appData1.contactSupportLink) &&
        Objects.equals(this.description, appData1.description) &&
        Objects.equals(this.isInternal, appData1.isInternal) &&
        Objects.equals(this.locales, appData1.locales) &&
        Objects.equals(this.permissions, appData1.permissions) &&
        Objects.equals(this.privacyPolicyLink, appData1.privacyPolicyLink) &&
        Objects.equals(this.requiresUpgrade, appData1.requiresUpgrade) &&
        Objects.equals(this.status, appData1.status) &&
        Objects.equals(this.supportedCountries, appData1.supportedCountries) &&
        Objects.equals(this.urlParams, appData1.urlParams);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(appCodeName, appFeatures, appHost, appId, appName, appScreenshotUris, contactSupportLink, description, isInternal, locales, permissions, privacyPolicyLink, requiresUpgrade, status, supportedCountries, urlParams);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppData1 {\n");
    sb.append("    appCodeName: ").append(toIndentedString(appCodeName)).append("\n");
    sb.append("    appFeatures: ").append(toIndentedString(appFeatures)).append("\n");
    sb.append("    appHost: ").append(toIndentedString(appHost)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appScreenshotUris: ").append(toIndentedString(appScreenshotUris)).append("\n");
    sb.append("    contactSupportLink: ").append(toIndentedString(contactSupportLink)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isInternal: ").append(toIndentedString(isInternal)).append("\n");
    sb.append("    locales: ").append(toIndentedString(locales)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    privacyPolicyLink: ").append(toIndentedString(privacyPolicyLink)).append("\n");
    sb.append("    requiresUpgrade: ").append(toIndentedString(requiresUpgrade)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    supportedCountries: ").append(toIndentedString(supportedCountries)).append("\n");
    sb.append("    urlParams: ").append(toIndentedString(urlParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_code_name");
    openapiFields.add("app_features");
    openapiFields.add("app_host");
    openapiFields.add("app_id");
    openapiFields.add("app_name");
    openapiFields.add("app_screenshot_uris");
    openapiFields.add("contact_support_link");
    openapiFields.add("description");
    openapiFields.add("is_internal");
    openapiFields.add("locales");
    openapiFields.add("permissions");
    openapiFields.add("privacy_policy_link");
    openapiFields.add("requires_upgrade");
    openapiFields.add("status");
    openapiFields.add("supported_countries");
    openapiFields.add("url_params");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AppData1
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AppData1.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppData1 is not found in the empty JSON string", AppData1.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AppData1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppData1` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `description`
      if (jsonObj.getAsJsonObject("description") != null) {
        Description.validateJsonObject(jsonObj.getAsJsonObject("description"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppData1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppData1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppData1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppData1.class));

       return (TypeAdapter<T>) new TypeAdapter<AppData1>() {
           @Override
           public void write(JsonWriter out, AppData1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppData1 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppData1 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppData1
  * @throws IOException if the JSON string is invalid with respect to AppData1
  */
  public static AppData1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppData1.class);
  }

 /**
  * Convert an instance of AppData1 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

