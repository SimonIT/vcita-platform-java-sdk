/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * PaymentCardsSyncCardDatails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentCardsSyncCardDatails {
  public static final String SERIALIZED_NAME_CARD_BRAND = "card_brand";
  @SerializedName(SERIALIZED_NAME_CARD_BRAND)
  private String cardBrand;

  public static final String SERIALIZED_NAME_CARDHOLDER_NAME = "cardholder_name";
  @SerializedName(SERIALIZED_NAME_CARDHOLDER_NAME)
  private String cardholderName;

  public static final String SERIALIZED_NAME_EXP_MONTH = "exp_month";
  @SerializedName(SERIALIZED_NAME_EXP_MONTH)
  private BigDecimal expMonth;

  public static final String SERIALIZED_NAME_EXP_YEAR = "exp_year";
  @SerializedName(SERIALIZED_NAME_EXP_YEAR)
  private BigDecimal expYear;

  public static final String SERIALIZED_NAME_LAST4 = "last_4";
  @SerializedName(SERIALIZED_NAME_LAST4)
  private String last4;

  public PaymentCardsSyncCardDatails() { 
  }

  public PaymentCardsSyncCardDatails cardBrand(String cardBrand) {
    
    this.cardBrand = cardBrand;
    return this;
  }

   /**
   * card_brand
   * @return cardBrand
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "card_brand")

  public String getCardBrand() {
    return cardBrand;
  }


  public void setCardBrand(String cardBrand) {
    this.cardBrand = cardBrand;
  }


  public PaymentCardsSyncCardDatails cardholderName(String cardholderName) {
    
    this.cardholderName = cardholderName;
    return this;
  }

   /**
   * cardholder_name
   * @return cardholderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "cardholder_name")

  public String getCardholderName() {
    return cardholderName;
  }


  public void setCardholderName(String cardholderName) {
    this.cardholderName = cardholderName;
  }


  public PaymentCardsSyncCardDatails expMonth(BigDecimal expMonth) {
    
    this.expMonth = expMonth;
    return this;
  }

   /**
   * exp_month
   * @return expMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "exp_month")

  public BigDecimal getExpMonth() {
    return expMonth;
  }


  public void setExpMonth(BigDecimal expMonth) {
    this.expMonth = expMonth;
  }


  public PaymentCardsSyncCardDatails expYear(BigDecimal expYear) {
    
    this.expYear = expYear;
    return this;
  }

   /**
   * exp_year
   * @return expYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "exp_year")

  public BigDecimal getExpYear() {
    return expYear;
  }


  public void setExpYear(BigDecimal expYear) {
    this.expYear = expYear;
  }


  public PaymentCardsSyncCardDatails last4(String last4) {
    
    this.last4 = last4;
    return this;
  }

   /**
   * last_4
   * @return last4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "last_4")

  public String getLast4() {
    return last4;
  }


  public void setLast4(String last4) {
    this.last4 = last4;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentCardsSyncCardDatails paymentCardsSyncCardDatails = (PaymentCardsSyncCardDatails) o;
    return Objects.equals(this.cardBrand, paymentCardsSyncCardDatails.cardBrand) &&
        Objects.equals(this.cardholderName, paymentCardsSyncCardDatails.cardholderName) &&
        Objects.equals(this.expMonth, paymentCardsSyncCardDatails.expMonth) &&
        Objects.equals(this.expYear, paymentCardsSyncCardDatails.expYear) &&
        Objects.equals(this.last4, paymentCardsSyncCardDatails.last4);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardBrand, cardholderName, expMonth, expYear, last4);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentCardsSyncCardDatails {\n");
    sb.append("    cardBrand: ").append(toIndentedString(cardBrand)).append("\n");
    sb.append("    cardholderName: ").append(toIndentedString(cardholderName)).append("\n");
    sb.append("    expMonth: ").append(toIndentedString(expMonth)).append("\n");
    sb.append("    expYear: ").append(toIndentedString(expYear)).append("\n");
    sb.append("    last4: ").append(toIndentedString(last4)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("card_brand");
    openapiFields.add("cardholder_name");
    openapiFields.add("exp_month");
    openapiFields.add("exp_year");
    openapiFields.add("last_4");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PaymentCardsSyncCardDatails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PaymentCardsSyncCardDatails.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentCardsSyncCardDatails is not found in the empty JSON string", PaymentCardsSyncCardDatails.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PaymentCardsSyncCardDatails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PaymentCardsSyncCardDatails` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentCardsSyncCardDatails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentCardsSyncCardDatails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentCardsSyncCardDatails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentCardsSyncCardDatails.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentCardsSyncCardDatails>() {
           @Override
           public void write(JsonWriter out, PaymentCardsSyncCardDatails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentCardsSyncCardDatails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PaymentCardsSyncCardDatails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PaymentCardsSyncCardDatails
  * @throws IOException if the JSON string is invalid with respect to PaymentCardsSyncCardDatails
  */
  public static PaymentCardsSyncCardDatails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentCardsSyncCardDatails.class);
  }

 /**
  * Convert an instance of PaymentCardsSyncCardDatails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

