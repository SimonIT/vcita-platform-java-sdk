/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * InlineObject15
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineObject15 {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_BUSINESS_ID = "business_id";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ID)
  private String businessId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_IDENTIFIER_TYPE = "identifier_type";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER_TYPE)
  private String identifierType;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MESSAGE_DATA = "message_data";
  @SerializedName(SERIALIZED_NAME_MESSAGE_DATA)
  private Map<String, String> messageData = null;

  public static final String SERIALIZED_NAME_NOTIFICATIONS = "notifications";
  @SerializedName(SERIALIZED_NAME_NOTIFICATIONS)
  private String notifications;

  public static final String SERIALIZED_NAME_OPT_IN = "opt_in";
  @SerializedName(SERIALIZED_NAME_OPT_IN)
  private String optIn;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_REQUEST_DATA = "request_data";
  @SerializedName(SERIALIZED_NAME_REQUEST_DATA)
  private Map<String, String> requestData = null;

  public static final String SERIALIZED_NAME_REQUEST_TITLE = "request_title";
  @SerializedName(SERIALIZED_NAME_REQUEST_TITLE)
  private String requestTitle;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_SOURCE_URL = "source_url";
  @SerializedName(SERIALIZED_NAME_SOURCE_URL)
  private String sourceUrl;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SYSTEM_MESSAGE = "system_message";
  @SerializedName(SERIALIZED_NAME_SYSTEM_MESSAGE)
  private String systemMessage;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public static final String SERIALIZED_NAME_UNIQUE_ID = "unique_id";
  @SerializedName(SERIALIZED_NAME_UNIQUE_ID)
  private String uniqueId;

  public InlineObject15() { 
  }

  public InlineObject15 address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * Lead&#39;s address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lead's address")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public InlineObject15 businessId(String businessId) {
    
    this.businessId = businessId;
    return this;
  }

   /**
   * A unique identifier of the business. Can be the Business UID or nickname\\external ID.
   * @return businessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique identifier of the business. Can be the Business UID or nickname\\external ID.")

  public String getBusinessId() {
    return businessId;
  }


  public void setBusinessId(String businessId) {
    this.businessId = businessId;
  }


  public InlineObject15 email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Lead email address. Unique per business.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lead email address. Unique per business.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public InlineObject15 firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Lead first name. Mandatory for a new lead.
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Lead first name. Mandatory for a new lead.")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public InlineObject15 identifierType(String identifierType) {
    
    this.identifierType = identifierType;
    return this;
  }

   /**
   * Defines which unique identifier will be used to search for an existing lead or create a new one. Possible values: \&quot;email\&quot; or \&quot;unique_id\&quot;
   * @return identifierType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Defines which unique identifier will be used to search for an existing lead or create a new one. Possible values: \"email\" or \"unique_id\"")

  public String getIdentifierType() {
    return identifierType;
  }


  public void setIdentifierType(String identifierType) {
    this.identifierType = identifierType;
  }


  public InlineObject15 lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Lead last name.
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lead last name.")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public InlineObject15 messageData(Map<String, String> messageData) {
    
    this.messageData = messageData;
    return this;
  }

  public InlineObject15 putMessageDataItem(String key, String messageDataItem) {
    if (this.messageData == null) {
      this.messageData = new HashMap<>();
    }
    this.messageData.put(key, messageDataItem);
    return this;
  }

   /**
   * Key and value that will appear in message
   * @return messageData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key and value that will appear in message")

  public Map<String, String> getMessageData() {
    return messageData;
  }


  public void setMessageData(Map<String, String> messageData) {
    this.messageData = messageData;
  }


  public InlineObject15 notifications(String notifications) {
    
    this.notifications = notifications;
    return this;
  }

   /**
   * A list of notifications to send after processing of the lead. Possible values: \&quot;auto-reply\&quot; (thank you email to the end user), \&quot;email\&quot; (notify the business owner) or \&quot;sms\&quot; (text notification to the business owner). None if empty.
   * @return notifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of notifications to send after processing of the lead. Possible values: \"auto-reply\" (thank you email to the end user), \"email\" (notify the business owner) or \"sms\" (text notification to the business owner). None if empty.")

  public String getNotifications() {
    return notifications;
  }


  public void setNotifications(String notifications) {
    this.notifications = notifications;
  }


  public InlineObject15 optIn(String optIn) {
    
    this.optIn = optIn;
    return this;
  }

   /**
   * Send \&quot;true\&quot; if lead opted in for promotions. Make sure the \&quot;opt-in\&quot; client card field is added to the client card under Settings&gt;Client card.
   * @return optIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send \"true\" if lead opted in for promotions. Make sure the \"opt-in\" client card field is added to the client card under Settings>Client card.")

  public String getOptIn() {
    return optIn;
  }


  public void setOptIn(String optIn) {
    this.optIn = optIn;
  }


  public InlineObject15 phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Lead phone number.
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lead phone number.")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public InlineObject15 requestData(Map<String, String> requestData) {
    
    this.requestData = requestData;
    return this;
  }

  public InlineObject15 putRequestDataItem(String key, String requestDataItem) {
    if (this.requestData == null) {
      this.requestData = new HashMap<>();
    }
    this.requestData.put(key, requestDataItem);
    return this;
  }

   /**
   * Key and value properties that will update new lead and appear in message
   * @return requestData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key and value properties that will update new lead and appear in message")

  public Map<String, String> getRequestData() {
    return requestData;
  }


  public void setRequestData(Map<String, String> requestData) {
    this.requestData = requestData;
  }


  public InlineObject15 requestTitle(String requestTitle) {
    
    this.requestTitle = requestTitle;
    return this;
  }

   /**
   * Request title. Will also be the created conversation title.
   * @return requestTitle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Request title. Will also be the created conversation title.")

  public String getRequestTitle() {
    return requestTitle;
  }


  public void setRequestTitle(String requestTitle) {
    this.requestTitle = requestTitle;
  }


  public InlineObject15 source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Will be displayed to the business owner as the lead source
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Will be displayed to the business owner as the lead source")

  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    this.source = source;
  }


  public InlineObject15 sourceUrl(String sourceUrl) {
    
    this.sourceUrl = sourceUrl;
    return this;
  }

   /**
   * The URL of the page where the lead was created.
   * @return sourceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of the page where the lead was created.")

  public String getSourceUrl() {
    return sourceUrl;
  }


  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }


  public InlineObject15 status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Use a client status to categorize clients according to their relationship with your business
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use a client status to categorize clients according to their relationship with your business")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public InlineObject15 systemMessage(String systemMessage) {
    
    this.systemMessage = systemMessage;
    return this;
  }

   /**
   * A message displayed to the business owner to introduce the lead. May contain links.
   * @return systemMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A message displayed to the business owner to introduce the lead. May contain links.")

  public String getSystemMessage() {
    return systemMessage;
  }


  public void setSystemMessage(String systemMessage) {
    this.systemMessage = systemMessage;
  }


  public InlineObject15 tags(String tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Customized labels that enbale you to sort your data using personalized words, phrases or themes that are meaningful to you and your business
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customized labels that enbale you to sort your data using personalized words, phrases or themes that are meaningful to you and your business")

  public String getTags() {
    return tags;
  }


  public void setTags(String tags) {
    this.tags = tags;
  }


  public InlineObject15 uniqueId(String uniqueId) {
    
    this.uniqueId = uniqueId;
    return this;
  }

   /**
   * Lead unique id. Unique per business.
   * @return uniqueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lead unique id. Unique per business.")

  public String getUniqueId() {
    return uniqueId;
  }


  public void setUniqueId(String uniqueId) {
    this.uniqueId = uniqueId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject15 inlineObject15 = (InlineObject15) o;
    return Objects.equals(this.address, inlineObject15.address) &&
        Objects.equals(this.businessId, inlineObject15.businessId) &&
        Objects.equals(this.email, inlineObject15.email) &&
        Objects.equals(this.firstName, inlineObject15.firstName) &&
        Objects.equals(this.identifierType, inlineObject15.identifierType) &&
        Objects.equals(this.lastName, inlineObject15.lastName) &&
        Objects.equals(this.messageData, inlineObject15.messageData) &&
        Objects.equals(this.notifications, inlineObject15.notifications) &&
        Objects.equals(this.optIn, inlineObject15.optIn) &&
        Objects.equals(this.phone, inlineObject15.phone) &&
        Objects.equals(this.requestData, inlineObject15.requestData) &&
        Objects.equals(this.requestTitle, inlineObject15.requestTitle) &&
        Objects.equals(this.source, inlineObject15.source) &&
        Objects.equals(this.sourceUrl, inlineObject15.sourceUrl) &&
        Objects.equals(this.status, inlineObject15.status) &&
        Objects.equals(this.systemMessage, inlineObject15.systemMessage) &&
        Objects.equals(this.tags, inlineObject15.tags) &&
        Objects.equals(this.uniqueId, inlineObject15.uniqueId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, businessId, email, firstName, identifierType, lastName, messageData, notifications, optIn, phone, requestData, requestTitle, source, sourceUrl, status, systemMessage, tags, uniqueId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject15 {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    identifierType: ").append(toIndentedString(identifierType)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    messageData: ").append(toIndentedString(messageData)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    optIn: ").append(toIndentedString(optIn)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    requestData: ").append(toIndentedString(requestData)).append("\n");
    sb.append("    requestTitle: ").append(toIndentedString(requestTitle)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    systemMessage: ").append(toIndentedString(systemMessage)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    uniqueId: ").append(toIndentedString(uniqueId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("business_id");
    openapiFields.add("email");
    openapiFields.add("first_name");
    openapiFields.add("identifier_type");
    openapiFields.add("last_name");
    openapiFields.add("message_data");
    openapiFields.add("notifications");
    openapiFields.add("opt_in");
    openapiFields.add("phone");
    openapiFields.add("request_data");
    openapiFields.add("request_title");
    openapiFields.add("source");
    openapiFields.add("source_url");
    openapiFields.add("status");
    openapiFields.add("system_message");
    openapiFields.add("tags");
    openapiFields.add("unique_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("first_name");
    openapiRequiredFields.add("identifier_type");
    openapiRequiredFields.add("request_title");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InlineObject15
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (InlineObject15.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in InlineObject15 is not found in the empty JSON string", InlineObject15.openapiRequiredFields.toString()));
        }
      }
      Set<java.util.Map.Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (java.util.Map.Entry<String, JsonElement> entry : entries) {
        if (!InlineObject15.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InlineObject15` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InlineObject15.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InlineObject15.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InlineObject15' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InlineObject15> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InlineObject15.class));

       return (TypeAdapter<T>) new TypeAdapter<InlineObject15>() {
           @Override
           public void write(JsonWriter out, InlineObject15 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InlineObject15 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InlineObject15 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InlineObject15
  * @throws IOException if the JSON string is invalid with respect to InlineObject15
  */
  public static InlineObject15 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InlineObject15.class);
  }

 /**
  * Convert an instance of InlineObject15 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

