/*
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vcita.platform.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vcita.platform.client.model.EstimatesItems;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.vcita.platform.client.JSON;

/**
 * InlineObject10
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineObject10 {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_CLIENT_ADDRESS = "client_address";
  @SerializedName(SERIALIZED_NAME_CLIENT_ADDRESS)
  private String clientAddress;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_CLIENT_NAME = "client_name";
  @SerializedName(SERIALIZED_NAME_CLIENT_NAME)
  private String clientName;

  public static final String SERIALIZED_NAME_CONVERSATION_ID = "conversation_id";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_ID)
  private String conversationId;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_DUE_DATE = "due_date";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private String dueDate;

  public static final String SERIALIZED_NAME_ESTIMATE_DATE = "estimate_date";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_DATE)
  private String estimateDate;

  public static final String SERIALIZED_NAME_ESTIMATE_NUMBER = "estimate_number";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_NUMBER)
  private BigDecimal estimateNumber;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<EstimatesItems> items = new ArrayList<>();

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_SEND_EMAIL = "send_email";
  @SerializedName(SERIALIZED_NAME_SEND_EMAIL)
  private Boolean sendEmail;

  public static final String SERIALIZED_NAME_SOURCE_CAMPAIGN = "source_campaign";
  @SerializedName(SERIALIZED_NAME_SOURCE_CAMPAIGN)
  private String sourceCampaign;

  public static final String SERIALIZED_NAME_SOURCE_CHANNEL = "source_channel";
  @SerializedName(SERIALIZED_NAME_SOURCE_CHANNEL)
  private String sourceChannel;

  public static final String SERIALIZED_NAME_SOURCE_NAME = "source_name";
  @SerializedName(SERIALIZED_NAME_SOURCE_NAME)
  private String sourceName;

  public static final String SERIALIZED_NAME_SOURCE_URL = "source_url";
  @SerializedName(SERIALIZED_NAME_SOURCE_URL)
  private String sourceUrl;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public InlineObject10() { 
  }

  public InlineObject10 address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * Business address
   * @return address
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Business address")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public InlineObject10 clientAddress(String clientAddress) {
    
    this.clientAddress = clientAddress;
    return this;
  }

   /**
   * Client&#39;s address
   * @return clientAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Client's address")

  public String getClientAddress() {
    return clientAddress;
  }


  public void setClientAddress(String clientAddress) {
    this.clientAddress = clientAddress;
  }


  public InlineObject10 clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Client ID
   * @return clientId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Client ID")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public InlineObject10 clientName(String clientName) {
    
    this.clientName = clientName;
    return this;
  }

   /**
   * Client&#39;s name
   * @return clientName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Client's name")

  public String getClientName() {
    return clientName;
  }


  public void setClientName(String clientName) {
    this.clientName = clientName;
  }


  public InlineObject10 conversationId(String conversationId) {
    
    this.conversationId = conversationId;
    return this;
  }

   /**
   * Conversation ID
   * @return conversationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversation ID")

  public String getConversationId() {
    return conversationId;
  }


  public void setConversationId(String conversationId) {
    this.conversationId = conversationId;
  }


  public InlineObject10 currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Estimate currency: USD, ILS etc.
   * @return currency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Estimate currency: USD, ILS etc.")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public InlineObject10 dueDate(String dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Estimate due date, must be later than estimate_date (ISO 8601 format)
   * @return dueDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Estimate due date, must be later than estimate_date (ISO 8601 format)")

  public String getDueDate() {
    return dueDate;
  }


  public void setDueDate(String dueDate) {
    this.dueDate = dueDate;
  }


  public InlineObject10 estimateDate(String estimateDate) {
    
    this.estimateDate = estimateDate;
    return this;
  }

   /**
   * Estimate date (ISO 8601 format)
   * @return estimateDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Estimate date (ISO 8601 format)")

  public String getEstimateDate() {
    return estimateDate;
  }


  public void setEstimateDate(String estimateDate) {
    this.estimateDate = estimateDate;
  }


  public InlineObject10 estimateNumber(BigDecimal estimateNumber) {
    
    this.estimateNumber = estimateNumber;
    return this;
  }

   /**
   * Estimate number
   * @return estimateNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Estimate number")

  public BigDecimal getEstimateNumber() {
    return estimateNumber;
  }


  public void setEstimateNumber(BigDecimal estimateNumber) {
    this.estimateNumber = estimateNumber;
  }


  public InlineObject10 items(List<EstimatesItems> items) {
    
    this.items = items;
    return this;
  }

  public InlineObject10 addItemsItem(EstimatesItems itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EstimatesItems> getItems() {
    return items;
  }


  public void setItems(List<EstimatesItems> items) {
    this.items = items;
  }


  public InlineObject10 note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Estimate note
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Estimate note")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public InlineObject10 sendEmail(Boolean sendEmail) {
    
    this.sendEmail = sendEmail;
    return this;
  }

   /**
   * Set to true in order to send the estimate to the client (for issued estimate). Default: false
   * @return sendEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true in order to send the estimate to the client (for issued estimate). Default: false")

  public Boolean getSendEmail() {
    return sendEmail;
  }


  public void setSendEmail(Boolean sendEmail) {
    this.sendEmail = sendEmail;
  }


  public InlineObject10 sourceCampaign(String sourceCampaign) {
    
    this.sourceCampaign = sourceCampaign;
    return this;
  }

   /**
   * Source campaign
   * @return sourceCampaign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source campaign")

  public String getSourceCampaign() {
    return sourceCampaign;
  }


  public void setSourceCampaign(String sourceCampaign) {
    this.sourceCampaign = sourceCampaign;
  }


  public InlineObject10 sourceChannel(String sourceChannel) {
    
    this.sourceChannel = sourceChannel;
    return this;
  }

   /**
   * Source channel
   * @return sourceChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source channel")

  public String getSourceChannel() {
    return sourceChannel;
  }


  public void setSourceChannel(String sourceChannel) {
    this.sourceChannel = sourceChannel;
  }


  public InlineObject10 sourceName(String sourceName) {
    
    this.sourceName = sourceName;
    return this;
  }

   /**
   * Source name
   * @return sourceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source name")

  public String getSourceName() {
    return sourceName;
  }


  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }


  public InlineObject10 sourceUrl(String sourceUrl) {
    
    this.sourceUrl = sourceUrl;
    return this;
  }

   /**
   * Source URL
   * @return sourceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source URL")

  public String getSourceUrl() {
    return sourceUrl;
  }


  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }


  public InlineObject10 status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Possible values: draft, issued, approved, rejected, invoiced. Default: issued
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Possible values: draft, issued, approved, rejected, invoiced. Default: issued")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public InlineObject10 title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Estimate title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Estimate title")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject10 inlineObject10 = (InlineObject10) o;
    return Objects.equals(this.address, inlineObject10.address) &&
        Objects.equals(this.clientAddress, inlineObject10.clientAddress) &&
        Objects.equals(this.clientId, inlineObject10.clientId) &&
        Objects.equals(this.clientName, inlineObject10.clientName) &&
        Objects.equals(this.conversationId, inlineObject10.conversationId) &&
        Objects.equals(this.currency, inlineObject10.currency) &&
        Objects.equals(this.dueDate, inlineObject10.dueDate) &&
        Objects.equals(this.estimateDate, inlineObject10.estimateDate) &&
        Objects.equals(this.estimateNumber, inlineObject10.estimateNumber) &&
        Objects.equals(this.items, inlineObject10.items) &&
        Objects.equals(this.note, inlineObject10.note) &&
        Objects.equals(this.sendEmail, inlineObject10.sendEmail) &&
        Objects.equals(this.sourceCampaign, inlineObject10.sourceCampaign) &&
        Objects.equals(this.sourceChannel, inlineObject10.sourceChannel) &&
        Objects.equals(this.sourceName, inlineObject10.sourceName) &&
        Objects.equals(this.sourceUrl, inlineObject10.sourceUrl) &&
        Objects.equals(this.status, inlineObject10.status) &&
        Objects.equals(this.title, inlineObject10.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, clientAddress, clientId, clientName, conversationId, currency, dueDate, estimateDate, estimateNumber, items, note, sendEmail, sourceCampaign, sourceChannel, sourceName, sourceUrl, status, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject10 {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    clientAddress: ").append(toIndentedString(clientAddress)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    conversationId: ").append(toIndentedString(conversationId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    estimateDate: ").append(toIndentedString(estimateDate)).append("\n");
    sb.append("    estimateNumber: ").append(toIndentedString(estimateNumber)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    sendEmail: ").append(toIndentedString(sendEmail)).append("\n");
    sb.append("    sourceCampaign: ").append(toIndentedString(sourceCampaign)).append("\n");
    sb.append("    sourceChannel: ").append(toIndentedString(sourceChannel)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("client_address");
    openapiFields.add("client_id");
    openapiFields.add("client_name");
    openapiFields.add("conversation_id");
    openapiFields.add("currency");
    openapiFields.add("due_date");
    openapiFields.add("estimate_date");
    openapiFields.add("estimate_number");
    openapiFields.add("items");
    openapiFields.add("note");
    openapiFields.add("send_email");
    openapiFields.add("source_campaign");
    openapiFields.add("source_channel");
    openapiFields.add("source_name");
    openapiFields.add("source_url");
    openapiFields.add("status");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("address");
    openapiRequiredFields.add("client_id");
    openapiRequiredFields.add("currency");
    openapiRequiredFields.add("due_date");
    openapiRequiredFields.add("estimate_date");
    openapiRequiredFields.add("items");
    openapiRequiredFields.add("title");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InlineObject10
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (InlineObject10.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in InlineObject10 is not found in the empty JSON string", InlineObject10.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!InlineObject10.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InlineObject10` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InlineObject10.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
      // validate the optional field `items` (array)
      if (jsonArrayitems != null) {
        for (int i = 0; i < jsonArrayitems.size(); i++) {
          EstimatesItems.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InlineObject10.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InlineObject10' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InlineObject10> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InlineObject10.class));

       return (TypeAdapter<T>) new TypeAdapter<InlineObject10>() {
           @Override
           public void write(JsonWriter out, InlineObject10 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InlineObject10 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InlineObject10 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InlineObject10
  * @throws IOException if the JSON string is invalid with respect to InlineObject10
  */
  public static InlineObject10 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InlineObject10.class);
  }

 /**
  * Convert an instance of InlineObject10 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

