{
  "components": {
    "requestBodies": {
      "Body": {
        "content": {
          "application/json": {
            "schema": {}
          }
        }
      },
      "Body2": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Body2"
            }
          }
        }
      }
    },
    "schemas": {
      "Body2": {
        "properties": {
          "payment_status_id": {
            "type": "string"
          }
        },
        "required": [
          "payment_status_id"
        ],
        "type": "object"
      },
      "availability": {
        "properties": {
          "charge_type": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "duration_minutes": {
            "type": "integer"
          },
          "event_instance_id": {
            "type": "string"
          },
          "interaction_details": {
            "type": "string"
          },
          "interaction_type": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "spots_open": {
            "type": "integer"
          },
          "spots_total": {
            "type": "integer"
          },
          "staff_id": {
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "action_data": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "admin_account": {
        "properties": {
          "country_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "app": {
        "properties": {
          "app_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "app_data": {
        "properties": {
          "assignment": {
            "$ref": "#/components/schemas/assignment"
          }
        },
        "type": "object"
      },
      "app_data1": {
        "properties": {
          "app_code_name": {
            "type": "string"
          },
          "app_features": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "app_host": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "nullable": true,
            "type": "integer"
          },
          "app_name": {
            "nullable": true,
            "type": "string"
          },
          "app_screenshot_uris": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "contact_support_link": {
            "nullable": true
          },
          "description": {
            "$ref": "#/components/schemas/description",
            "nullable": true
          },
          "is_internal": {
            "nullable": true,
            "type": "boolean"
          },
          "locales": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "permissions": {
            "nullable": true
          },
          "privacy_policy_link": {
            "nullable": true
          },
          "requires_upgrade": {
            "nullable": true,
            "type": "boolean"
          },
          "status": {
            "nullable": true,
            "type": "string"
          },
          "supported_countries": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "url_params": {
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "application": {
        "properties": {
          "api_uri": {
            "format": "uri",
            "type": "string"
          },
          "app_code_name": {
            "type": "string",
            "nullable": true
          },
          "app_features": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "app_layer": {
            "type": "string",
            "nullable": true
          },
          "app_screenshot_uris": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "app_type": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "contact_support_link": {
            "format": "uri",
            "type": "string"
          },
          "deep_link": {
            "$ref": "#/components/schemas/deep_link",
            "nullable": true
          },
          "demand_scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "nullable": true
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "installation_endpoint": {
            "format": "uri",
            "type": "string"
          },
          "locales": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "menu_items": {
            "$ref": "#/components/schemas/menu_items",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "open_in_new_tab": {
            "type": "boolean"
          },
          "openid": {
            "type": "boolean"
          },
          "privacy_policy_link": {
            "format": "uri",
            "type": "string"
          },
          "redirect_uri": {
            "format": "uri",
            "type": "string"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "nullable": true
          },
          "supported_countries": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "trusted": {
            "type": "boolean"
          },
          "uninstallation_endpoint": {
            "format": "uri",
            "type": "string"
          },
          "url_params": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "appointment": {
        "properties": {
          "approval_mode": {
            "nullable": true
          },
          "auto_follow_up_hours": {
            "nullable": true,
            "type": "integer"
          },
          "business_uid": {
            "type": "string"
          },
          "category_name": {
            "nullable": true
          },
          "charge_type": {
            "type": "string"
          },
          "client_color_id": {
            "type": "integer"
          },
          "client_first_name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_last_name": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "coupon": {
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "nullable": true
          },
          "duration": {
            "type": "integer"
          },
          "follow_up_data": {
            "nullable": true
          },
          "follow_up_note": {
            "nullable": true,
            "type": "string"
          },
          "follow_up_time": {
            "nullable": true
          },
          "follow_up_type": {
            "nullable": true
          },
          "future_bookings_limit": {
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "interaction_details": {
            "type": "string"
          },
          "interaction_type": {
            "type": "string"
          },
          "invoices": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "is_recurring": {
            "type": "boolean"
          },
          "last_action_message": {
            "nullable": true
          },
          "meeting_reminder_sms_1": {
            "nullable": true,
            "type": "boolean"
          },
          "meeting_reminder_sms_2": {
            "nullable": true,
            "type": "boolean"
          },
          "min_hours_before_meeting": {
            "nullable": true
          },
          "no_show": {
            "type": "boolean"
          },
          "notes": {
            "nullable": true
          },
          "optional_times": {
            "items": {},
            "type": "array"
          },
          "payment": {
            "nullable": true
          },
          "payment_id": {
            "nullable": true
          },
          "payment_status": {
            "nullable": true
          },
          "price": {
            "type": "string"
          },
          "remind_before_in_hours_1": {
            "format": "float",
            "nullable": true,
            "type": "number"
          },
          "remind_before_in_hours_2": {
            "nullable": true,
            "type": "integer"
          },
          "request_data": {
            "nullable": true
          },
          "series_id": {
            "nullable": true
          },
          "series_instance_count": {
            "nullable": true
          },
          "service_id": {
            "type": "string"
          },
          "sms_booking_confirmation": {
            "nullable": true
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data",
            "nullable": true
          },
          "staff_display_name": {
            "type": "string"
          },
          "staff_id": {
            "type": "string"
          },
          "staff_image": {
            "nullable": true
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "zoom_start_url": {
            "nullable": true
          }
        },
        "type": "object"
      },
      "apps_get_201_response": {
        "properties": {
          "apps": {
            "items": {
              "$ref": "#/components/schemas/app"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "apps_id_assign_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data2"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data1"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_id_install_app_post_201_response": {
        "properties": {
          "app_data": {
            "$ref": "#/components/schemas/app_data1"
          },
          "data": {
            "$ref": "#/components/schemas/data3"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_id_install_app_post_422_response": {
        "properties": {
          "app_data": {
            "$ref": "#/components/schemas/app_data1"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/error"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_id_put_200_response": {
        "properties": {
          "application": {
            "$ref": "#/components/schemas/application"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_id_unassign_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data2"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_id_uninstall_app_post_201_response": {
        "properties": {
          "app_data": {
            "$ref": "#/components/schemas/app_data1"
          },
          "data": {
            "$ref": "#/components/schemas/data3"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_id_uninstall_app_post_422_response": {
        "properties": {
          "app_data": {
            "$ref": "#/components/schemas/app_data1"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/error"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "apps_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "assignment": {
        "properties": {
          "app_id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "directory_id": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "is_internal": {
            "type": "boolean"
          },
          "pre_installed": {
            "nullable": true,
            "type": "boolean"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "availabilities": {
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/availability"
          }
        },
        "type": "object"
      },
      "booking": {
        "properties": {
          "approval_mode": {
            "type": "string"
          },
          "category_name": {
            "nullable": true
          },
          "charge_type": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "depth": {
            "type": "string"
          },
          "description": {
            "nullable": true
          },
          "duration": {
            "type": "integer"
          },
          "end_time": {
            "format": "date-time",
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "interaction_details": {
            "type": "string"
          },
          "interaction_type": {
            "type": "string"
          },
          "invoice_payment_status_uid": {
            "nullable": true
          },
          "invoices": {
            "items": {},
            "type": "array"
          },
          "is_recurring": {
            "type": "boolean"
          },
          "no_show": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          },
          "payable": {
            "type": "boolean"
          },
          "payment": {
            "nullable": true
          },
          "payment_id": {
            "nullable": true
          },
          "payment_status": {
            "nullable": true
          },
          "policies": {
            "$ref": "#/components/schemas/policies"
          },
          "price": {
            "type": "string"
          },
          "recurrence_description": {
            "type": "string"
          },
          "rsvp_required": {
            "type": "boolean"
          },
          "rsvp_state": {
            "type": "string"
          },
          "series_id": {
            "type": "string"
          },
          "service_id": {
            "type": "string"
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data"
          },
          "staff_id": {
            "type": "string"
          },
          "staff_name": {
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "suggested_times": {
            "items": {},
            "type": "array"
          },
          "suggested_times_end": {
            "items": {},
            "type": "array"
          },
          "time_zone": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "booking1": {
        "properties": {
          "business_id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "event_instance_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "service_id": {
            "nullable": true,
            "type": "string"
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data"
          },
          "staff_id": {
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "time_zone": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "booking_credit": {
        "properties": {
          "bookings_usage": {
            "type": "string"
          },
          "credit_items": {
            "items": {
              "$ref": "#/components/schemas/credit_item"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "total_bookings": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "booking_restriction": {
        "properties": {
          "is_client_restricted": {
            "type": "boolean"
          },
          "restricted_client_statuses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "restriction_rule_text": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "branding": {
        "properties": {
          "color": {
            "type": "string"
          },
          "url_logo": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "business": {
        "properties": {
          "address": {
            "nullable": true,
            "type": "string"
          },
          "business_category": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          },
          "hide_Address": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "landing_page": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "nullable": true,
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "time_zone": {
            "nullable": true,
            "type": "string"
          },
          "website_url": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "business1": {
        "properties": {
          "admin_account": {
            "$ref": "#/components/schemas/admin_account"
          },
          "business": {
            "$ref": "#/components/schemas/business"
          },
          "integrations": {
            "$ref": "#/components/schemas/integrations"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object"
      },
      "businesses_business_id_features_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data7"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_post_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data7"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_post_400_response": {
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_staffs_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data8"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_staffs_post_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data8"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_staffs_staff_id_delete_200_response": {
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_staffs_staff_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data8"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_business_id_wizards_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "businesses_business_id_wizards_wizard_name_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data9"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "businesses_business_id_wizards_wizard_name_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data9"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "businesses_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data4"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_post_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data5"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "businesses_validate_login_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data6"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "cancellation": {
        "properties": {
          "can_cancel": {
            "type": "boolean"
          },
          "can_cancel_now": {
            "type": "boolean"
          },
          "time_limit": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "card": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "business_id": {
            "type": "string"
          },
          "card_brand": {
            "type": "string"
          },
          "cardholder_name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "exp_month": {
            "type": "integer"
          },
          "exp_year": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "last_4": {
            "type": "string"
          },
          "payment_provider": {
            "type": "string"
          },
          "staff_id": {
            "type": "string"
          },
          "staff_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "categories_category_id_services_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data11"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "categories_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data10"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "category": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "num_of_services": {
            "type": "integer"
          },
          "position": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "client": {
        "properties": {
          "address": {
            "type": "string"
          },
          "business_uid": {
            "type": "string",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "custom_field1": {
            "type": "string",
            "nullable": true
          },
          "custom_field2": {
            "type": "string",
            "nullable": true
          },
          "custom_field3": {
            "type": "string",
            "nullable": true
          },
          "customer_status": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "matter_term": {
            "type": "string",
            "nullable": true
          },
          "matters": {
            "items": {
              "$ref": "#/components/schemas/matter"
            },
            "type": "array",
            "nullable": true
          },
          "mobile_phone": {
            "type": "string"
          },
          "opt_in": {
            "nullable": true,
            "type": "string"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data",
            "nullable": true
          },
          "source_url": {
            "type": "string",
            "nullable": true
          },
          "spam": {
            "type": "boolean",
            "nullable": true
          },
          "tags": {
            "items": {},
            "type": "array"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "client_package": {
        "properties": {
          "active": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "booking_credits": {
            "items": {
              "$ref": "#/components/schemas/booking_credit"
            },
            "type": "array"
          },
          "bookings_usage": {
            "type": "string"
          },
          "business_id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "image_path": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "package_id": {
            "type": "string"
          },
          "payment_status_id": {
            "type": "string"
          },
          "payment_status_state": {
            "type": "string"
          },
          "products": {
            "items": {
              "$ref": "#/components/schemas/product"
            },
            "type": "array"
          },
          "staff_id": {
            "type": "string"
          },
          "total_bookings": {
            "type": "string"
          },
          "valid_from": {
            "format": "date",
            "type": "string"
          },
          "valid_until": {
            "format": "date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_conversations_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data17"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_delete_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data16"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_documents_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data18"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_estimates_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data19"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data16"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_invoices_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data20"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_payment_client_packages_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data21"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_payment_client_packages_get_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_payments_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data22"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_client_id_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data13"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data12"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_merges_merge_clients_put_200_response": {
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_merges_possible_merge_master_get_200_response": {
        "properties": {
          "master_ids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_payment_client_packages_update_usage_post_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data14"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_payment_client_packages_update_usage_post_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_payment_client_packages_validate_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data15"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_payment_client_packages_validate_get_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "clients_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data13"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "contact": {
        "properties": {
          "display_name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversation": {
        "properties": {
          "business_id": {
            "type": "string"
          },
          "business_unread": {
            "type": "boolean"
          },
          "client_id": {
            "type": "string"
          },
          "client_unread": {
            "type": "boolean"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "deep_link": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_business_action": {
            "type": "string"
          },
          "last_client_action": {
            "nullable": true
          },
          "staff_id": {
            "type": "string"
          },
          "title": {
            "nullable": true
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data17"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "credit_item": {
        "properties": {
          "bookings_usage": {
            "type": "integer"
          },
          "item_id": {
            "type": "string"
          },
          "item_type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data": {
        "properties": {
          "app_code_name": {
            "nullable": true,
            "type": "string"
          },
          "app_id": {
            "nullable": true,
            "type": "string"
          },
          "client_id": {
            "nullable": true,
            "type": "string"
          },
          "client_secret": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "data1": {
        "properties": {
          "application": {
            "$ref": "#/components/schemas/application"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "data10": {
        "properties": {
          "categories": {
            "items": {
              "$ref": "#/components/schemas/category"
            },
            "type": "array"
          },
          "is_all_services_restricted": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "data11": {
        "properties": {
          "next_page": {
            "type": "integer"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/service"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data12": {
        "properties": {
          "clients": {
            "items": {
              "$ref": "#/components/schemas/client"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data13": {
        "properties": {
          "client": {
            "$ref": "#/components/schemas/client",
            "nullable": true
          },
          "token": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "data14": {
        "properties": {
          "package_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data15": {
        "properties": {
          "has_package": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "data16": {
        "properties": {
          "client": {
            "$ref": "#/components/schemas/client"
          }
        },
        "type": "object"
      },
      "data17": {
        "properties": {
          "conversations": {
            "items": {
              "$ref": "#/components/schemas/conversation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data18": {
        "properties": {
          "documents": {
            "items": {},
            "type": "array"
          }
        },
        "type": "object"
      },
      "data19": {
        "properties": {
          "estimates": {
            "items": {
              "$ref": "#/components/schemas/estimate"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data2": {
        "properties": {
          "app_data": {
            "$ref": "#/components/schemas/app_data"
          }
        },
        "type": "object"
      },
      "data20": {
        "properties": {
          "invoices": {
            "items": {
              "$ref": "#/components/schemas/invoice"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data21": {
        "properties": {
          "client_packages": {
            "items": {
              "$ref": "#/components/schemas/client_package"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data22": {
        "properties": {
          "payments": {
            "items": {
              "$ref": "#/components/schemas/payment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data23": {
        "properties": {
          "estimate": {
            "$ref": "#/components/schemas/estimate"
          }
        },
        "type": "object"
      },
      "data24": {
        "properties": {
          "default_value": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "forms": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "keep_asking": {
            "type": "boolean"
          },
          "label": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data25": {
        "properties": {
          "description": {
            "type": "string"
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/section"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data26": {
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/invoice"
          }
        },
        "type": "object"
      },
      "data27": {
        "properties": {
          "conversation_uid": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data28": {
        "properties": {
          "card": {
            "$ref": "#/components/schemas/card"
          }
        },
        "type": "object"
      },
      "data29": {
        "properties": {
          "allow_save_card": {
            "type": "boolean"
          },
          "amount": {
            "type": "integer"
          },
          "client_id": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "invoice_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "return_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data3": {
        "properties": {
          "app_data": {
            "$ref": "#/components/schemas/app_data1"
          }
        },
        "type": "object"
      },
      "data30": {
        "properties": {
          "client_package": {
            "$ref": "#/components/schemas/client_package"
          }
        },
        "type": "object"
      },
      "data31": {
        "properties": {
          "packages": {
            "items": {
              "$ref": "#/components/schemas/package"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data32": {
        "properties": {
          "package": {
            "$ref": "#/components/schemas/package"
          }
        },
        "type": "object"
      },
      "data33": {
        "properties": {
          "payment_settings": {
            "$ref": "#/components/schemas/payment_settings"
          }
        },
        "type": "object"
      },
      "data34": {
        "properties": {
          "payment_status": {
            "$ref": "#/components/schemas/payment_status"
          }
        },
        "type": "object"
      },
      "data35": {
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/payment"
          }
        },
        "type": "object"
      },
      "data36": {
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/payment"
          }
        },
        "type": "object"
      },
      "data37": {
        "properties": {
          "appointments": {
            "items": {
              "$ref": "#/components/schemas/appointment"
            },
            "type": "array"
          },
          "next_page": {
            "nullable": true
          }
        },
        "type": "object"
      },
      "data38": {
        "properties": {
          "appointment": {
            "$ref": "#/components/schemas/appointment"
          }
        },
        "type": "object"
      },
      "data39": {
        "properties": {
          "bookings": {
            "items": {
              "$ref": "#/components/schemas/booking"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data4": {
        "properties": {
          "businesses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data40": {
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/booking1"
          }
        },
        "type": "object"
      },
      "data41": {
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/booking"
          }
        },
        "type": "object"
      },
      "data42": {
        "properties": {
          "event_instance": {
            "$ref": "#/components/schemas/event_instance"
          }
        },
        "type": "object"
      },
      "data43": {
        "properties": {
          "staff": {
            "items": {
              "$ref": "#/components/schemas/staff"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data44": {
        "properties": {
          "staff": {
            "$ref": "#/components/schemas/staff"
          }
        },
        "type": "object"
      },
      "data45": {
        "properties": {
          "waitlist": {
            "$ref": "#/components/schemas/waitlist"
          }
        },
        "type": "object"
      },
      "data46": {
        "properties": {
          "service": {
            "$ref": "#/components/schemas/service"
          }
        },
        "type": "object"
      },
      "data47": {
        "properties": {
          "availabilities": {
            "$ref": "#/components/schemas/availabilities"
          },
          "time_zone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data48": {
        "properties": {
          "tokens": {
            "items": {
              "$ref": "#/components/schemas/token"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data49": {
        "properties": {
          "revoked_tokens": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data5": {
        "properties": {
          "admin_account": {
            "$ref": "#/components/schemas/admin_account"
          },
          "business": {
            "$ref": "#/components/schemas/business"
          },
          "integrations": {
            "$ref": "#/components/schemas/integrations"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object"
      },
      "data6": {
        "properties": {
          "authenticated": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "data7": {
        "properties": {
          "business": {
            "$ref": "#/components/schemas/business1"
          }
        },
        "type": "object"
      },
      "data8": {
        "properties": {
          "staff": {
            "items": {
              "$ref": "#/components/schemas/staff"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "data9": {
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "flags": {
            "$ref": "#/components/schemas/flags"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum": {
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "flags": {
            "$ref": "#/components/schemas/flags"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum1": {
        "properties": {
          "default_value": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "forms": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "keep_asking": {
            "type": "boolean"
          },
          "label": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum10": {
        "properties": {
          "address": {
            "type": "string"
          },
          "amount": {
            "format": "float",
            "type": "number"
          },
          "business_uid": {
            "type": "string"
          },
          "client_address": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "due_date": {
            "format": "date",
            "type": "string"
          },
          "estimate_date": {
            "format": "date",
            "type": "string"
          },
          "estimate_number": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/item"
            },
            "type": "array"
          },
          "note": {
            "type": "string"
          },
          "source_data": {
            "nullable": true
          },
          "staff_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum11": {
        "properties": {
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "nullable": true
          },
          "event_instance_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "no_show": {
            "type": "boolean"
          },
          "price": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum12": {
        "properties": {
          "charge_type": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "end_time": {
            "format": "date-time",
            "type": "string"
          },
          "interaction_details": {
            "type": "string"
          },
          "interaction_type": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "service_id": {
            "type": "string"
          },
          "staff_id": {
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum13": {
        "properties": {
          "address": {
            "type": "string"
          },
          "allow_online_payment": {
            "type": "boolean"
          },
          "amount": {
            "format": "float",
            "type": "number"
          },
          "business_id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "contact_details": {
            "nullable": true
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "due_date": {
            "format": "date",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invoice_number": {
            "type": "integer"
          },
          "issued_at": {
            "format": "date",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/item"
            },
            "type": "array"
          },
          "matter_details": {
            "nullable": true
          },
          "note": {
            "type": "string"
          },
          "payment_balance": {
            "format": "float",
            "type": "number"
          },
          "payment_state": {
            "type": "string"
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data"
          },
          "staff_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum14": {
        "properties": {
          "business_uid": {
            "type": "string"
          },
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/contact"
            },
            "type": "array"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "display_name": {
            "type": "string"
          },
          "fields": {
            "items": {},
            "type": "array"
          },
          "staff": {
            "$ref": "#/components/schemas/staff1"
          },
          "tags": {
            "items": {},
            "type": "array"
          },
          "uid": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum15": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "currency": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "discount_amount": {
            "type": "integer"
          },
          "discount_unit": {
            "type": "string"
          },
          "expiration": {
            "type": "integer"
          },
          "expiration_unit": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "image_path": {
            "nullable": true
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/item1"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "online_payment_enabled": {
            "type": "boolean"
          },
          "original_price": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "products": {
            "items": {
              "$ref": "#/components/schemas/product"
            },
            "type": "array"
          },
          "total_bookings": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "datum16": {
        "properties": {
          "amount": {
            "type": "integer"
          },
          "charged_at": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "offline": {
            "type": "boolean"
          },
          "payment_method": {
            "type": "string"
          },
          "payment_requests": {
            "items": {
              "$ref": "#/components/schemas/payment_request"
            },
            "type": "array"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum17": {
        "properties": {
          "business_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "nullable": true
          },
          "description": {
            "nullable": true
          },
          "display": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "image_url": {
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "staff_id": {
            "type": "string"
          },
          "taxes": {
            "items": {},
            "type": "array"
          },
          "total_price": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum18": {
        "properties": {
          "automatic": {
            "nullable": true
          },
          "business_id": {
            "type": "string"
          },
          "campaign_id": {
            "type": "string"
          },
          "channel": {
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "recipients_count": {
            "nullable": true
          },
          "scheduled_to": {
            "nullable": true
          },
          "send_again": {
            "nullable": true
          },
          "send_secondary": {
            "nullable": true
          },
          "sms_content": {
            "nullable": true
          },
          "status": {
            "nullable": true
          },
          "subject": {
            "nullable": true
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum19": {
        "properties": {
          "charge_type": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "image_path": {
            "type": "string"
          },
          "interaction_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum20": {
        "properties": {
          "active": {
            "type": "string"
          },
          "deleted": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invite_sent": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "mobile_number": {
            "type": "string"
          },
          "photo": {
            "nullable": true
          },
          "role": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum3": {
        "properties": {
          "approval_mode": {
            "nullable": true
          },
          "auto_follow_up_hours": {
            "type": "integer"
          },
          "business_uid": {
            "type": "string"
          },
          "category_name": {
            "nullable": true
          },
          "charge_type": {
            "type": "string"
          },
          "client_color_id": {
            "type": "integer"
          },
          "client_first_name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_last_name": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "coupon": {
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "nullable": true
          },
          "duration": {
            "type": "integer"
          },
          "follow_up_data": {
            "nullable": true
          },
          "follow_up_note": {
            "type": "string"
          },
          "follow_up_time": {
            "nullable": true
          },
          "follow_up_type": {
            "nullable": true
          },
          "future_bookings_limit": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "interaction_details": {
            "type": "string"
          },
          "interaction_type": {
            "type": "string"
          },
          "invoices": {
            "items": {},
            "type": "array"
          },
          "is_recurring": {
            "type": "boolean"
          },
          "last_action_message": {
            "nullable": true
          },
          "meeting_reminder_sms_1": {
            "type": "boolean"
          },
          "meeting_reminder_sms_2": {
            "type": "boolean"
          },
          "min_hours_before_meeting": {
            "nullable": true
          },
          "no_show": {
            "type": "boolean"
          },
          "notes": {
            "nullable": true
          },
          "optional_times": {
            "items": {},
            "type": "array"
          },
          "payment": {
            "nullable": true
          },
          "payment_id": {
            "nullable": true
          },
          "payment_status": {
            "nullable": true
          },
          "price": {
            "type": "string"
          },
          "remind_before_in_hours_1": {
            "format": "float",
            "type": "number"
          },
          "remind_before_in_hours_2": {
            "type": "integer"
          },
          "request_data": {
            "nullable": true
          },
          "series_id": {
            "nullable": true
          },
          "series_instance_count": {
            "nullable": true
          },
          "service_id": {
            "type": "string"
          },
          "sms_booking_confirmation": {
            "nullable": true
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data"
          },
          "staff_display_name": {
            "type": "string"
          },
          "staff_id": {
            "type": "string"
          },
          "staff_image": {
            "nullable": true
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "zoom_start_url": {
            "nullable": true
          }
        },
        "type": "object"
      },
      "datum4": {
        "properties": {
          "business": {
            "$ref": "#/components/schemas/business1"
          }
        },
        "type": "object"
      },
      "datum5": {
        "properties": {
          "acted_at": {
            "nullable": true
          },
          "added_at": {
            "nullable": true
          },
          "bounced_at": {
            "nullable": true
          },
          "business_id": {
            "type": "string"
          },
          "channel": {
            "nullable": true
          },
          "clicked_at": {
            "nullable": true
          },
          "client_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "delivered_at": {
            "nullable": true
          },
          "failure_reason": {
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "scheduled_campaign_id": {
            "type": "string"
          },
          "spammed_at": {
            "nullable": true
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "viewed_at": {
            "nullable": true
          }
        },
        "type": "object"
      },
      "datum6": {
        "properties": {
          "acted_count": {
            "type": "integer"
          },
          "action_data": {
            "$ref": "#/components/schemas/action_data"
          },
          "added_count": {
            "type": "integer"
          },
          "background_color": {
            "nullable": true
          },
          "body": {
            "type": "string"
          },
          "bounced_count": {
            "type": "integer"
          },
          "business_uid": {
            "type": "string"
          },
          "button_background_color": {
            "nullable": true
          },
          "button_text": {
            "nullable": true
          },
          "button_text_color": {
            "nullable": true
          },
          "click_count": {
            "type": "integer"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "deliver_count": {
            "type": "integer"
          },
          "image": {
            "nullable": true
          },
          "last_scheduled_at": {
            "nullable": true
          },
          "last_sent_at": {
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "read_only": {
            "type": "boolean"
          },
          "sms_content": {
            "nullable": true
          },
          "spam_count": {
            "type": "integer"
          },
          "subject": {
            "nullable": true
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "view_count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "datum7": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "booking_credits": {
            "items": {},
            "type": "array"
          },
          "bookings_usage": {
            "type": "integer"
          },
          "business_id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "image_path": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "package_id": {
            "type": "string"
          },
          "payment_request_id": {
            "nullable": true
          },
          "payment_request_state": {
            "nullable": true
          },
          "payment_status_id": {
            "nullable": true
          },
          "payment_status_state": {
            "nullable": true
          },
          "price": {
            "nullable": true
          },
          "products": {
            "items": {},
            "type": "array"
          },
          "staff_id": {
            "type": "string"
          },
          "total_bookings": {
            "type": "integer"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "valid_from": {
            "format": "date",
            "type": "string"
          },
          "valid_until": {
            "format": "date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum8": {
        "properties": {
          "address": {
            "nullable": true
          },
          "business_uid": {
            "type": "string"
          },
          "campaign": {
            "nullable": true
          },
          "channel": {
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "customer_status": {
            "nullable": true
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "mobile_phone": {
            "nullable": true
          },
          "opt_in": {
            "nullable": true
          },
          "source": {
            "nullable": true
          },
          "source_url": {
            "nullable": true
          },
          "tags": {
            "items": {},
            "type": "array"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "datum9": {
        "properties": {
          "business_id": {
            "type": "string"
          },
          "business_unread": {
            "type": "boolean"
          },
          "client_id": {
            "type": "string"
          },
          "client_unread": {
            "type": "boolean"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "deep_link": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_business_action": {
            "type": "string"
          },
          "last_client_action": {
            "nullable": true
          },
          "staff_id": {
            "type": "string"
          },
          "title": {
            "nullable": true
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "deep_link": {
        "properties": {
          "path": {
            "type": "string"
          },
          "path_params": {
            "$ref": "#/components/schemas/path_params"
          }
        },
        "type": "object"
      },
      "description": {
        "properties": {
          "logo": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "short_description": {
            "nullable": true,
            "type": "string"
          },
          "text": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "error": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "estimate": {
        "properties": {
          "address": {
            "type": "string"
          },
          "amount": {
            "format": "float",
            "type": "number"
          },
          "client_address": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "due_date": {
            "format": "date",
            "type": "string"
          },
          "estimate_date": {
            "format": "date",
            "type": "string"
          },
          "estimate_number": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/item"
            },
            "type": "array"
          },
          "note": {
            "type": "string"
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data"
          },
          "staff_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "estimates_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data19"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "estimates_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data23"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "event_instance": {
        "properties": {
          "charge_type": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "end_time": {
            "format": "date-time",
            "type": "string"
          },
          "interaction_details": {
            "type": "string"
          },
          "interaction_type": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "service_id": {
            "type": "string"
          },
          "staff_id": {
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "field": {
        "items": {
          "$ref": "#/components/schemas/field_item"
        },
        "type": "array"
      },
      "field_item": {
        "properties": {
          "default_value": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "keep_asking": {
            "type": "boolean",
            "nullable": true
          },
          "label": {
            "type": "string"
          },
          "num_of_lines": {
            "type": "integer",
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "fields_field_id_delete_200_response": {
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "fields_field_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data24"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "fields_field_id_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data24"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "fields_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum1"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "fields_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data24"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "flags": {
        "properties": {},
        "type": "object"
      },
      "form_data": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "others": {
            "$ref": "#/components/schemas/others"
          },
          "policies": {
            "$ref": "#/components/schemas/policies"
          },
          "service_fields": {
            "$ref": "#/components/schemas/service_fields"
          }
        }
      },
      "service_fields": {
        "type": "object"
      },
      "others": {
        "type": "object",
        "properties": {
          "notes": {
            "nullable": true
          }
        }
      },
      "forms_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/data25"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "forms_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data25"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "global_appointments_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum3"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_businesses_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum4"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_campaign_recipients_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum5"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_campaigns_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum6"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_client_packages_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum7"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_clients_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum8"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_conversations_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum9"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_estimates_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum10"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_event_attendances_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum11"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_event_instances_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum12"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_invoices_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum13"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_matters_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum14"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_packages_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum15"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_payments_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum16"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_products_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum17"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_scheduled_campaigns_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum18"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_services_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/datum19"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "global_staffs_get_200_response": {
        "properties": {
          "data": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/datum20"
              },
              "type": "array"
            },
            "type": "array"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "integrations": {
        "properties": {
          "plugins": {
            "items": {
              "$ref": "#/components/schemas/plugin"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "invoice": {
        "properties": {
          "address": {
            "type": "string"
          },
          "allow_online_payment": {
            "type": "boolean"
          },
          "amount": {
            "format": "float",
            "type": "number"
          },
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "due_date": {
            "format": "date",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invoice_number": {
            "type": "string"
          },
          "issued_at": {
            "format": "date",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/item"
            },
            "type": "array"
          },
          "note": {
            "type": "string"
          },
          "payment_balance": {
            "format": "float",
            "type": "integer"
          },
          "payment_state": {
            "type": "string"
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data"
          },
          "staff_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "invoices_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data20"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "invoices_invoice_id_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data26"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "invoices_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data26"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "item": {
        "properties": {
          "amount": {
            "format": "float",
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "discount": {
            "type": "integer"
          },
          "discount_rate": {
            "nullable": true
          },
          "quantity": {
            "type": "integer"
          },
          "taxes": {
            "items": {
              "$ref": "#/components/schemas/tax"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "item1": {
        "properties": {
          "services": {
            "items": {
              "$ref": "#/components/schemas/service"
            },
            "type": "array"
          },
          "total_bookings": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "item_name": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "leadgen_post_201_response": {
        "properties": {
          "conversation_uid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "matter": {
        "properties": {
          "display_name": {
            "type": "string"
          },
          "fields": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "meetings": {
        "properties": {
          "meetings_policy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "menu_items": {
        "properties": {
          "subitems": {
            "items": {
              "$ref": "#/components/schemas/subitem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "messages_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data27"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "meta": {
        "properties": {
          "auth_token": {
            "type": "string"
          },
          "branding": {
            "$ref": "#/components/schemas/branding",
            "nullable": true
          },
          "external_id": {
            "type": "string"
          },
          "identities": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "in_setup": {
            "type": "string"
          },
          "intents": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_template": {
            "type": "string"
          },
          "marketing_channel": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/plan"
          },
          "suggested_identities": {
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "tags": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "package": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "currency": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "discount_amount": {
            "type": "string"
          },
          "discount_unit": {
            "type": "string"
          },
          "expiration": {
            "type": "integer"
          },
          "expiration_unit": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "image_path": {
            "nullable": true
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/item1"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "online_payment_enabled": {
            "type": "boolean"
          },
          "price": {
            "type": "string"
          },
          "products": {
            "items": {
              "$ref": "#/components/schemas/product"
            },
            "type": "array"
          },
          "total_bookings": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "path_params": {
        "properties": {
          "this_is_a_parameter": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "payment": {
        "properties": {
          "amount": {
            "type": "integer"
          },
          "charged_at": {
            "type": "string",
            "nullable": true
          },
          "client_id": {
            "type": "string"
          },
          "conversation_id": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "offline": {
            "type": "boolean"
          },
          "other_payment_method": {
            "type": "string"
          },
          "paid_at": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "paid_offline": {
            "type": "boolean",
            "nullable": true
          },
          "payment_action": {
            "type": "string",
            "nullable": true
          },
          "payment_id": {
            "type": "string",
            "nullable": true
          },
          "payment_method": {
            "type": "string"
          },
          "payment_requests": {
            "items": {
              "$ref": "#/components/schemas/payment_request"
            },
            "type": "array",
            "nullable": true
          },
          "reference": {
            "type": "string"
          },
          "send_receipt": {
            "type": "boolean",
            "nullable": true
          },
          "staff_id": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "source_data": {
            "$ref": "#/components/schemas/source_data",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "payment_cards_sync_card_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data28"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_checkout_put_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_checkout_url_key_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data29"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_client_packages_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data30"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_client_packages_post_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_client_packages_update_usage_post_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data14"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_client_packages_update_usage_post_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data31"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_get_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_package_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data32"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_package_id_get_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_package_id_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data32"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_package_id_put_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_packages_post_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_request": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_settings": {
        "properties": {
          "billing_address": {
            "nullable": true
          },
          "braintree_merchant_id": {
            "nullable": true
          },
          "currency": {
            "type": "string"
          },
          "ewallet_type": {
            "type": "string"
          },
          "partial_payments_enabled": {
            "type": "boolean"
          },
          "payments_enabled": {
            "type": "boolean"
          },
          "payments_gateway_type": {
            "type": "string"
          },
          "paypal_email": {
            "format": "email",
            "type": "string"
          },
          "square_location_currency": {
            "nullable": true
          },
          "square_location_id": {
            "nullable": true
          },
          "square_location_name": {
            "nullable": true
          },
          "stripe_access_token": {
            "nullable": true
          },
          "stripe_user_id": {
            "nullable": true
          }
        },
        "type": "object"
      },
      "payment_settings_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data33"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_settings_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data33"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_status": {
        "properties": {
          "amount_to_pay_h": {
            "type": "string"
          },
          "balance_h": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "price_before_coupon": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_statuses_id_apply_coupon_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data34"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_statuses_id_apply_coupon_put_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_statuses_id_validate_coupon_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data34"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_statuses_id_validate_coupon_get_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payments_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data22"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payments_payment_uid_match_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data36"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payments_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data35"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "plan": {
        "properties": {
          "expires_on": {
            "format": "date-time",
            "type": "string"
          },
          "external_subscription_params": {
            "type": "string"
          },
          "plan_name": {
            "type": "string"
          },
          "staff_slots": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "plugin": {
        "properties": {
          "external_id": {
            "type": "string"
          },
          "plan_name": {
            "type": "string"
          },
          "plan_started_at": {
            "format": "date-time",
            "type": "string"
          },
          "plan_terminated_at": {
            "format": "date-time",
            "type": "string"
          },
          "site_url": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "policies": {
        "properties": {
          "cancellation": {
            "$ref": "#/components/schemas/cancellation"
          },
          "meetings": {
            "$ref": "#/components/schemas/meetings"
          },
          "rescheduling": {
            "$ref": "#/components/schemas/rescheduling"
          }
        },
        "type": "object"
      },
      "product": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "rescheduling": {
        "properties": {
          "can_reschedule": {
            "type": "boolean"
          },
          "can_reschedule_now": {
            "type": "boolean"
          },
          "time_limit": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "scheduling_appointments_appointment_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data38"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_appointments_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data37"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_bookings_booking_uid_update_rsvp_state_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data41"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_bookings_cancel_post_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data40"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_bookings_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data39"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_bookings_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data40"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_bookings_post_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_event_instance_event_instance_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data42"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_scheduling_forms_get_form_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data25"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_staff_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data43"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_staff_staff_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data44"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_waitlist_cancel_put_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data45"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_waitlist_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data45"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scheduling_waitlist_post_422_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "section": {
        "properties": {
          "description": {
            "type": "string"
          },
          "editable": {
            "type": "boolean",
            "nullable": true
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/field"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "service": {
        "properties": {
          "auto_follow_up_hours": {
            "nullable": true,
            "type": "integer"
          },
          "approval_mode": {
            "type": "string"
          },
          "booking_restriction": {
            "$ref": "#/components/schemas/booking_restriction",
            "nullable": true
          },
          "business_enabled": {
            "type": "boolean"
          },
          "business_uid": {
            "type": "string"
          },
          "charge_type": {
            "nullable": true,
            "type": "string"
          },
          "color_id": {
            "type": "integer"
          },
          "currency": {
            "nullable": true,
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "default_staff": {
            "nullable": true
          },
          "description": {
            "nullable": true,
            "type": "string"
          },
          "display": {
            "type": "boolean"
          },
          "display_missing_error": {
            "type": "boolean"
          },
          "duration": {
            "nullable": true,
            "type": "integer"
          },
          "event_display_remaining_spots": {
            "type": "boolean"
          },
          "future_bookings_limit": {
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "image_path": {
            "nullable": true,
            "type": "string"
          },
          "interaction_type": {
            "nullable": true,
            "type": "string"
          },
          "meeting_interaction_details": {
            "type": "string"
          },
          "meeting_reminder_sms_1": {
            "nullable": true,
            "type": "boolean"
          },
          "meeting_reminder_sms_2": {
            "nullable": true,
            "type": "boolean"
          },
          "min_hours_before_meeting": {
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "max_attendance": {
            "type": "integer"
          },
          "order": {
            "nullable": true,
            "type": "integer"
          },
          "padding": {
            "nullable": true,
            "type": "integer"
          },
          "photo_path": {
            "type": "string"
          },
          "price": {
            "nullable": true,
            "type": "integer"
          },
          "remind_before_in_hours_1": {
            "format": "float",
            "nullable": true,
            "type": "number"
          },
          "remind_before_in_hours_2": {
            "nullable": true,
            "type": "integer"
          },
          "rwg_eligible": {
            "nullable": true,
            "type": "boolean"
          },
          "service_type": {
            "type": "string"
          },
          "sms_booking_confirmation": {
            "nullable": true,
            "type": "boolean"
          },
          "staff_settings": {
            "$ref": "#/components/schemas/staff_settings"
          },
          "type": {
            "nullable": true,
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object"
      },
      "services_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data11"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "services_service_id_availability_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data47"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "services_service_id_get_200_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data46"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "source_data": {
        "properties": {
          "campaign": {
            "nullable": true,
            "type": "string"
          },
          "channel": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "website_url": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "staff": {
        "properties": {
          "active": {
            "type": "string"
          },
          "deleted": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invite_sent": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string"
          },
          "mobile_number": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "photo_url": {
            "type": "string",
            "nullable": true
          },
          "professional_title": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "staff1": {
        "properties": {
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "staff_settings": {
        "properties": {
          "random_selection": {
            "type": "boolean"
          },
          "joint_availability": {
            "nullable": true
          }
        }
      },
      "state_summary": {
        "properties": {
          "state": {
            "type": "string"
          },
          "state_h": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "subitem": {
        "properties": {
          "category": {
            "type": "string"
          },
          "item_name": {
            "$ref": "#/components/schemas/item_name"
          },
          "route": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "tax": {
        "properties": {
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "token": {
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "tokens_get_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data48"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "tokens_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data13"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "tokens_revoke_post_201_response": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data49"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "waitlist": {
        "properties": {
          "client_id": {
            "type": "integer"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "entity_id": {
            "type": "integer"
          },
          "entity_type": {
            "type": "string"
          },
          "event_instance_uid": {
            "type": "string"
          },
          "initiator": {
            "type": "string"
          },
          "matter": {
            "$ref": "#/components/schemas/matter"
          },
          "source_id": {
            "type": "integer"
          },
          "spot": {
            "type": "integer"
          },
          "staff_uid": {
            "type": "string"
          },
          "start_time_h": {
            "type": "string"
          },
          "state_summary": {
            "$ref": "#/components/schemas/state_summary"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "where_h": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "default": {
        "flows": {
          "implicit": {
            "authorizationUrl": "https://ignore.myclients.io",
            "scopes": {
              "platform": "All platform related operations",
              "platform_create": "platform create scope",
              "platform_delete": "platform delete scope",
              "platform_read": "platform read scope",
              "platform_update": "platform update scope"
            }
          }
        },
        "type": "oauth2",
        "x-scopes-bindings": {
          "platform": "",
          "platform_create": "",
          "platform_delete": "",
          "platform_read": "",
          "platform_update": ""
        }
      }
    }
  },
  "info": {
    "title": "Platform API",
    "version": "v2.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/apps": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "apps": [
                        {
                          "app_id": "some_id",
                          "name": "Some App"
                        },
                        {
                          "app_id": "some_id",
                          "name": "Some App"
                        }
                      ],
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_get_201_response"
                }
              }
            },
            "description": "app created"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "List of apps",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "api_uri": {
                    "description": "Link to the application API",
                    "type": "string"
                  },
                  "app_code_name": {
                    "description": "The app's code name. This will be used as the app's id for APIS",
                    "type": "string"
                  },
                  "app_features": {
                    "description": "A list of the app's features. Will be displayed to the user in the app info page.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "app_layer": {
                    "description": "Layer of application.",
                    "type": "string"
                  },
                  "app_mobile_screenshot_uris": {
                    "description": "Links to screenshots of the app. Will be displayed in the app info page on mobile display",
                    "type": "string"
                  },
                  "app_screenshot_uris": {
                    "description": "Links to screenshots of the app. Will be displayed in the app info page on desktop display",
                    "type": "string"
                  },
                  "app_type": {
                    "description": "The app's type. Valid values are: payments, wallets, communication, menu_items, docuforms, import_clients, automated_flows",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "contact_support_link": {
                    "description": "Link to the app's contact support page",
                    "type": "string"
                  },
                  "deep_link": {
                    "description": "The deep link to an inner product page. This is not made for third-party apps, but for apps that open as part of the product. Made for internal developer use only.",
                    "properties": {
                      "path": {
                        "description": "The relative path to the page.",
                        "type": "string"
                      },
                      "path_params": {
                        "description": "The params that will be added to the path URL (optional)",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "demand_scopes": {
                    "description": "Scopes the application must have in order to serve requests.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "description": {
                    "properties": {
                      "logo": {
                        "description": "Link to the app's logo",
                        "type": "string"
                      },
                      "short_description": {
                        "description": "The app's short description. Should contain a summarize review of the app's purpose and functions.",
                        "type": "string"
                      },
                      "text": {
                        "description": "The app's long description. Should describe the app's functions in detail.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "installation_endpoint": {
                    "description": "The endpoint with which the app will be notified it was installed",
                    "type": "string"
                  },
                  "locales": {
                    "description": "Locales supported by the app",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "menu_items": {
                    "description": "Configuration for the left sidebar menu",
                    "properties": {
                      "subitems": {
                        "description": "Items array",
                        "items": {
                          "properties": {
                            "category": {
                              "description": "Section of the left menu in which the item will appear.",
                              "type": "string"
                            },
                            "item_name": {
                              "description": "Item names in different languages",
                              "properties": {
                                "de": {
                                  "type": "string"
                                },
                                "en": {
                                  "description": "Item name in english",
                                  "type": "string"
                                },
                                "es": {
                                  "type": "string"
                                },
                                "fr": {
                                  "type": "string"
                                },
                                "he": {
                                  "type": "string"
                                },
                                "it": {
                                  "type": "string"
                                },
                                "pl": {
                                  "type": "string"
                                },
                                "pt": {
                                  "type": "string"
                                },
                                "ru": {
                                  "type": "string"
                                },
                                "sl": {
                                  "type": "string"
                                },
                                "tr": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "permissions": {
                              "description": "Permissions to control who can view this menu item. Available permissions: [\"can_access_listings_management\", \"can_access_soci\", \"can_access_online_presence\", \"can_access_clients\", \"can_use_reports\", \"can_view_payments\", \"can_view_documents\"]",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "Suffix route relative to the app domain.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "description": "The app's name",
                    "type": "string"
                  },
                  "open_in_new_tab": {
                    "description": "Whether the app will be opened in a new tab or as an iframe",
                    "type": "boolean"
                  },
                  "personal_connection": {
                    "description": "Whether the app requires each user to connect separately",
                    "type": "boolean"
                  },
                  "privacy_policy_link": {
                    "description": "A link to the apps privacy policy",
                    "type": "string"
                  },
                  "redirect_uri": {
                    "description": "The link that the user will be redirected to when opening the app",
                    "type": "string"
                  },
                  "scopes": {
                    "description": "Scopes the application needs access to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "supported_countries": {
                    "description": "Countries in which the app will be available. Empty array for all countries.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "trusted": {
                    "description": "Whether application can skip the authorization screen (true/false)",
                    "type": "string"
                  },
                  "uninstallation_endpoint": {
                    "description": "The endpoint with which the app will be notified it was uninstalled",
                    "type": "string"
                  },
                  "url_params": {
                    "description": "Parameters that will be passed to the app.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "app_code_name": "some_code_name",
                        "app_id": "some_id",
                        "client_id": "OAuth Client ID",
                        "client_secret": "OAuth Client Secret",
                        "name": "Some App"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_post_201_response"
                }
              }
            },
            "description": "app created"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Creates an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}": {
      "get": {
        "description": "Returns an app its by code name, if it is associated with the token's directory",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "application": {
                          "api_uri": "https://oururi.com",
                          "app_code_name": "IncredibleCodeName",
                          "app_features": [
                            "Lorem ipsum dolor",
                            "consectetur adipiscing"
                          ],
                          "app_screenshot_uris": [
                            "https://www.techadvisor.com/cmsdata/features/3685380/rick_and_morty_season_4_thumb800.jpg"
                          ],
                          "app_type": [
                            "communication"
                          ],
                          "contact_support_link": "https://www.ynet.co.il/home/0,7340,L-8,00.html",
                          "description": {
                            "logo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/3835/normal_rqmnvkhvgg0g82mtzcoir0cg7vyythwg.png",
                            "short_description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringilla urna, porttitor rhoncus dolor purus non enim praesent elementum facilisis leo, vel fringilla est ullamcorper eget."
                          },
                          "installation_endpoint": "https://iwasinstalled.com",
                          "locales": [
                            "en",
                            "es",
                            "fr"
                          ],
                          "menu_items": null,
                          "name": "New Testing App 2",
                          "open_in_new_tab": true,
                          "openid": true,
                          "privacy_policy_link": "https://www.sport5.co.il/",
                          "redirect_uri": "https://en.wikipedia.org/wiki",
                          "supported_countries": [
                            "United States",
                            "United Kingdom",
                            "Israel"
                          ],
                          "trusted": true,
                          "uninstallation_endpoint": "https://iwasuninstalled.com",
                          "url_params": []
                        },
                        "success": true
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Read an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Updates an app by the code name specified in the path",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "api_uri": {
                    "description": "Link to the application API",
                    "type": "string"
                  },
                  "app_features": {
                    "description": "A list of the app's features. Will be displayed to the user in the app info page.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "app_layer": {
                    "description": "Layer of application.",
                    "type": "string"
                  },
                  "app_mobile_screenshot_uris": {
                    "description": "Links to screenshots of the app. Will be displayed in the app info page on mobile display",
                    "type": "string"
                  },
                  "app_screenshot_uris": {
                    "description": "Links to screenshots of the app. Will be displayed in the app info page on desktop display",
                    "type": "string"
                  },
                  "app_type": {
                    "description": "The app's type. Valid values are: payments, wallets, communication, menu_items, docuforms, import_clients, automated_flows",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "contact_support_link": {
                    "description": "Link to the app's contact support page",
                    "type": "string"
                  },
                  "deep_link": {
                    "description": "The deep link to an inner product page. This is not made for third-party apps, but for apps that open as part of the product. Made for internal developer use only.",
                    "properties": {
                      "path": {
                        "description": "The relative path to the page.",
                        "type": "string"
                      },
                      "path_params": {
                        "description": "The params that will be added to the path URL (optional)",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "demand_scopes": {
                    "description": "Scopes the application must have in order to serve requests.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "description": {
                    "properties": {
                      "logo": {
                        "description": "Link to the app's logo",
                        "type": "string"
                      },
                      "short_description": {
                        "description": "The app's short description. Should contain a summarize review of the app's purpose and functions.",
                        "type": "string"
                      },
                      "text": {
                        "description": "The app's long description. Should describe the app's functions in detail.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "installation_endpoint": {
                    "description": "The endpoint with which the app will be notified it was installed",
                    "type": "string"
                  },
                  "locales": {
                    "description": "Locales supported by the app",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "menu_items": {
                    "description": "Configuration for the left sidebar menu",
                    "properties": {
                      "subitems": {
                        "description": "Items array",
                        "items": {
                          "properties": {
                            "category": {
                              "description": "Section of the left menu in which the item will appear. Valid values are: calendar, clients, payments, documents, campaigns, reputation, my-livesite, social, app_market, reports",
                              "type": "string"
                            },
                            "item_name": {
                              "description": "Item names in different languages",
                              "properties": {
                                "de": {
                                  "type": "string"
                                },
                                "en": {
                                  "description": "Item name in english",
                                  "type": "string"
                                },
                                "es": {
                                  "type": "string"
                                },
                                "fr": {
                                  "type": "string"
                                },
                                "he": {
                                  "type": "string"
                                },
                                "it": {
                                  "type": "string"
                                },
                                "pl": {
                                  "type": "string"
                                },
                                "pt": {
                                  "type": "string"
                                },
                                "ru": {
                                  "type": "string"
                                },
                                "sl": {
                                  "type": "string"
                                },
                                "tr": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "permissions": {
                              "description": "Permissions to control who can view this menu item. Available permissions: [\"can_access_listings_management\", \"can_access_soci\", \"can_access_online_presence\", \"can_access_clients\", \"can_use_reports\", \"can_view_payments\", \"can_view_documents\"]",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "Suffix route relative to the app domain.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "description": "The app's name",
                    "type": "string"
                  },
                  "open_in_new_tab": {
                    "description": "Whether the app will be opened in a new tab or as an iframe",
                    "type": "boolean"
                  },
                  "personal_connection": {
                    "description": "Whether the app requires each user to connect separately",
                    "type": "boolean"
                  },
                  "privacy_policy_link": {
                    "description": "A link to the apps privacy policy",
                    "type": "string"
                  },
                  "redirect_uri": {
                    "description": "The link that the user will be redirected to when opening the app",
                    "type": "string"
                  },
                  "scopes": {
                    "description": "Scopes the application needs access to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "supported_countries": {
                    "description": "Countries in which the app will be available. Empty array for all countries.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "trusted": {
                    "description": "Whether application can skip the authorization screen (true/false)",
                    "type": "string"
                  },
                  "uninstallation_endpoint": {
                    "description": "The endpoint with which the app will be notified it was uninstalled",
                    "type": "string"
                  },
                  "url_params": {
                    "description": "Parameters that will be passed to the app. Valid values are: impersonate, business_uid, staff_role, staff_uid, payment_permissions, language, package",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "application": {
                        "api_uri": "https://OurApi.com",
                        "app_features": [
                          "Talk to all your friends!",
                          "Purchase stuff online!"
                        ],
                        "app_layer": "cores",
                        "app_screenshot_uris": [
                          "http://OurBestScreenshot.png"
                        ],
                        "app_type": [
                          "communication"
                        ],
                        "contact_support_link": "https://contactsupport.com",
                        "deep_link": {
                          "path": "/app/somepath",
                          "path_params": {
                            "this_is_a_parameter": 12
                          }
                        },
                        "demand_scopes": [
                          "payments",
                          "clients"
                        ],
                        "description": {
                          "logo": "https://BeautifulLogo.png",
                          "short_description": "This is the app's short description. A quick summary of the app's uses.",
                          "text": "This is the app's long description. It should describe the app's uses and benefits in detail."
                        },
                        "installation_endpoint": "https://iwasinstalled.com",
                        "locales": [
                          "en"
                        ],
                        "menu_items": {
                          "subitems": [
                            {
                              "category": "clients",
                              "item_name": {
                                "en": "My RDBMS"
                              },
                              "route": "route"
                            }
                          ]
                        },
                        "name": "Our app",
                        "open_in_new_tab": true,
                        "privacy_policy_link": "https://ourprivacy.com",
                        "redirect_uri": "https://redirect.com",
                        "scopes": [
                          "clients"
                        ],
                        "supported_countries": [
                          "US"
                        ],
                        "trusted": "false",
                        "uninstallation_endpoint": "https://iwasuninstalled.com",
                        "url_params": [
                          "business_uid"
                        ]
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_put_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/assign": {
      "post": {
        "description": "Assign an application to business or directory so that it can be viewed in the App Market",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_uid": {
                    "description": "The business uid to associate the app to.",
                    "type": "string"
                  },
                  "directory_uid": {
                    "description": "The directory uid to associate the app to.",
                    "type": "string"
                  },
                  "is_internal": {
                    "description": "Specify that the app is an internal - used with directory_uid only.",
                    "type": "string"
                  },
                  "pre_installed": {
                    "description": "Define the app as pre-installed for all new accounts of this directory - used with directory_uid only.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "app_data": {
                          "assignment": {
                            "app_id": 1,
                            "business_id": 1222,
                            "created_at": "2021-11-16T13:29:47.000Z",
                            "directory_id": 12,
                            "id": 1,
                            "is_internal": false,
                            "pre_installed": false,
                            "updated_at": "2021-11-16T13:29:47.000Z"
                          }
                        }
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_assign_post_201_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Assign an app on directory or a business [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/assign"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/install_app": {
      "post": {
        "description": "Installs an app for the business whose token was used for authorization",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "app_data": {
                        "app_code_name": "IncredibleCodeName",
                        "app_id": 72,
                        "app_name": "My Wiki Pages"
                      },
                      "data": {
                        "app_data": {
                          "app_code_name": "mywikipages_72",
                          "app_features": [],
                          "app_host": "https://en.wikipedia.org/wiki",
                          "app_id": 72,
                          "app_name": "My Wiki Pages",
                          "app_screenshot_uris": [],
                          "contact_support_link": null,
                          "description": {},
                          "is_internal": false,
                          "locales": [],
                          "permissions": null,
                          "privacy_policy_link": null,
                          "requires_upgrade": false,
                          "status": "installed",
                          "supported_countries": [],
                          "url_params": [
                            "language",
                            "staff_role"
                          ]
                        }
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_install_app_post_201_response"
                }
              }
            },
            "description": "Success"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "app_data": {
                        "app_code_name": "IncredibleCodeName"
                      },
                      "errors": [
                        {
                          "code": "already_exists",
                          "message": "Already installed"
                        }
                      ],
                      "success": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_install_app_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Install an app [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/install_app"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/unassign": {
      "post": {
        "description": "Unassign an application from business or directory",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_uid": {
                    "description": "The business uid to associate the app to.",
                    "type": "string"
                  },
                  "directory_uid": {
                    "description": "The directory uid to associate the app to.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "app_data": {
                          "assignment": {
                            "app_id": 1,
                            "business_id": 1222,
                            "created_at": "2021-11-16T13:29:47.000Z",
                            "directory_id": 12,
                            "id": 1,
                            "is_internal": false,
                            "updated_at": "2021-11-16T13:29:47.000Z"
                          }
                        }
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_unassign_post_201_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Unassign an app on directory or a business [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/unassign"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/uninstall_app": {
      "post": {
        "description": "Uninstalls an app for the business whose token was used for authorization",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "app_data": {
                        "app_code_name": "IncredibleCodeName",
                        "app_id": 72,
                        "app_name": "My Wiki Pages"
                      },
                      "data": {
                        "app_data": {
                          "app_code_name": "mywikipages_72",
                          "app_features": [],
                          "app_host": "https://en.wikipedia.org/wiki",
                          "app_id": 72,
                          "app_name": "My Wiki Pages",
                          "app_screenshot_uris": [],
                          "contact_support_link": null,
                          "description": {},
                          "is_internal": false,
                          "locales": [],
                          "permissions": null,
                          "privacy_policy_link": null,
                          "requires_upgrade": false,
                          "status": "uninstalled",
                          "supported_countries": [],
                          "url_params": [
                            "language",
                            "staff_role"
                          ]
                        }
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_uninstall_app_post_201_response"
                }
              }
            },
            "description": "Success"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "app_data": {
                        "app_code_name": "IncredibleCodeName"
                      },
                      "errors": [
                        {
                          "code": "missing",
                          "message": "App not installed"
                        }
                      ],
                      "success": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apps_id_uninstall_app_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Uninstall an app [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/uninstall_app"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses": {
      "get": {
        "description": "Retrieves a business by email or external_id. One of email or external ID is required.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by email specified",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \"external_id\" specified",
            "in": "query",
            "name": "external_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "businesses": [
                          "a123b456c789"
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_get_200_response"
                }
              }
            },
            "description": "Business ID Retrieved"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Business filtered by email or external_id",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses?email={email}"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Creates a Business.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "admin_account": {
                    "properties": {
                      "country_name": {
                        "description": "United States",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Admin display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Email Address",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "FName",
                        "type": "string"
                      },
                      "language": {
                        "default": "en",
                        "description": "one of en,es,fr,it,pt,de,pl,nl,en-GB,he,keys,pseudo  - Default value is determined by the Directory",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "LName",
                        "type": "string"
                      },
                      "password": {
                        "description": "Password",
                        "type": "string"
                      },
                      "phone": {
                        "description": "54863488",
                        "type": "string"
                      }
                    },
                    "required": [
                      "email"
                    ],
                    "type": "object"
                  },
                  "business": {
                    "properties": {
                      "address": {
                        "description": "My Home Bellevue washington",
                        "type": "string"
                      },
                      "business_category": {
                        "description": "aeroclub",
                        "type": "string"
                      },
                      "country_name": {
                        "description": "United States",
                        "type": "string"
                      },
                      "hide_address": {
                        "default": true,
                        "description": "true",
                        "type": "boolean"
                      },
                      "landing_page": {
                        "description": "Homepage",
                        "type": "string"
                      },
                      "name": {
                        "description": "Business name",
                        "type": "string"
                      },
                      "phone": {
                        "description": "84874784848",
                        "type": "string"
                      },
                      "short_description": {
                        "description": "My business description",
                        "type": "string"
                      },
                      "time_zone": {
                        "default": "Mountain Time (US & Canada)",
                        "description": "Time zone name from https://api.rubyonrails.org/v4.2.3/classes/ActiveSupport/TimeZone.html, Default value is determined by the Directory",
                        "type": "string"
                      },
                      "website_url": {
                        "description": "www.mysite.com",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "meta": {
                    "properties": {
                      "analytics": {
                        "properties": {
                          "google_client_id": {
                            "description": "Google Client ID",
                            "type": "string"
                          },
                          "mixpanel_id": {
                            "description": "Mixpanel Distinct ID",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "audit": {
                        "description": "[{'action' => 'action_name','context' => {'key' => 'value'}}]",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "external_id": {
                        "description": "myaeroclubbusiness",
                        "type": "string"
                      },
                      "identities": {
                        "description": "[\"aaaaaaa1\", \"bbbbbbb2\"]",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "in_setup": {
                        "default": false,
                        "description": "true",
                        "type": "boolean"
                      },
                      "intents": {
                        "description": "[\"accept_payments_tile\", \"documents_and_forms\", \"add_online_scheduling\", \"secure_portal_for_clients\", \"promotions\", \"manage_client_records\"]",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "invite": {
                        "description": "invite_key",
                        "type": "string"
                      },
                      "is_template": {
                        "default": false,
                        "description": "true",
                        "type": "boolean"
                      },
                      "note": {
                        "description": "12-2-2019 Bounce rate reset",
                        "type": "string"
                      },
                      "suggested_identities": {
                        "description": "[\"ccccccc3\", \"ddddddd4\"]",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "description": "['Tag1', 'Tag2']",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "template_business_id": {
                        "description": "aa22cc1b3d5",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "admin_account": {
                          "country_name": "United States",
                          "display_name": "DName",
                          "email": "adminemail@email.com",
                          "first_name": "FName",
                          "language": "en",
                          "last_name": "LName",
                          "phone": "+154863488",
                          "user_id": "11111"
                        },
                        "business": {
                          "business_category": "aeroclub",
                          "country_name": "United States",
                          "id": "1a123b456c789",
                          "landing_page": "Homepage",
                          "name": "Business name",
                          "short_description": "My business description"
                        },
                        "integrations": {},
                        "meta": {
                          "auth_token": "a1a1a1a1a1",
                          "external_id": "1213444",
                          "identities": [
                            "aaa123",
                            "bbb345",
                            "1a3c4f4h"
                          ],
                          "in_setup": "false",
                          "intents": [
                            "accept_payments_tile",
                            "documents_and_forms"
                          ],
                          "is_template": "true",
                          "marketing_channel": "Client Channel",
                          "note": "Client Note",
                          "plan": {
                            "expires_on": "2022-06-14T09:31:21.000",
                            "external_subscription_params": "***",
                            "plan_name": "Essential"
                          },
                          "tags": "Client tag1, Client tag2"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_post_200_response"
                }
              }
            },
            "description": "Business Created"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/validate_login": {
      "get": {
        "description": "Validates username/password credentials for login. The API will be blocked for the username after 5 failed attempts.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Email",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "authenticated": true
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_validate_login_get_200_response"
                }
              }
            },
            "description": "Login Validated"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Login",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "business": {
                          "admin_account": {
                            "country_name": "United States",
                            "display_name": "DName",
                            "email": "adminemail@email.com",
                            "first_name": "FName",
                            "language": "en",
                            "last_name": "LName",
                            "phone": "+154863488",
                            "user_id": "11111"
                          },
                          "business": {
                            "address": "1st 2nd St., NYC, NY",
                            "business_category": "aeroclub",
                            "country_name": "United States",
                            "hide_Address": "true",
                            "id": "1a123b456c789",
                            "landing_page": "Homepage",
                            "name": "Business name",
                            "phone": "123456789",
                            "short_description": "My business description",
                            "time_zone": "Mountain Time (US & Canada)",
                            "website_url": "www.mysite.com"
                          },
                          "integrations": {
                            "plugins": [
                              {
                                "external_id": "aaaa-aaaa-aaaa-aaaa-aaaaaaaaaa",
                                "plan_name": "trial",
                                "plan_started_at": "2022-06-14T09:31:21.000",
                                "plan_terminated_at": "2022-06-14T09:31:21.000",
                                "site_url": "www.siteaddress.com",
                                "type": "Plugin type"
                              }
                            ]
                          },
                          "meta": {
                            "auth_token": "a1a1a1a1a1",
                            "branding": {
                              "color": "#4DA51E",
                              "url_logo": "https://domainexmaple.com/tomylogourl.jpg"
                            },
                            "external_id": "1213444",
                            "identities": [
                              "aaa123",
                              "bbb345",
                              "1a3c4f4h"
                            ],
                            "in_setup": "false",
                            "intents": [
                              "accept_payments_tile",
                              "documents_and_forms"
                            ],
                            "is_template": "true",
                            "marketing_channel": "Client Channel",
                            "note": "Client Note",
                            "plan": {
                              "expires_on": "2022-06-14T09:31:21.000",
                              "external_subscription_params": "***",
                              "plan_name": "Essential"
                            },
                            "suggested_identities": [
                              "ccc333",
                              "ddd444"
                            ],
                            "tags": "Client tag1, Client tag2"
                          }
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_get_200_response"
                }
              }
            },
            "description": "Business Retrieved"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business": {
                    "properties": {
                      "admin_account": {
                        "properties": {
                          "country_name": {
                            "description": "United States",
                            "type": "string"
                          },
                          "display_name": {
                            "description": "Admin display name",
                            "type": "string"
                          },
                          "email": {
                            "description": "Email Address",
                            "type": "string"
                          },
                          "first_name": {
                            "description": "FName",
                            "type": "string"
                          },
                          "language": {
                            "default": "en",
                            "description": "one of en,es,fr,it,pt,de,pl,nl,en-GB,he,keys,pseudo  - Default value is determined by the Directory",
                            "type": "string"
                          },
                          "last_name": {
                            "description": "LName",
                            "type": "string"
                          },
                          "phone": {
                            "description": "52525252",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "business": {
                        "properties": {
                          "address": {
                            "description": "My Home Bellevue washington",
                            "type": "string"
                          },
                          "business_category": {
                            "description": "aeroclub",
                            "type": "string"
                          },
                          "country_name": {
                            "description": "United States",
                            "type": "string"
                          },
                          "hide_address": {
                            "default": true,
                            "description": "true",
                            "type": "boolean"
                          },
                          "logo_url": {
                            "description": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                            "type": "string"
                          },
                          "name": {
                            "description": "Business name",
                            "type": "string"
                          },
                          "phone": {
                            "description": "52525252",
                            "type": "string"
                          },
                          "short_description": {
                            "description": "My business description",
                            "type": "string"
                          },
                          "time_zone": {
                            "default": "Mountain Time (US & Canada)",
                            "description": "Time zone name from https://api.rubyonrails.org/v4.2.3/classes/ActiveSupport/TimeZone.html, Default value is determined by the Directory",
                            "type": "string"
                          },
                          "website_url": {
                            "description": "www.mysite.com",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "integrations": {
                        "properties": {
                          "plugins": {
                            "properties": {
                              "external_id": {
                                "description": "External party instance id",
                                "type": "string"
                              },
                              "plan_name": {
                                "description": "Package name to subscribe the external party instance to",
                                "type": "string"
                              },
                              "site_url": {
                                "description": "Site url of the external party instance",
                                "type": "string"
                              },
                              "type": {
                                "description": "Plugin type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "external_id",
                              "type",
                              "plan_name"
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "meta": {
                        "properties": {
                          "plan": {
                            "properties": {
                              "external_subscription_params": {
                                "description": "External Subscription Parameters (should not be used with recurly type)",
                                "type": "string"
                              },
                              "plan_name": {
                                "description": "Package name to subscribe (for manual type) / recurly plan code (for recurly type)",
                                "type": "string"
                              },
                              "staff_slots": {
                                "description": "Staff sub accounts limit (should not be used with recurly type)",
                                "type": "string"
                              },
                              "type": {
                                "description": "recurly/manual",
                                "type": "string"
                              }
                            },
                            "required": [
                              "plan_name"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "plan"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "business"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "business": {
                          "admin_account": {
                            "country_name": "United States",
                            "display_name": "DName",
                            "email": "adminemail@email.com",
                            "first_name": "FName",
                            "language": "en",
                            "last_name": "LName",
                            "phone": "+154863488",
                            "user_id": "11111"
                          },
                          "business": {
                            "business_category": "aeroclub",
                            "country_name": "United States",
                            "id": "1a123b456c789",
                            "name": "Business name",
                            "short_description": "My business description"
                          },
                          "integrations": {
                            "plugins": [
                              {
                                "external_id": "aaaa-aaaa-aaaa-aaaa-aaaaaaaaaa",
                                "plan_name": "trial",
                                "plan_started_at": "2022-06-14T09:31:21.000",
                                "plan_terminated_at": "2022-06-14T09:31:21.000",
                                "site_url": "www.siteaddress.com",
                                "type": "Plugin type"
                              }
                            ]
                          },
                          "meta": {
                            "auth_token": "a1a1a1a1a1",
                            "external_id": "1213444",
                            "identities": [
                              "aaa123",
                              "bbb345",
                              "1a3c4f4h"
                            ],
                            "in_setup": "false",
                            "intents": [
                              "accept_payments_tile",
                              "documents_and_forms"
                            ],
                            "is_template": "true",
                            "marketing_channel": "Client Channel",
                            "note": "Client Note",
                            "plan": {
                              "expires_on": "2022-06-14T09:31:21.000",
                              "external_subscription_params": "***",
                              "plan_name": "Essential",
                              "staff_slots": "7"
                            },
                            "tags": "Client tag1, Client tag2"
                          }
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_post_200_response"
                }
              }
            },
            "description": "Business Updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Incorrect parameters for update",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_post_400_response"
                }
              }
            },
            "description": "Business Updated"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/update_business"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/features": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        "sales_account",
                        "identity_profession_mapping",
                        "verti_override_clone",
                        "checklist_dashboard",
                        "zoom",
                        "two_months_free_benefit",
                        "dashboard_quick_actions",
                        "accept_payments_wizard",
                        "basic_business_features",
                        "scheduling_features",
                        "invoicing_features",
                        "lead_gen_features",
                        "ultimate_features"
                      ],
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_features_get_200_response"
                }
              }
            },
            "description": "Features Retrieved"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Business Features",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/staffs": {
      "get": {
        "description": "Get Staff List and Details (ordered by position field).",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional fetch status active/all",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "staff": [
                          {
                            "active": "true",
                            "deleted": "false",
                            "display_name": "FName LName 1",
                            "email": "staff_1@email.com",
                            "first_name": "FName",
                            "id": "1a123b456c789d",
                            "invite_sent": "2015-10-23 13:02:09",
                            "last_name": "LName 1",
                            "mobile_number": "0500000000",
                            "photo": null,
                            "professional_title": "Staff Title 1",
                            "role": "admin"
                          },
                          {
                            "active": "true",
                            "deleted": "false",
                            "display_name": "FName LName 2",
                            "email": "staff_2@email.com",
                            "first_name": "FName",
                            "id": "1a123b456c789e",
                            "invite_sent": "2015-10-23 13:02:09",
                            "last_name": "LName 2",
                            "mobile_number": "0500000001",
                            "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                            "professional_title": "Staff Title 2",
                            "role": "user"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_staffs_get_200_response"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Staff Members",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Creates a Staff.",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "invite": {
                        "description": "Send invite to staff on creation",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "staff": {
                    "properties": {
                      "display_name": {
                        "description": "Display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Email Address",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "First Name",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "Last Name",
                        "type": "string"
                      },
                      "role": {
                        "description": "Valid role [admin, manager, marketing, collaborator, user]",
                        "type": "string"
                      }
                    },
                    "required": [
                      "email",
                      "display_name"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "staff"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "staff": [
                          {
                            "active": "true",
                            "deleted": "false",
                            "display_name": "My Display Name",
                            "email": "my.email@domain.com",
                            "first_name": "First Name",
                            "id": "somerandomuniqueid",
                            "invite_sent": "2015-10-23 13:02:09",
                            "last_name": "Last Name",
                            "mobile_number": "0500000001",
                            "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                            "professional_title": "My Professional Title",
                            "role": "user"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_staffs_post_200_response"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create Staff Member",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/staffs/{staff_id}": {
      "delete": {
        "description": "Delete Staff Member.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_staffs_staff_id_delete_200_response"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Delete Staff Member",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "description": "Get Staff Details.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "staff": [
                          {
                            "active": "true",
                            "deleted": "false",
                            "display_name": "My Display Name",
                            "email": "my.email@domain.com",
                            "first_name": "First Name",
                            "id": "somerandomuniqueid",
                            "invite_sent": "2015-10-23 13:02:09",
                            "last_name": "Last Name",
                            "mobile_number": "0500000000",
                            "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                            "professional_title": "My Professional Title",
                            "role": "user"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_staffs_staff_id_get_200_response"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Staff Member Details",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/wizards": {
      "get": {
        "description": "Gets a list of available wizards",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "completed": false,
                          "flags": {},
                          "id": "f3arahhm8hd7df4j",
                          "name": "quo"
                        },
                        {
                          "completed": false,
                          "flags": {},
                          "id": "3wql7xn94374tit0",
                          "name": "consectetur"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_wizards_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of wizards",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/wizards/{wizard_name}": {
      "get": {
        "description": "Gets a wizard by given name",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Wizard's name (e.g. register_wizard)",
            "in": "path",
            "name": "wizard_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "completed": false,
                        "flags": {},
                        "id": "f3arahhm8hd7df4j",
                        "name": "quo"
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_wizards_wizard_name_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a wizard by name",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards/{wizard_name}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update a wizard with given name",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Wizard's name (e.g. register_wizard)",
            "in": "path",
            "name": "wizard_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "completed": {
                    "description": "Completed true/false",
                    "type": "boolean"
                  },
                  "flags": {
                    "description": "Wizard's flags",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "completed": false,
                        "flags": {},
                        "id": "f3arahhm8hd7df4j",
                        "name": "quo"
                      },
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/businesses_business_id_wizards_wizard_name_put_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update a wizard",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards/{wizard_name}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/categories": {
      "get": {
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "show only categories with valid services",
            "in": "query",
            "name": "only_visible_services",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "return only categories that have events with future instances or valid services",
            "in": "query",
            "name": "has_future_instance",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Categories ids array",
            "explode": false,
            "in": "query",
            "name": "categories_array",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "categories": [
                          {
                            "id": "fjx4rv01kbg5x0kx",
                            "name": "My Services",
                            "num_of_services": 2,
                            "position": 1
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/categories_get_200_response"
                }
              }
            },
            "description": "Categories Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Categories [Alpha]",
        "tags": [
          "Categories"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/categories/{category_id}/services": {
      "get": {
        "description": "Get Services List by category [Alpha]",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "category_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff uids array",
            "explode": false,
            "in": "query",
            "name": "staff_array",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return only services that have events with future instances",
            "in": "query",
            "name": "has_future_instance",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "next_page": 1,
                        "services": [
                          {
                            "booking_restriction": {
                              "is_client_restricted": true,
                              "restricted_client_statuses": [
                                "lead"
                              ],
                              "restriction_rule_text": "Existing clients only",
                              "uid": "some uid"
                            },
                            "charge_type": "no_price",
                            "currency": "ILS",
                            "description": "desc",
                            "duration": 60,
                            "id": "qp2ggfq6x4sd8evq",
                            "image_path": "",
                            "interaction_type": "business_location",
                            "name": "In-office appointment",
                            "price": 120,
                            "type": "AppointmentService"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/categories_category_id_services_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services List by category [Alpha]",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories/{category_id}/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients": {
      "get": {
        "description": "Gets a list of clients or search by client attributes.",
        "parameters": [
          {
            "description": "Search Term",
            "in": "query",
            "name": "search_term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Search By - email/uid",
            "in": "query",
            "name": "search_by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 50",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "clients": [
                          {
                            "address": "My Hourse, bellvue, seattle, wasinton",
                            "business_uid": "8606505ffb6e22db",
                            "campaign": "Source Campaign",
                            "channel": "Source Channel",
                            "created_at": "2022-02-20T12:28:42Z",
                            "custom_field1": "value1",
                            "custom_field2": "value2",
                            "custom_field3": "value3",
                            "customer_status": "lead",
                            "email": "clientemail@mail.com",
                            "first_name": "First Name",
                            "id": "tw3t3cey3ozuiw5c",
                            "last_name": "Last Name",
                            "mobile_phone": "+16378383489",
                            "opt_in": "1",
                            "source": "Client Portal",
                            "source_url": "Source URL",
                            "tags": [],
                            "updated_at": "2022-02-20T12:28:42Z"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Clients",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Creates a Client and returns the new client's data and the client's JWT token",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "custom_field1": {
                    "description": "Custom Field 1",
                    "type": "string"
                  },
                  "custom_field2": {
                    "description": "Custom Field 2",
                    "type": "string"
                  },
                  "custom_field3": {
                    "description": "Custom Field 3",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email Address",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "First Name",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Last Name",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Phone Number",
                    "type": "string"
                  },
                  "source_campaign": {
                    "description": "Source campaign",
                    "type": "string"
                  },
                  "source_channel": {
                    "description": "Source channel",
                    "type": "string"
                  },
                  "source_name": {
                    "description": "Source name",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "Source URL",
                    "type": "string"
                  },
                  "staff_id": {
                    "description": "Staff ID",
                    "type": "string"
                  },
                  "status": {
                    "description": "Use a client status to categorize clients according to their relationship with your business",
                    "type": "string"
                  },
                  "tags": {
                    "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "client": {
                          "address": "Some big house in Hollywood 9",
                          "created_at": "2022-02-20T12:28:42Z",
                          "customer_status": "customer",
                          "email": "michael.douglass@spartacus.info.fake",
                          "first_name": "Michael",
                          "id": "p1dx8zjrm65dlb3k",
                          "last_name": "Douglas",
                          "mobile_phone": "+19083073848",
                          "opt_in": null,
                          "source_data": {
                            "campaign": "campaign",
                            "channel": "channel",
                            "name": "website",
                            "website_url": "www.somesite.com"
                          },
                          "spam": false,
                          "tags": [
                            "tag1",
                            "tag2"
                          ]
                        },
                        "token": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdHlfdWlkIjoicDFkeDh6anJtNjVkbGIzayIsImV4dHJhIjp7ImJ1c2luZXNzX3VpZCI6Ijg2MDY1MDVmZmI2ZTIyZGIifSwiZXhwIjoxNjQ3Nzc5MzIzLCJyZWZyZXNoIjoxNjQ3NzYwMTIzLCJ0eXBlIjoiY2xpZW50IiwianRpIjoiMmE1NWE5MzkxOWU3YmU5NjJmZWEyMTBlMThhMzdjMGI3YjdmZTA3NDg4OWQ2YTRjNGRjYTgxNDA0NDliYjg3YiJ9.N0pteEQq4nC18YrWm7CRkxG1UWvzKN6UdVyT-pxaHGg"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_post_201_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/merges/merge_clients": {
      "put": {
        "description": "Merge two or more duplicate clients into one primary client.",
        "parameters": [
          {
            "description": "UID of the destination primary client.",
            "in": "query",
            "name": "to_client_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UIDs of all the clients to be merged into the to_client_uid, comma separated",
            "in": "query",
            "name": "from_client_uids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_merges_merge_clients_put_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Merge duplicate clients into a primary client.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/merge_clients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/merges/possible_merge_master": {
      "get": {
        "description": "Returns a list of client UIDs that can be used as a primary client for the merge.",
        "parameters": [
          {
            "description": "List of client uids, comma separated",
            "in": "query",
            "name": "client_ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "master_ids": [
                        "no8o036ygs6oksdw",
                        "vx4jpza6y0efqtmz"
                      ],
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_merges_possible_merge_master_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "List of clients that can be used as primary for merge.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/possible_merge_master"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/payment/client_packages/update_usage": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body2"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "package_name": "Package Name"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_payment_client_packages_update_usage_post_200_response"
                }
              }
            },
            "description": "Package updated by client"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_payment_client_packages_update_usage_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Use Client Package Credit [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/update_usage"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/payment/client_packages/validate": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment status ID",
            "in": "query",
            "name": "payment_status_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "has_package": true
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_payment_client_packages_validate_get_200_response"
                }
              }
            },
            "description": "Validation Occurred"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_payment_client_packages_validate_get_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Client Package has redemption [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/validate"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}": {
      "delete": {
        "description": "Deletes a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "client": {
                          "address": "My Hourse, bellvue, seattle, wasinton",
                          "campaign": "Source Campaign",
                          "channel": "Source Channel",
                          "created_at": "2022-02-20T12:28:42Z",
                          "custom_field1": "value1",
                          "custom_field2": "value2",
                          "custom_field3": "value3",
                          "customer_status": "inactive",
                          "email": "clientemail@mail.com.dtw3t3cey3ozuiw5c",
                          "first_name": "First Name",
                          "id": "tw3t3cey3ozuiw5c",
                          "last_name": "Last Name",
                          "matter_term": "clients",
                          "matters": [],
                          "mobile_phone": "+16378383489",
                          "opt_in": "1",
                          "source": "Client Portal",
                          "source_url": "Source URL",
                          "tags": []
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_delete_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Deletes a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "description": "Retrieves a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "client": {
                          "address": "My Hourse, bellvue, seattle, wasinton",
                          "campaign": "Source Campaign",
                          "channel": "Source Channel",
                          "created_at": "2022-02-20T12:28:42Z",
                          "custom_field1": "value1",
                          "custom_field2": "value2",
                          "custom_field3": "value3",
                          "customer_status": "lead",
                          "email": "clientemail@mail.com",
                          "first_name": "First Name",
                          "id": "tw3t3cey3ozuiw5c",
                          "last_name": "Last Name",
                          "matter_term": "clients",
                          "matters": [
                            {
                              "display_name": "First Name Last Name",
                              "fields": [],
                              "uid": "k48xai20zcfb1ha9"
                            }
                          ],
                          "mobile_phone": "+16378383489",
                          "opt_in": "1",
                          "source": "Client Portal",
                          "source_url": "Source URL",
                          "tags": []
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Retrieves a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "custom_field1": {
                    "description": "Custom Field 1",
                    "type": "string"
                  },
                  "custom_field2": {
                    "description": "Custom Field 2",
                    "type": "string"
                  },
                  "custom_field3": {
                    "description": "Custom Field 3",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email Address",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "First Name",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Last Name",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Phone Number",
                    "type": "string"
                  },
                  "staff_id": {
                    "description": "Staff ID",
                    "type": "string"
                  },
                  "status": {
                    "description": "Use a client status to categorize clients according to their relationship with your business",
                    "type": "string"
                  },
                  "tags": {
                    "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "client": {
                          "address": "My Hourse, bellvue, seattle, wasinton",
                          "created_at": "2022-02-20T12:28:42Z",
                          "customer_status": "lead",
                          "email": "clientemail@mail.com",
                          "first_name": "NEWFIRSTNAME",
                          "id": "tw3t3cey3ozuiw5c",
                          "last_name": "Last Name",
                          "mobile_phone": "+16378383489",
                          "opt_in": "1",
                          "spam": false,
                          "tags": []
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_put_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/conversations": {
      "get": {
        "description": "Gets a list of conversations for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "conversations": [
                          {
                            "business_id": "1484d19e2ce37943",
                            "business_unread": false,
                            "client_id": "jtdzy0zt92nr79te",
                            "client_unread": false,
                            "created_at": "2022-02-20T12:28:46.173Z",
                            "deep_link": "/app/conversations/e3f1jrgyci4zphoz",
                            "id": "e3f1jrgyci4zphoz",
                            "last_business_action": "",
                            "last_client_action": null,
                            "staff_id": "c33c4ab5fdb60ba2",
                            "title": null,
                            "updated_at": "2022-02-20T12:28:46.173Z"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_conversations_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Conversations For A Client",
        "tags": [
          "Conversations"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/conversations"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/documents": {
      "get": {
        "description": "Gets a list of documents for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "documents": []
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_documents_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Documents For A Client",
        "tags": [
          "Documents"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/documents"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/estimates": {
      "get": {
        "parameters": [
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, approved, draft, invoiced, rejected. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,rejected",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "estimates": [
                          {
                            "address": "habarzel 32\\nTel Aviv",
                            "amount": 8.8,
                            "client_address": "Lombard St, San Francisco, CA",
                            "client_id": "kf9d91uh82bclson",
                            "client_name": "Alice Smith",
                            "conversation_id": "rv28qk5ey5eretu9",
                            "created_at": "2018-06-14T09:31:21.000",
                            "currency": "USD",
                            "due_date": "2018-06-14",
                            "estimate_date": "2018-06-14",
                            "estimate_number": "1",
                            "id": "aaabbbccc112233",
                            "items": [
                              {
                                "amount": 10,
                                "description": "Service Description",
                                "discount": 2,
                                "quantity": 1,
                                "taxes": [
                                  {
                                    "name": "10 tax",
                                    "rate": 10
                                  }
                                ],
                                "title": "Item title"
                              }
                            ],
                            "note": "Estimate for your service",
                            "source_data": {
                              "campaign": null,
                              "channel": "",
                              "name": "client_portal",
                              "website_url": null
                            },
                            "staff_id": "mg9d34uh92bclwzg",
                            "status": "draft/issued/approved/rejected/invoiced",
                            "title": "Estimate title"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_estimates_get_200_response"
                }
              }
            },
            "description": "Estimates Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Estimates Of Client",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/invoices": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, draft, declined. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,draft",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "invoices": [
                          {
                            "address": "habarzel 32\\nTel Aviv",
                            "allow_online_payment": true,
                            "amount": 8.8,
                            "client_id": "aaabbbccc112233",
                            "conversation_id": "rv28qk5ey5eretu9",
                            "created_at": "2018-06-14T09:31:21.000",
                            "currency": "USD",
                            "due_date": "2018-06-14",
                            "id": "aaabbbccc112233",
                            "invoice_number": "6",
                            "issued_at": "2018-06-14",
                            "items": [
                              {
                                "amount": 10,
                                "description": "Service Description",
                                "discount": 2,
                                "quantity": 1,
                                "taxes": [
                                  {
                                    "name": "10 tax",
                                    "rate": 10
                                  }
                                ],
                                "title": "Item title"
                              }
                            ],
                            "note": "Invoice for your service",
                            "payment_balance": 5,
                            "payment_state": "pending",
                            "source_data": {
                              "campaign": null,
                              "channel": "",
                              "name": "client_portal",
                              "website_url": null
                            },
                            "staff_id": "mg9d91uh92bclwzg",
                            "status": "issued/draft",
                            "title": "Invoice Title"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_invoices_get_201_response"
                }
              }
            },
            "description": "Invoices Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoices Of Client",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/payment/client_packages": {
      "get": {
        "parameters": [
          {
            "description": "Client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "client_packages": [
                          {
                            "active": "true",
                            "amount": 100,
                            "booking_credits": [
                              {
                                "bookings_usage": "0",
                                "credit_items": [
                                  {
                                    "bookings_usage": 0,
                                    "item_id": "mzuk2kkt7vjnxdwo",
                                    "item_type": "SERVICE"
                                  }
                                ],
                                "id": "vu1rovse0166a9d9",
                                "total_bookings": "10"
                              }
                            ],
                            "bookings_usage": "0",
                            "business_id": "vqzqruk6nyclxpp6",
                            "client_id": "9yxsdkr1hdjtocpv",
                            "conversation_id": "war7ow99zh14qlty",
                            "created_at": "2020-06-01T21:05:00.562Z",
                            "currency": "USD",
                            "id": "m73jkvg4bf2z71b2",
                            "image_path": "",
                            "name": "Music Lessons",
                            "package_id": "v2fvy50p8gjuvnvb",
                            "payment_status_id": "6v5ybwkavv0z9hff",
                            "payment_status_state": "pending",
                            "products": [
                              {
                                "id": "03nmq2uih783ro0g",
                                "name": "product1_name",
                                "quantity": 2
                              },
                              {
                                "id": "57ndq2uih503rca8",
                                "name": "product2_name",
                                "quantity": 4
                              }
                            ],
                            "staff_id": "mg9d91uh92bclwzg",
                            "total_bookings": "10",
                            "valid_from": "2020-06-01",
                            "valid_until": "2020-07-01"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_payment_client_packages_get_200_response"
                }
              }
            },
            "description": "Client Packages Returned"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_payment_client_packages_get_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Client Packages List Of Client [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payment/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/payments": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payments": [
                          {
                            "amount": 300,
                            "charged_at": "23/4/2019 09:00:00",
                            "client_id": "12344",
                            "conversation_id": "1234",
                            "currency": "USD",
                            "id": "1234",
                            "note": "Payment Note",
                            "offline": true,
                            "other_payment_method": "bit",
                            "payment_method": "cash/check",
                            "payment_requests": [
                              {
                                "id": "1246"
                              }
                            ],
                            "reference": "123",
                            "state": "paid/refunded",
                            "title": "Payment Title"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clients_client_id_payments_get_201_response"
                }
              }
            },
            "description": "Payments Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payments of Client",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/conversations": {
      "get": {
        "description": "Gets a list of conversations",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Folder - Inbox / Follow-up / Sent / Archived",
            "in": "query",
            "name": "folder",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "conversations": [
                          {
                            "business_id": "1484d19e2ce37943",
                            "business_unread": false,
                            "client_id": "jtdzy0zt92nr79te",
                            "client_unread": false,
                            "created_at": "2022-02-20T12:28:46.173Z",
                            "deep_link": "/app/conversations/e3f1jrgyci4zphoz",
                            "id": "e3f1jrgyci4zphoz",
                            "last_business_action": "",
                            "last_client_action": null,
                            "staff_id": "c33c4ab5fdb60ba2",
                            "title": null,
                            "updated_at": "2022-02-20T12:28:46.173Z"
                          },
                          {
                            "business_id": "1484d19e2ce37943",
                            "business_unread": false,
                            "client_id": "40i7ymrp52mohgrv",
                            "client_unread": false,
                            "created_at": "2022-02-20T12:28:46.272Z",
                            "deep_link": "/app/conversations/xumdiqlz1k4oj3g0",
                            "id": "xumdiqlz1k4oj3g0",
                            "last_business_action": "",
                            "last_client_action": null,
                            "staff_id": "c33c4ab5fdb60ba2",
                            "title": null,
                            "updated_at": "2022-02-20T12:28:46.272Z"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/conversations_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Conversations",
        "tags": [
          "Conversations"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/conversations"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/estimates": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, approved, draft, invoiced, rejected. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,rejected",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "estimates": [
                          {
                            "address": "habarzel 32\\nTel Aviv",
                            "amount": 8.8,
                            "client_address": "Lombard St, San Francisco, CA",
                            "client_id": "kf9d91uh82bclson",
                            "client_name": "Alice Smith",
                            "conversation_id": "rv28qk5ey5eretu9",
                            "created_at": "2018-06-14T09:31:21.000",
                            "currency": "USD",
                            "due_date": "2018-06-14",
                            "estimate_date": "2018-06-14",
                            "estimate_number": "1",
                            "id": "aaabbbccc112233",
                            "items": [
                              {
                                "amount": 10,
                                "description": "Service Description",
                                "discount": 2,
                                "quantity": 1,
                                "taxes": [
                                  {
                                    "name": "10 tax",
                                    "rate": 10
                                  }
                                ],
                                "title": "Item title"
                              }
                            ],
                            "note": "Estimate for your service",
                            "source_data": {
                              "campaign": null,
                              "channel": "",
                              "name": "client_portal",
                              "website_url": null
                            },
                            "staff_id": "mg9d34uh92bclwzg",
                            "status": "draft/issued/approved/rejected/invoiced",
                            "title": "Estimate title"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/estimates_get_200_response"
                }
              }
            },
            "description": "Estimates Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Estimates List",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/estimates"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Business address",
                    "type": "string"
                  },
                  "client_address": {
                    "description": "Client's address",
                    "type": "string"
                  },
                  "client_id": {
                    "description": "Client ID",
                    "type": "string"
                  },
                  "client_name": {
                    "description": "Client's name",
                    "type": "string"
                  },
                  "conversation_id": {
                    "description": "Conversation ID",
                    "type": "string"
                  },
                  "currency": {
                    "description": "Estimate currency: USD, ILS etc.",
                    "type": "string"
                  },
                  "due_date": {
                    "description": "Estimate due date, must be later than estimate_date (ISO 8601 format)",
                    "type": "string"
                  },
                  "estimate_date": {
                    "description": "Estimate date (ISO 8601 format)",
                    "type": "string"
                  },
                  "estimate_number": {
                    "description": "Estimate number",
                    "type": "number"
                  },
                  "items": {
                    "items": {
                      "properties": {
                        "amount": {
                          "description": "Estimate item amount",
                          "type": "number"
                        },
                        "description": {
                          "description": "Estimate item description",
                          "type": "string"
                        },
                        "discount": {
                          "description": "Estimate item discount",
                          "type": "number"
                        },
                        "quantity": {
                          "description": "Estimate item quantity",
                          "type": "number"
                        },
                        "taxes": {
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Estimate item tax name",
                                "type": "string"
                              },
                              "rate": {
                                "description": "Estimate item tax rate in percentages",
                                "type": "number"
                              }
                            },
                            "required": [
                              "rate",
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "title": {
                          "description": "Estimate item title",
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "amount",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "note": {
                    "description": "Estimate note",
                    "type": "string"
                  },
                  "send_email": {
                    "description": "Set to true in order to send the estimate to the client (for issued estimate). Default: false",
                    "type": "boolean"
                  },
                  "source_campaign": {
                    "description": "Source campaign",
                    "type": "string"
                  },
                  "source_channel": {
                    "description": "Source channel",
                    "type": "string"
                  },
                  "source_name": {
                    "description": "Source name",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "Source URL",
                    "type": "string"
                  },
                  "status": {
                    "description": "Possible values: draft, issued, approved, rejected, invoiced. Default: issued",
                    "type": "string"
                  },
                  "title": {
                    "description": "Estimate title",
                    "type": "string"
                  }
                },
                "required": [
                  "client_id",
                  "due_date",
                  "estimate_date",
                  "currency",
                  "address",
                  "items",
                  "title"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "estimate": {
                          "address": "habarzel 32\\nTel Aviv",
                          "amount": 8.8,
                          "client_address": "Lombard St, San Francisco, CA",
                          "client_id": "1kfvtps4a4wlh3lc",
                          "client_name": "Alice Smith",
                          "conversation_id": "rv28qk5ey5eretu9",
                          "created_at": "2018-06-14T09:31:21.000",
                          "currency": "USD",
                          "due_date": "2020-04-24",
                          "estimate_date": "2020-04-20",
                          "estimate_number": "1",
                          "id": "aaabbbccc112233",
                          "items": [
                            {
                              "amount": 10,
                              "description": "Service Description",
                              "discount": 2,
                              "quantity": 1,
                              "taxes": [
                                {
                                  "name": "10 tax",
                                  "rate": 10
                                }
                              ],
                              "title": "Item title"
                            }
                          ],
                          "note": "Estimate for your service",
                          "source_data": {
                            "campaign": null,
                            "channel": "",
                            "name": "client_portal",
                            "website_url": null
                          },
                          "staff_id": "mg9d34uh92bclwzg",
                          "status": "draft/issued/approved/rejected/invoiced",
                          "title": "Estimate title"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/estimates_post_201_response"
                }
              }
            },
            "description": "Estimate Created"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Estimate",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/fields": {
      "get": {
        "description": "Get all Fields",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "default_value": "",
                          "deleted": false,
                          "forms": [
                            "client_card"
                          ],
                          "id": "ug2d6ny248h3egml",
                          "keep_asking": false,
                          "label": "Colors",
                          "object_type": "matter",
                          "options": [
                            "Red",
                            "Green",
                            "Blue"
                          ],
                          "required": false,
                          "type": "dropdown"
                        }
                      ],
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/fields_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get all Fields",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Create a New Field",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "default_value": {
                    "description": "Default value for checkbox/opt-in",
                    "type": "boolean"
                  },
                  "forms": {
                    "description": "A list of forms to include this field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "keep_asking": {
                    "description": "Indicates if to keep asking until filled",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "Field label",
                    "type": "string"
                  },
                  "options": {
                    "description": "A list of options for dropdown field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "required": {
                    "description": "Indicates if the field is required",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "Field type",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "default_value": "",
                        "deleted": false,
                        "forms": [
                          "client_card",
                          "leave_details",
                          "share_documents"
                        ],
                        "id": "lxo3w1wfw1b22ql3",
                        "keep_asking": true,
                        "label": "Eye color",
                        "object_type": "contact",
                        "options": [
                          "Brown",
                          "Green"
                        ],
                        "required": false,
                        "type": "dropdown"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/fields_post_201_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a New Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/fields/{field_id}": {
      "delete": {
        "description": "Deletes a Field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/fields_field_id_delete_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Deletes a Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "description": "Gets the field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "default_value": "",
                        "deleted": false,
                        "forms": [
                          "client_card"
                        ],
                        "id": "l97wfnj88fdwfs3m",
                        "keep_asking": false,
                        "label": "Colors",
                        "object_type": "matter",
                        "options": [
                          "Red",
                          "Green",
                          "Blue"
                        ],
                        "required": false,
                        "type": "dropdown"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/fields_field_id_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Updates a Field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "default_value": {
                    "description": "Default value for checkbox/opt-in",
                    "type": "boolean"
                  },
                  "forms": {
                    "description": "A list of forms to include this field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "keep_asking": {
                    "description": "Indicates if to keep asking until filled",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "Field label",
                    "type": "string"
                  },
                  "options": {
                    "description": "A list of options for dropdown field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "required": {
                    "description": "Indicates if the field is required",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "default_value": "",
                        "deleted": false,
                        "forms": [
                          "client_card",
                          "leave_details",
                          "share_documents"
                        ],
                        "id": "xjiyw2zmnr3tkvre",
                        "keep_asking": true,
                        "label": "Colors",
                        "object_type": "matter",
                        "options": [
                          "Red",
                          "Green"
                        ],
                        "required": false,
                        "type": "dropdown"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/fields_field_id_put_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates a Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/forms": {
      "get": {
        "description": "Gets all the forms of the business.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "sections": [
                            {
                              "editable": true,
                              "fields": [
                                {
                                  "default_value": "",
                                  "id": "qh0ki5qtre0ayi0q",
                                  "keep_asking": false,
                                  "required": false,
                                  "type": "singleline"
                                }
                              ]
                            }
                          ],
                          "type": "client_card"
                        }
                      ],
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/forms_get_200_response"
                }
              }
            },
            "description": "Forms Retrieved"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Forms",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/forms"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update a Form.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sections": {
                    "description": "A list sections in the form",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "description": "A list fields in the form",
                          "items": {
                            "type": "object",
                            "properties": {
                              "default_value": {
                                "description": "The default value the field should have",
                                "type": "string"
                              },
                              "id": {
                                "description": "Field Id",
                                "type": "string"
                              },
                              "keep_asking": {
                                "description": "Should a value be requested until one was provided?",
                                "type": "boolean"
                              },
                              "required": {
                                "description": "Is this field required?",
                                "type": "boolean"
                              },
                              "type": {
                                "description": "Field Type",
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the form",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "sections": [
                          {
                            "editable": true,
                            "fields": [
                              {
                                "default_value": "",
                                "id": "qh0ki5qtre0ayi0q",
                                "keep_asking": false,
                                "required": false,
                                "type": "singleline"
                              }
                            ]
                          }
                        ],
                        "type": "client_card"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/forms_put_200_response"
                }
              }
            },
            "description": "Form Updated"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates a Form",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/forms"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/appointments": {
      "get": {
        "description": "Get appointments list",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "approval_mode": null,
                          "auto_follow_up_hours": 0,
                          "business_uid": "4d3162101ef1ba4b",
                          "category_name": null,
                          "charge_type": "no_price",
                          "client_color_id": 17,
                          "client_first_name": "Daniel",
                          "client_id": "9sx9iaynd0jtj6cb",
                          "client_last_name": "Schimmel",
                          "conversation_id": "lmxmm3f9f6uksxfm",
                          "coupon": null,
                          "created_at": "2022-02-20T14:28:30.225+02:00",
                          "currency": null,
                          "duration": 30,
                          "follow_up_data": null,
                          "follow_up_note": "",
                          "follow_up_time": null,
                          "follow_up_type": null,
                          "future_bookings_limit": 0,
                          "id": "zoldn8el5ysg0wbs",
                          "image_url": "",
                          "interaction_details": "non",
                          "interaction_type": "client_location",
                          "invoices": [],
                          "is_recurring": false,
                          "last_action_message": null,
                          "meeting_reminder_sms_1": false,
                          "meeting_reminder_sms_2": false,
                          "min_hours_before_meeting": null,
                          "no_show": false,
                          "notes": null,
                          "optional_times": [],
                          "payment": null,
                          "payment_id": null,
                          "payment_status": null,
                          "price": "0.0",
                          "remind_before_in_hours_1": 0.25,
                          "remind_before_in_hours_2": 0,
                          "request_data": null,
                          "series_id": null,
                          "series_instance_count": null,
                          "service_id": "lvlc1h47u2mqds7x",
                          "sms_booking_confirmation": null,
                          "source_data": {
                            "campaign": null,
                            "channel": null,
                            "id": 26,
                            "name": "initiated_by_staff",
                            "website_url": null
                          },
                          "staff_display_name": "Tarah Sanford",
                          "staff_id": "87786815c53e9d1e",
                          "staff_image": null,
                          "start_time": "2022-02-21T09:00:00.000+02:00",
                          "state": "scheduled",
                          "title": "Reduced responsive policy",
                          "type": "appointment",
                          "updated_at": "2022-02-20T14:28:30.225+02:00",
                          "zoom_start_url": null
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_appointments_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get appointments list",
        "tags": [
          "Appointments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/appointments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/businesses": {
      "get": {
        "description": "Gets a list of businesses",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "business": {
                            "admin_account": {
                              "country_name": "United States",
                              "display_name": "DName",
                              "email": "adminemail@email.com",
                              "first_name": "FName",
                              "language": "en",
                              "last_name": "LName",
                              "phone": "+154863488",
                              "user_id": "11111"
                            },
                            "business": {
                              "address": "1st 2nd St., NYC, NY",
                              "business_category": "aeroclub",
                              "country_name": "United States",
                              "hide_Address": "true",
                              "id": "1a123b456c789",
                              "landing_page": "Homepage",
                              "name": "Business name",
                              "phone": "123456789",
                              "short_description": "My business description",
                              "time_zone": "Mountain Time (US & Canada)",
                              "website_url": "www.mysite.com"
                            },
                            "integrations": {
                              "plugins": [
                                {
                                  "external_id": "aaaa-aaaa-aaaa-aaaa-aaaaaaaaaa",
                                  "plan_name": "trial",
                                  "plan_started_at": "2022-06-14T09:31:21.000",
                                  "plan_terminated_at": "2022-06-14T09:31:21.000",
                                  "site_url": "www.siteaddress.com",
                                  "type": "Plugin type"
                                }
                              ]
                            },
                            "meta": {
                              "auth_token": "a1a1a1a1a1",
                              "branding": {
                                "color": "#4DA51E",
                                "url_logo": "https://domainexmaple.com/tomylogourl.jpg"
                              },
                              "external_id": "1213444",
                              "identities": [
                                "aaa123",
                                "bbb345",
                                "1a3c4f4h"
                              ],
                              "in_setup": "false",
                              "intents": [
                                "accept_payments_tile",
                                "documents_and_forms"
                              ],
                              "is_template": "true",
                              "marketing_channel": "Client Channel",
                              "note": "Client Note",
                              "plan": {
                                "expires_on": "2022-06-14T09:31:21.000",
                                "external_subscription_params": "***",
                                "plan_name": "Essential"
                              },
                              "tags": "Client tag1, Client tag2"
                            }
                          }
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_businesses_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of businesses",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/businesses"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/campaign_recipients": {
      "get": {
        "description": "Gets a list of campaign recipients",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "acted_at": null,
                          "added_at": null,
                          "bounced_at": null,
                          "business_id": "0c02853fd2a87958",
                          "channel": null,
                          "clicked_at": null,
                          "client_id": "onhzmyag0pwxs25x",
                          "created_at": "2022-02-20T14:28:03.664+02:00",
                          "delivered_at": null,
                          "failure_reason": null,
                          "id": "c5gzzw21231v29q4",
                          "scheduled_campaign_id": "dhgboiv1098x9moj",
                          "spammed_at": null,
                          "updated_at": "2022-02-20T14:28:03.664+02:00",
                          "viewed_at": null
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_campaign_recipients_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of campaign recipients",
        "tags": [
          "Marketing"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/campaign_recipients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/campaigns": {
      "get": {
        "description": "Gets a list of campaigns",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "acted_count": 0,
                          "action_data": {
                            "name": "livesite"
                          },
                          "added_count": 0,
                          "background_color": null,
                          "body": "body",
                          "bounced_count": 0,
                          "business_uid": "b035cce04e98dff5",
                          "button_background_color": null,
                          "button_text": null,
                          "button_text_color": null,
                          "click_count": 0,
                          "created_at": "2022-02-20T14:28:04.539+02:00",
                          "deliver_count": 0,
                          "image": null,
                          "last_scheduled_at": null,
                          "last_sent_at": null,
                          "name": "foo",
                          "read_only": false,
                          "sms_content": null,
                          "spam_count": 0,
                          "subject": null,
                          "title": "title",
                          "uid": "yyz5qtp1v2b23azj",
                          "updated_at": "2022-02-20T14:28:04.539+02:00",
                          "view_count": 0
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_campaigns_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of campaigns",
        "tags": [
          "Marketing"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/campaigns"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/client_packages": {
      "get": {
        "description": "Gets a list of client packages",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "active": true,
                          "booking_credits": [],
                          "bookings_usage": 0,
                          "business_id": "7e3fa5955a3f40a2",
                          "client_id": "fp2pcvdzyi14xiyg",
                          "conversation_id": null,
                          "created_at": "2022-02-20T12:28:22.038Z",
                          "currency": "HKD",
                          "id": "b6d264b41ca2ff3c",
                          "image_path": "",
                          "name": "voluptate",
                          "package_id": "c07be8e36d20819e",
                          "payment_request_id": null,
                          "payment_request_state": null,
                          "payment_status_id": null,
                          "payment_status_state": null,
                          "price": null,
                          "products": [],
                          "staff_id": "af4432c73d05a403",
                          "total_bookings": 0,
                          "updated_at": "2022-02-20T12:28:22.038Z",
                          "valid_from": "2022-02-20",
                          "valid_until": "2022-02-20"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_client_packages_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of client packages",
        "tags": [
          "Global"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/clients": {
      "get": {
        "description": "Gets a list of clients",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "address": null,
                          "business_uid": "bc0cf55cda2b09ff",
                          "campaign": null,
                          "channel": null,
                          "created_at": "2022-02-20T12:28:01Z",
                          "customer_status": null,
                          "email": "janyce.mcclure@lubowitz.com",
                          "first_name": "Gil",
                          "id": "j5lldfzd02es2gnq",
                          "last_name": "Jones",
                          "mobile_phone": null,
                          "opt_in": null,
                          "source": null,
                          "source_url": null,
                          "tags": [],
                          "updated_at": "2022-02-20T12:28:01Z"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_clients_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of clients",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/clients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/conversations": {
      "get": {
        "description": "Gets a list of conversations",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "business_id": "c89a186788bfc0cd",
                          "business_unread": false,
                          "client_id": "mmads47uk32jjrhn",
                          "client_unread": false,
                          "created_at": "2022-02-20T14:28:06.470+02:00",
                          "deep_link": "/app/conversations/x1mmhv623yt1nud2",
                          "id": "x1mmhv623yt1nud2",
                          "last_business_action": "",
                          "last_client_action": null,
                          "staff_id": "54a7733ff3011526",
                          "title": null,
                          "updated_at": "2022-02-20T14:28:06.470+02:00"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_conversations_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of conversations",
        "tags": [
          "Global"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/conversations"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/estimates": {
      "get": {
        "description": "Gets a list of estimates",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "address": "50193 Walsh Prairie",
                          "amount": 812.57,
                          "business_uid": "aafd0087f272c342",
                          "client_address": "52019 Pacocha Drive",
                          "client_id": "tpagtrg845q322p3",
                          "client_name": "repudiandae",
                          "conversation_id": "dcv0je7qc9a647es",
                          "created_at": "2022-02-20T14:28:22.819+02:00",
                          "currency": "CAD",
                          "due_date": "2022-03-15",
                          "estimate_date": "2022-02-20",
                          "estimate_number": 1,
                          "id": "xsy8rgb4cqzgoz76",
                          "items": [
                            {
                              "amount": 95.82,
                              "description": "ad",
                              "discount": 0,
                              "quantity": 1,
                              "taxes": [],
                              "title": "et"
                            },
                            {
                              "amount": 87.73,
                              "description": "molestiae",
                              "discount": 0,
                              "quantity": 5,
                              "taxes": [],
                              "title": "ut"
                            },
                            {
                              "amount": 46.35,
                              "description": "ea",
                              "discount": 0,
                              "quantity": 6,
                              "taxes": [],
                              "title": "reiciendis"
                            }
                          ],
                          "note": "",
                          "source_data": null,
                          "staff_id": "8d388f88327387c7",
                          "status": "draft",
                          "title": "Estimate #0000001",
                          "updated_at": "2022-02-20T14:28:22.819+02:00"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_estimates_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of estimates",
        "tags": [
          "Global"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/event_attendances": {
      "get": {
        "description": "Gets a list of event attendances",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "client_id": "xj2ctcnjqzqi25zt",
                          "conversation_id": "34wfe72r9k3k3anu",
                          "created_at": "2022-02-20T14:28:31.481+02:00",
                          "currency": null,
                          "event_instance_id": "yqw5cqzzu50bs83s",
                          "id": "4ifgmailseonqnky",
                          "no_show": false,
                          "price": "0.0",
                          "state": "created",
                          "updated_at": "2022-02-20T14:28:31.481+02:00"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_event_attendances_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of event attendances",
        "tags": [
          "Event Attendance"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/event_attendances"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/event_instances": {
      "get": {
        "description": "Gets a list of event instances",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "charge_type": "paid",
                          "created_at": "2020-06-08T21:00:00.000Z",
                          "currency": "USD",
                          "duration": 60,
                          "end_time": "2020-06-08T22:00:00.000Z",
                          "interaction_details": "Tel Aviv, Israel",
                          "interaction_type": "business_location",
                          "price": "10.0",
                          "service_id": "d37paicvkb4u8taf",
                          "staff_id": "36ri3mtnk53zpfkc",
                          "start_time": "2020-06-08T21:00:00.000Z",
                          "state": "scheduled",
                          "title": "Event require pay",
                          "uid": "gmy6c6keyo2mmnaa",
                          "updated_at": "2020-06-08T21:00:00.000Z"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_event_instances_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of event instances",
        "tags": [
          "Event Instance"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/event_instances"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/invoices": {
      "get": {
        "description": "Gets a list of invoices",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "address": "5643 Hansen Route",
                          "allow_online_payment": false,
                          "amount": 529.54,
                          "business_id": "ceafb6ed3731ee1e",
                          "client_id": "9n0hzj8vtixnyksg",
                          "contact_details": null,
                          "conversation_id": "sb7wuv5dt6twh5jh",
                          "created_at": "2022-02-20T12:28:23.999Z",
                          "currency": "AUD",
                          "due_date": "2022-03-02",
                          "id": "rc8ew4ny5c2hjhlr",
                          "invoice_number": 1,
                          "issued_at": "2022-02-19",
                          "items": [
                            {
                              "amount": 54.5,
                              "description": "at",
                              "discount": 0,
                              "discount_rate": null,
                              "quantity": 3,
                              "taxes": [],
                              "title": "id"
                            },
                            {
                              "amount": 19.8,
                              "description": "distinctio",
                              "discount": 0,
                              "discount_rate": null,
                              "quantity": 3,
                              "taxes": [],
                              "title": "quas"
                            },
                            {
                              "amount": 76.66,
                              "description": "velit",
                              "discount": 0,
                              "discount_rate": null,
                              "quantity": 4,
                              "taxes": [],
                              "title": "fugit"
                            }
                          ],
                          "matter_details": null,
                          "note": "",
                          "payment_balance": 529.54,
                          "payment_state": "hidden",
                          "source_data": {
                            "campaign": null,
                            "channel": null,
                            "name": "unknown",
                            "website_url": null
                          },
                          "staff_id": "c39b2056dd9aaba5",
                          "status": "draft",
                          "title": "INVOICE #0000001",
                          "updated_at": "2022-02-20T12:28:23.999Z"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_invoices_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of invoices",
        "tags": [
          "Global"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/matters": {
      "get": {
        "description": "Gets a list of matters",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "business_uid": "fb739a4dd3db20a8",
                          "contacts": [
                            {
                              "display_name": "Gale Lowe",
                              "uid": "z1bvmayxp2j9074i"
                            }
                          ],
                          "created_at": "2022-02-20T14:28:02.329+02:00",
                          "deleted": false,
                          "display_name": "Gale Lowe",
                          "fields": [],
                          "staff": {
                            "uid": "391a28fc705c20de"
                          },
                          "tags": [],
                          "uid": "h5lvfv4ww04ewpvj",
                          "updated_at": "2022-02-20T14:28:02.329+02:00"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_matters_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of matters",
        "tags": [
          "Global"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/matters"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/packages": {
      "get": {
        "description": "Gets a list of packages",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "active": true,
                          "currency": "USD",
                          "description": "Package description",
                          "discount_amount": 25,
                          "discount_unit": "f",
                          "expiration": 1,
                          "expiration_unit": "m",
                          "id": "m73jkvg4bf2z71b2",
                          "image_path": null,
                          "items": [
                            {
                              "services": [
                                {
                                  "id": "mzuk2kkt7vjnxdwo",
                                  "name": "Service name"
                                }
                              ],
                              "total_bookings": "10"
                            }
                          ],
                          "name": "Music Lessons",
                          "online_payment_enabled": true,
                          "original_price": "120.0",
                          "price": "100.0",
                          "products": [
                            {
                              "id": "03nmq2uih783ro0g",
                              "name": "product1_name",
                              "quantity": 2
                            },
                            {
                              "id": "57ndq2uih503rca8",
                              "name": "product2_name",
                              "quantity": 4
                            }
                          ],
                          "total_bookings": 10
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_packages_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of packages",
        "tags": [
          "Global"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/payments": {
      "get": {
        "description": "Gets a list of payments",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "amount": 300,
                          "charged_at": "23/4/2019 09:00:00",
                          "client_id": "12344",
                          "conversation_id": "1234",
                          "created_at": "2021-01-01 09:00:00",
                          "currency": "USD",
                          "id": "1234",
                          "note": "Payment Note",
                          "offline": true,
                          "payment_method": "cash/check",
                          "payment_requests": [
                            {
                              "id": "1246"
                            }
                          ],
                          "state": "paid/refunded",
                          "title": "Payment Title",
                          "updated_at": "2021-01-01 09:00:00"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_payments_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of payments",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/products": {
      "get": {
        "description": "Gets a list of products",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "business_id": "a7d0ca8b90d94b3c",
                          "created_at": "2022-02-20T14:28:25.692+02:00",
                          "currency": null,
                          "description": null,
                          "display": true,
                          "id": "mlhzp93h4u82ysui",
                          "image_url": null,
                          "name": "nobis",
                          "price": "8.0",
                          "staff_id": "6d49ff69a7a435e2",
                          "taxes": [],
                          "total_price": "8.0",
                          "updated_at": "2022-02-20T14:28:25.692+02:00"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_products_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of products",
        "tags": [
          "Global"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/products"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/scheduled_campaigns": {
      "get": {
        "description": "Gets a list of scheduled campaigns",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "automatic": null,
                          "business_id": "0d0a2e6f92516b8a",
                          "campaign_id": "s7tsdc9hmwog5j2x",
                          "channel": null,
                          "created_at": "2022-02-20T14:28:05.091+02:00",
                          "id": "puesp2zg270lv4l5",
                          "recipients_count": null,
                          "scheduled_to": null,
                          "send_again": null,
                          "send_secondary": null,
                          "sms_content": null,
                          "status": null,
                          "subject": null,
                          "updated_at": "2022-02-20T14:28:05.091+02:00"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_scheduled_campaigns_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of scheduled campaigns",
        "tags": [
          "Marketing"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/scheduled_campaigns"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/services": {
      "get": {
        "description": "Gets a list of services",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "charge_type": "no_price",
                          "currency": "ILS",
                          "description": "desc",
                          "duration": 60,
                          "id": "qp2ggfq6x4sd8evq",
                          "image_path": "",
                          "interaction_type": "business_location",
                          "name": "In-office appointment",
                          "price": 120,
                          "type": "AppointmentService"
                        }
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_services_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of services",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/global/staffs": {
      "get": {
        "description": "Gets a list of staffs",
        "parameters": [
          {
            "description": "Date timestamp to start iteration. Default interval: 1 hour",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        [
                          {
                            "active": "true",
                            "deleted": "false",
                            "display_name": "FName LName 1",
                            "email": "staff_1@email.com",
                            "first_name": "FName",
                            "id": "1a123b456c789d",
                            "invite_sent": "2015-10-23 13:02:09",
                            "last_name": "LName 1",
                            "mobile_number": "0500000000",
                            "photo": null,
                            "role": "admin"
                          },
                          {
                            "active": "true",
                            "deleted": "false",
                            "display_name": "FName LName 2",
                            "email": "staff_2@email.com",
                            "first_name": "FName",
                            "id": "1a123b456c789e",
                            "invite_sent": "2015-10-23 13:02:09",
                            "last_name": "LName 2",
                            "mobile_number": "0500000000",
                            "photo": null,
                            "role": "user"
                          }
                        ]
                      ],
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/global_staffs_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of staffs",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/global/staffs"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/invoices": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, draft, declined. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,draft",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "invoices": [
                          {
                            "address": "habarzel 32\\nTel Aviv",
                            "allow_online_payment": true,
                            "amount": 8.8,
                            "client_id": "aaabbbccc112233",
                            "conversation_id": "rv28qk5ey5eretu9",
                            "created_at": "2018-06-14T09:31:21.000",
                            "currency": "USD",
                            "due_date": "2018-06-14",
                            "id": "aaabbbccc112233",
                            "invoice_number": "6",
                            "issued_at": "2018-06-14",
                            "items": [
                              {
                                "amount": 10,
                                "description": "Service Description",
                                "discount": 2,
                                "quantity": 1,
                                "taxes": [
                                  {
                                    "name": "10 tax",
                                    "rate": 10
                                  }
                                ],
                                "title": "Item title"
                              }
                            ],
                            "note": "Invoice for your service",
                            "payment_balance": 5,
                            "payment_state": "pending",
                            "source_data": {
                              "campaign": null,
                              "channel": "",
                              "name": "client_portal",
                              "website_url": null
                            },
                            "staff_id": "mg9d91uh92bclwzg",
                            "status": "issued/draft",
                            "title": "Invoice Title"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/invoices_get_201_response"
                }
              }
            },
            "description": "Invoices Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoices List",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "business address",
                    "type": "string"
                  },
                  "allow_online_payment": {
                    "description": "true, false, default: true if the business is connected to payment provider",
                    "type": "boolean"
                  },
                  "client_id": {
                    "description": "client_uid",
                    "type": "string"
                  },
                  "conversation_id": {
                    "description": "conversation_uid",
                    "type": "string"
                  },
                  "currency": {
                    "description": "USD, ILS etc.",
                    "type": "string"
                  },
                  "due_date": {
                    "description": "invoice due ,must be later than issued_at",
                    "type": "string"
                  },
                  "invoice_number": {
                    "description": "invoice number",
                    "type": "number"
                  },
                  "issued_at": {
                    "description": "invoice issue date",
                    "type": "string"
                  },
                  "items": {
                    "items": {
                      "properties": {
                        "amount": {
                          "description": "invoice item amount",
                          "type": "number"
                        },
                        "description": {
                          "description": "invoice item description",
                          "type": "string"
                        },
                        "discount": {
                          "description": "invoice item discount",
                          "type": "number"
                        },
                        "quantity": {
                          "description": "invoice item quantity",
                          "type": "number"
                        },
                        "taxes": {
                          "items": {
                            "properties": {
                              "name": {
                                "description": "invoice item tax name",
                                "type": "string"
                              },
                              "rate": {
                                "description": "invoice item tax rate in percentages",
                                "type": "number"
                              }
                            },
                            "required": [
                              "rate",
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "title": {
                          "description": "invoice item title",
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "amount",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "note": {
                    "description": "invoice note",
                    "type": "string"
                  },
                  "send_email": {
                    "description": "true, false, default false",
                    "type": "boolean"
                  },
                  "source_campaign": {
                    "description": "Source campaign",
                    "type": "string"
                  },
                  "source_channel": {
                    "description": "Source channel",
                    "type": "string"
                  },
                  "source_name": {
                    "description": "Source name",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "Source URL",
                    "type": "string"
                  },
                  "staff_id": {
                    "description": "owner is the default",
                    "type": "string"
                  },
                  "status": {
                    "description": "draft, issued, default issued",
                    "type": "string"
                  },
                  "title": {
                    "description": "invoice title",
                    "type": "string"
                  }
                },
                "required": [
                  "client_id",
                  "due_date",
                  "issued_at",
                  "currency",
                  "address",
                  "items"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "invoice": {
                          "address": "Oxford st.",
                          "allow_online_payment": false,
                          "amount": 8.8,
                          "client_id": "1kfvtps4a4wlh3lc",
                          "conversation_id": "3brhv2288yuvfmfd",
                          "created_at": "2019-12-17T21:07:04.659Z",
                          "currency": "USD",
                          "due_date": "2019-04-24",
                          "id": "an29s26qnw2pfryh",
                          "invoice_number": 97,
                          "issued_at": "2019-04-20",
                          "items": [
                            {
                              "amount": 10,
                              "description": "Service Description",
                              "discount": 2,
                              "quantity": 1,
                              "taxes": [
                                {
                                  "name": "10 tax",
                                  "rate": 10
                                }
                              ],
                              "title": "Service"
                            }
                          ],
                          "note": "Invoice for your service",
                          "payment_balance": 8.8,
                          "payment_state": "pending",
                          "source_data": {
                            "campaign": null,
                            "channel": "",
                            "name": "client_portal",
                            "website_url": null
                          },
                          "staff_id": "mg9d91uh92bclwzg",
                          "status": "issued",
                          "title": "INVOICE #0000097"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/invoices_post_201_response"
                }
              }
            },
            "description": "Invoice Created"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Invoice",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/invoices/{invoice_id}": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Invoice ID",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "invoice": {
                          "address": "habarzel 32\\nTel Aviv",
                          "allow_online_payment": true,
                          "amount": 8.8,
                          "client_id": "aaabbbccc112233",
                          "conversation_id": "rv28qk5ey5eretu9",
                          "created_at": "2018-06-14T09:31:21.000",
                          "currency": "USD",
                          "due_date": "2018-06-14",
                          "id": "aaabbbccc112233",
                          "invoice_number": "6",
                          "issued_at": "2018-06-14",
                          "items": [
                            {
                              "amount": 10,
                              "description": "Service Description",
                              "discount": 2,
                              "quantity": 1,
                              "taxes": [
                                {
                                  "name": "10 tax",
                                  "rate": 10
                                }
                              ],
                              "title": "Item title"
                            }
                          ],
                          "note": "Invoice for your service",
                          "payment_balance": 5,
                          "payment_state": "pending",
                          "source_data": {
                            "campaign": null,
                            "channel": "",
                            "name": "client_portal",
                            "website_url": null
                          },
                          "staff_id": "mg9d91uh92bclwzg",
                          "status": "issued/draft",
                          "title": "Invoice Title"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/invoices_invoice_id_get_201_response"
                }
              }
            },
            "description": "Invoices Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoice By ID",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices/{invoice_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/leadgen": {
      "post": {
        "parameters": [
          {
            "description": "A unique identifer of the business. Can be the Business UID or nickname\\external ID",
            "in": "header",
            "name": "X-On-Behalf-Of",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Lead's address",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "A unique identifier of the business. Can be the Business UID or nickname\\external ID.",
                    "type": "string"
                  },
                  "email": {
                    "description": "Lead email address. Unique per business.",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "Lead first name. Mandatory for a new lead.",
                    "type": "string"
                  },
                  "identifier_type": {
                    "description": "Defines which unique identifier will be used to search for an existing lead or create a new one. Possible values: \"email\" or \"unique_id\"",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Lead last name.",
                    "type": "string"
                  },
                  "message_data": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Key and value that will appear in message",
                    "type": "object"
                  },
                  "notifications": {
                    "description": "A list of notifications to send after processing of the lead. Possible values: \"auto-reply\" (thank you email to the end user), \"email\" (notify the business owner) or \"sms\" (text notification to the business owner). None if empty.",
                    "type": "string"
                  },
                  "opt_in": {
                    "description": "Send \"true\" if lead opted in for promotions. Make sure the \"opt-in\" client card field is added to the client card under Settings>Client card.",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Lead phone number.",
                    "type": "string"
                  },
                  "request_data": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Key and value properties that will update new lead and appear in message",
                    "type": "object"
                  },
                  "request_title": {
                    "description": "Request title. Will also be the created conversation title.",
                    "type": "string"
                  },
                  "source": {
                    "description": "Will be displayed to the business owner as the lead source",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "The URL of the page where the lead was created.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Use a client status to categorize clients according to their relationship with your business",
                    "type": "string"
                  },
                  "system_message": {
                    "description": "A message displayed to the business owner to introduce the lead. May contain links.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Customized labels that enbale you to sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                    "type": "string"
                  },
                  "unique_id": {
                    "description": "Lead unique id. Unique per business.",
                    "type": "string"
                  }
                },
                "required": [
                  "identifier_type",
                  "first_name",
                  "request_title"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "conversation_uid": "ytsphat2lc9e6i2m",
                      "status": "OK",
                      "uid": "jm6dr73osz03o6xi"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/leadgen_post_201_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Creates a lead",
        "tags": [
          "LeadGen"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/leadgen"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/messages": {
      "post": {
        "description": "Creates a Message.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "message": {
                    "description": "Message",
                    "properties": {
                      "channels": {
                        "description": "Comma separated list of channels. Valid values: sms,email. By default will send to all.",
                        "type": "string"
                      },
                      "client_id": {
                        "description": "Client ID",
                        "type": "string"
                      },
                      "conversation_title": {
                        "description": "Conversation Title",
                        "type": "string"
                      },
                      "conversation_uid": {
                        "description": "Use conversation_uid for adding a message to an existing conversation, do not pass this param for creating new conversation",
                        "type": "string"
                      },
                      "direction": {
                        "description": "Message Direction - client_to_business/business_to_client",
                        "type": "string"
                      },
                      "staff_id": {
                        "description": "Staff Id",
                        "type": "string"
                      },
                      "text": {
                        "description": "Message Text",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "conversation_uid": "hlr5ynls5igbcidk",
                        "id": 6,
                        "uid": "03rv3ooe5ftsavf8"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/messages_post_201_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Message",
        "tags": [
          "Messages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/messages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/cards/sync_card": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "client_id": {
                    "description": "client_uid",
                    "type": "string"
                  },
                  "customer_id": {
                    "description": "The customer ID at the payment gateway",
                    "type": "string"
                  },
                  "datails": {
                    "items": {
                      "properties": {
                        "card_brand": {
                          "description": "card_brand",
                          "type": "string"
                        },
                        "cardholder_name": {
                          "description": "cardholder_name",
                          "type": "string"
                        },
                        "exp_month": {
                          "description": "exp_month",
                          "type": "number"
                        },
                        "exp_year": {
                          "description": "exp_year",
                          "type": "number"
                        },
                        "last_4": {
                          "description": "last_4",
                          "type": "string"
                        }
                      },
                      "required": [
                        "client_id",
                        "external_card_id",
                        "default",
                        "details",
                        "items"
                      ],
                      "type": "object"
                    },
                    "type": "object"
                  },
                  "default": {
                    "description": "true/false. default: false (will be set to true if it is the client's first card)",
                    "type": "boolean"
                  },
                  "external_card_id": {
                    "description": "card id",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "card": {
                          "active": true,
                          "business_id": "dk3wvzieadwjmojz",
                          "card_brand": "visa",
                          "cardholder_name": "test card",
                          "client_id": "9ev0ruk82bqk5oqa",
                          "created_at": "2021-02-18T11:09:54.000Z",
                          "default": true,
                          "exp_month": 11,
                          "exp_year": 2022,
                          "id": "so6k0ydbizask6cu",
                          "last_4": "1111",
                          "payment_provider": "stripe",
                          "staff_id": "hs6wse84tqv3kndi",
                          "staff_name": "multi matter pay"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_cards_sync_card_post_201_response"
                }
              }
            },
            "description": "Create sync card"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create sync card",
        "tags": [
          "Card"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/cards/sync_card"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/checkout/": {
      "put": {
        "description": "Update a checkout process from webhook",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "description": "The charged amount  (You should send this only if you are in sync_flow)",
                    "type": "boolean"
                  },
                  "card": {
                    "description": "The saved card info - (You should send this only if client want to save the card) ",
                    "properties": {
                      "card_id": {
                        "description": "The card id - should be unique value",
                        "type": "string"
                      },
                      "card_info": {
                        "properties": {
                          "card_brand": {
                            "description": "The card brand",
                            "type": "string"
                          },
                          "cardholder_name": {
                            "description": "The card holder name",
                            "type": "string"
                          },
                          "exp_month": {
                            "description": "Expiration month (2 digits)",
                            "type": "string"
                          },
                          "exp_year": {
                            "description": "Expiration year (4 digits)",
                            "type": "string"
                          },
                          "last_4": {
                            "description": "Last 4 digits",
                            "type": "string"
                          }
                        },
                        "required": [
                          "card_brand",
                          "last_4",
                          "exp_month",
                          "exp_year",
                          "cardholder_name"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "created": {
                    "description": "the date of the payment",
                    "type": "string"
                  },
                  "customer_id": {
                    "description": "The customer unique id (You should send this only if client want to save the card)",
                    "type": "string"
                  },
                  "ps_id": {
                    "description": "The payment status uid (You should send this only if you are in sync_flow)",
                    "type": "string"
                  },
                  "sync_flow": {
                    "description": "You should send true in case it is a post checkout flow ",
                    "type": "boolean"
                  },
                  "transaction_id": {
                    "description": "The external payment gateway transaction id",
                    "type": "string"
                  },
                  "type": {
                    "description": "checkout.session.completed",
                    "type": "string"
                  },
                  "url_key": {
                    "description": "The url_key",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {},
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_checkout_put_201_response"
                }
              }
            },
            "description": "Payed by checkout"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Send checkout update by webhook ",
        "tags": [
          "Payment Checkout"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/checkout/"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/checkout/{url_key}": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "url_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "allow_save_card": false,
                        "amount": 20,
                        "client_id": "jdsfhfhjhsfg",
                        "currency": "USD",
                        "email": "nil",
                        "invoice_id": "yrg7iehgv",
                        "name": "XXX",
                        "return_url": "http://xxxx"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_checkout_url_key_get_201_response"
                }
              }
            },
            "description": "Checkout Info Retrieved"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Open Checkout For Specific url_key",
        "tags": [
          "Payment Checkout"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.url_key": "method.request.path.url_key"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/checkout/{url_key}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "client_id": {
                    "description": "Client ID",
                    "type": "string"
                  },
                  "conversation_id": {
                    "description": "Conversation ID",
                    "type": "string"
                  },
                  "package_id": {
                    "description": "Package ID",
                    "type": "string"
                  },
                  "price": {
                    "description": "Price. Default: package price.",
                    "type": "number"
                  },
                  "valid_from": {
                    "description": "First valid date of the client package (ISO 8601 format)",
                    "type": "string"
                  },
                  "valid_until": {
                    "description": "Last valid date of the client package (ISO 8601 format). Default: will be set according to package expiration.",
                    "type": "string"
                  }
                },
                "required": [
                  "client_id",
                  "package_id",
                  "valid_from"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "client_package": {
                          "active": "true",
                          "amount": 100,
                          "booking_credits": [
                            {
                              "bookings_usage": "0",
                              "credit_items": [
                                {
                                  "bookings_usage": 0,
                                  "item_id": "mzuk2kkt7vjnxdwo",
                                  "item_type": "SERVICE"
                                }
                              ],
                              "id": "vu1rovse0166a9d9",
                              "total_bookings": "10"
                            }
                          ],
                          "bookings_usage": "0",
                          "business_id": "vqzqruk6nyclxpp6",
                          "client_id": "9yxsdkr1hdjtocpv",
                          "conversation_id": "war7ow99zh14qlty",
                          "created_at": "2020-06-01T21:05:00.562Z",
                          "currency": "USD",
                          "id": "m73jkvg4bf2z71b2",
                          "image_path": "",
                          "name": "Music Lessons",
                          "package_id": "v2fvy50p8gjuvnvb",
                          "payment_status_id": "6v5ybwkavv0z9hff",
                          "payment_status_state": "pending",
                          "products": [
                            {
                              "id": "03nmq2uih783ro0g",
                              "name": "product1_name",
                              "quantity": 2
                            },
                            {
                              "id": "57ndq2uih503rca8",
                              "name": "product2_name",
                              "quantity": 4
                            }
                          ],
                          "staff_id": "mg9d91uh92bclwzg",
                          "total_bookings": "10",
                          "valid_from": "2020-06-01",
                          "valid_until": "2020-07-01"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_client_packages_post_201_response"
                }
              }
            },
            "description": "Package added to the client"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_client_packages_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Add package to client [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages/update_usage": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body2"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "package_name": "Package Name"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_client_packages_update_usage_post_200_response"
                }
              }
            },
            "description": "Client package credit updated"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_client_packages_update_usage_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Use Client Package Credit [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/update_usage"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/packages": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "if exists the packages returns with their items",
            "in": "query",
            "name": "include_items",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "packages": [
                          {
                            "active": true,
                            "currency": "USD",
                            "description": "Package description",
                            "discount_amount": "25",
                            "discount_unit": "f",
                            "expiration": 1,
                            "expiration_unit": "m",
                            "id": "456687634585436",
                            "image_path": null,
                            "name": "Package name",
                            "online_payment_enabled": true,
                            "price": "223.5",
                            "products": [
                              {
                                "id": "03nmq2uih783ro0g",
                                "name": "product1_name",
                                "quantity": 2
                              },
                              {
                                "id": "57ndq2uih503rca8",
                                "name": "product2_name",
                                "quantity": 4
                              }
                            ],
                            "total_bookings": "10"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_get_200_response"
                }
              }
            },
            "description": "Packages Info Retrieved"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_get_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get all package of business",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {},
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Create a package and its corresponding items",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currency": {
                    "description": "The items currency",
                    "type": "string"
                  },
                  "description": {
                    "description": "The package description",
                    "type": "string"
                  },
                  "discount_amount": {
                    "description": "Package discount amount (Only for view purposes)",
                    "type": "number"
                  },
                  "discount_unit": {
                    "description": "Package discount unit [F-Fixed, P-Percentage] (Only for view purposes)",
                    "type": "string"
                  },
                  "expiration": {
                    "description": "Once package is instanced for a client, it will be valid for expiration number X expiration unit   ",
                    "type": "number"
                  },
                  "expiration_unit": {
                    "description": "The expiration unit (M-Month, D-Day, W-Week, Y-Year)",
                    "type": "string"
                  },
                  "image_path": {
                    "description": "The package's image path",
                    "type": "string"
                  },
                  "items": {
                    "items": {
                      "properties": {
                        "services": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Item uid",
                                "type": "number"
                              }
                            },
                            "required": [
                              "total_bookings",
                              "id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_bookings": {
                          "description": "Usage number allowed for specific item within the package",
                          "type": "number"
                        }
                      },
                      "required": [
                        "total_bookings",
                        "services"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of the package",
                    "type": "string"
                  },
                  "online_payment_enabled": {
                    "description": "Online payments enabled?",
                    "type": "boolean"
                  },
                  "price": {
                    "description": "The price of the package",
                    "type": "number"
                  },
                  "products": {
                    "description": "Products included in the package. Up to 3 different products allowed.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "Product ID",
                          "type": "number"
                        },
                        "quantity": {
                          "description": "Product's quantity, must be greater than 0, up to 5 items allowed.",
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "price",
                  "currency",
                  "items",
                  "expiration",
                  "expiration_unit"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {},
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_post_201_response"
                }
              }
            },
            "description": "Package Created"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create Package ",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/packages/{package_id}": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "package": {
                          "active": true,
                          "currency": "USD",
                          "description": "Package description",
                          "discount_amount": "25",
                          "discount_unit": "f",
                          "expiration": 1,
                          "expiration_unit": "m",
                          "id": "456687634585436",
                          "image_path": null,
                          "items": [
                            {
                              "services": [
                                {
                                  "id": "6f156jl6z3bqwn1c",
                                  "name": "Yoga Class"
                                }
                              ],
                              "total_bookings": "5"
                            },
                            {
                              "services": [
                                {
                                  "id": "eeyt3rk4vk4abl5v",
                                  "name": "Spinning Class"
                                }
                              ],
                              "total_bookings": "5"
                            }
                          ],
                          "name": "Package name",
                          "online_payment_enabled": true,
                          "price": "223.5",
                          "products": [
                            {
                              "id": "03nmq2uih783ro0g",
                              "name": "product1_name",
                              "quantity": 2
                            },
                            {
                              "id": "57ndq2uih503rca8",
                              "name": "product2_name",
                              "quantity": 4
                            }
                          ],
                          "total_bookings": 10
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_package_id_get_200_response"
                }
              }
            },
            "description": "Package Info Retrieved"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_package_id_get_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Show package info",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages/{package_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "package": {
                    "properties": {
                      "currency": {
                        "description": "The items currency",
                        "type": "string"
                      },
                      "description": {
                        "description": "The package description",
                        "type": "string"
                      },
                      "discount_amount": {
                        "description": "Package discount amount (Only for view purposes)",
                        "type": "number"
                      },
                      "discount_unit": {
                        "description": "Package discount unit [F-Fixed, P-Percentage] (Only for view purposes)",
                        "type": "string"
                      },
                      "expiration": {
                        "description": "Once package is instanced for a client, it will be valid for expiration number X expiration unit",
                        "type": "number"
                      },
                      "expiration_unit": {
                        "description": "The expiration unit (M-Month, D-Day, W-Week, Y-Year)",
                        "type": "string"
                      },
                      "image_path": {
                        "description": "The package's image path",
                        "type": "string"
                      },
                      "items": {
                        "items": {
                          "properties": {
                            "services": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "Item uid",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "total_bookings",
                                  "id"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "total_bookings": {
                              "description": "Usage number allowed for specific item within the package",
                              "type": "number"
                            }
                          },
                          "required": [
                            "total_bookings",
                            "services"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the package",
                        "type": "string"
                      },
                      "online_payment_enabled": {
                        "description": "Online payments enabled?",
                        "type": "boolean"
                      },
                      "price": {
                        "description": "The price of the package",
                        "type": "number"
                      },
                      "products": {
                        "description": "Package's products. [] will remove the package's products",
                        "items": {
                          "properties": {
                            "id": {
                              "description": "Product ID",
                              "type": "number"
                            },
                            "quantity": {
                              "description": "Product's quantity, must be greater than 0.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "id",
                            "quantity"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "package"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "package": {
                          "active": true,
                          "currency": "USD",
                          "description": "Package description",
                          "discount_amount": "25",
                          "discount_unit": "f",
                          "expiration": 1,
                          "expiration_unit": "m",
                          "id": "456687634585436",
                          "image_path": null,
                          "items": [
                            {
                              "services": [
                                {
                                  "id": "6f156jl6z3bqwn1c",
                                  "name": "Yoga Class"
                                }
                              ],
                              "total_bookings": "5"
                            },
                            {
                              "services": [
                                {
                                  "id": "eeyt3rk4vk4abl5v",
                                  "name": "Spinning Class"
                                }
                              ],
                              "total_bookings": "5"
                            }
                          ],
                          "name": "Package name",
                          "online_payment_enabled": true,
                          "price": "223.5",
                          "products": [
                            {
                              "id": "03nmq2uih783ro0g",
                              "name": "product1_name",
                              "quantity": 2
                            },
                            {
                              "id": "57ndq2uih503rca8",
                              "name": "product2_name",
                              "quantity": 4
                            }
                          ],
                          "total_bookings": 10
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_package_id_put_200_response"
                }
              }
            },
            "description": "Package Updated"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Error Message",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_packages_package_id_put_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update package [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages/{package_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/settings": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payment_settings": {
                          "billing_address": null,
                          "braintree_merchant_id": null,
                          "currency": "USD",
                          "ewallet_type": "paypal",
                          "partial_payments_enabled": true,
                          "payments_enabled": true,
                          "payments_gateway_type": "nil",
                          "paypal_email": "fake@fake.com",
                          "square_location_currency": null,
                          "square_location_id": null,
                          "square_location_name": null,
                          "stripe_access_token": null,
                          "stripe_user_id": null
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_settings_get_201_response"
                }
              }
            },
            "description": "Settings Retrieved"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Current Payment Settings",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/settings"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "payment_settings": {
                    "properties": {
                      "currency": {
                        "description": "3 Character Currency Code (PLN,GBP,EUR,USD,CSK,JPY,RUB)",
                        "type": "string"
                      },
                      "ewallet_type": {
                        "description": "eWallet Type (valid: \"paypal\")",
                        "type": "string"
                      },
                      "paypal_email": {
                        "description": "Paypal Payment Email",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payment_settings": {
                          "billing_address": null,
                          "braintree_merchant_id": null,
                          "currency": "USD",
                          "ewallet_type": "paypal",
                          "partial_payments_enabled": true,
                          "payments_enabled": true,
                          "payments_gateway_type": "nil",
                          "paypal_email": "fake@fake.com",
                          "square_location_currency": null,
                          "square_location_id": null,
                          "square_location_name": null,
                          "stripe_access_token": null,
                          "stripe_user_id": null
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_settings_post_201_response"
                }
              }
            },
            "description": "Settings Updated"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Payment Settings",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/settings"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment_statuses/{id}/apply_coupon": {
      "put": {
        "parameters": [
          {
            "description": "payment status id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "coupon_code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payment_status": {
                          "amount_to_pay_h": "$8.00 USD",
                          "balance_h": "$8.00 USD",
                          "currency": "USD",
                          "id": "ej27h4bjknw0g6dh",
                          "price": "8.0",
                          "price_before_coupon": "10",
                          "state": "pending"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_statuses_id_apply_coupon_put_200_response"
                }
              }
            },
            "description": "Coupon Applied"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Invalid Coupon",
                      "error_code": "INVALID_COUPON",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_statuses_id_apply_coupon_put_422_response"
                }
              }
            },
            "description": "Invalid Coupon"
          }
        },
        "summary": "Apply Coupon",
        "tags": [
          "Payment Statuses"
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment_statuses/{id}/validate_coupon"
        }
      }
    },
    "/payment_statuses/{id}/validate_coupon": {
      "get": {
        "parameters": [
          {
            "description": "payment status id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "coupon_code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payment_status": {
                          "amount_to_pay_h": "$8.00 USD",
                          "balance_h": "$8.00 USD",
                          "currency": "USD",
                          "id": "ej27h4bjknw0g6dh",
                          "price": "8.0",
                          "price_before_coupon": "10",
                          "state": "pending"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_statuses_id_validate_coupon_get_200_response"
                }
              }
            },
            "description": "Valid Coupon"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Invalid Coupon",
                      "error_code": "INVALID_COUPON",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payment_statuses_id_validate_coupon_get_422_response"
                }
              }
            },
            "description": "Invalid Coupon"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Coupon",
        "tags": [
          "Payment Statuses"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment_statuses/{id}/validate_coupon"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments": {
      "get": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter all payments paid for specific invoice ",
            "in": "query",
            "name": "invoice_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payments": [
                          {
                            "amount": 300,
                            "charged_at": "23/4/2019 09:00:00",
                            "client_id": "12344",
                            "conversation_id": "1234",
                            "currency": "USD",
                            "id": "1234",
                            "note": "Payment Note",
                            "offline": true,
                            "other_payment_method": "bit",
                            "payment_method": "cash/check",
                            "payment_requests": [
                              {
                                "id": "1246"
                              }
                            ],
                            "reference": "123",
                            "state": "paid/refunded",
                            "title": "Payment Title"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payments_get_201_response"
                }
              }
            },
            "description": "Payments Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payments List",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "description": "amount",
                    "type": "number"
                  },
                  "client_id": {
                    "description": "client ID",
                    "type": "string"
                  },
                  "currency": {
                    "description": "USD, ILS etc.",
                    "type": "string"
                  },
                  "other_payment_method": {
                    "description": "Max 24 chars",
                    "type": "string"
                  },
                  "paid_at": {
                    "description": "default is now",
                    "type": "string"
                  },
                  "payment_method": {
                    "description": "'PayPal', 'Other', 'Cash', 'Credit Card', 'Bank Transfer', 'Cheque'",
                    "type": "string"
                  },
                  "payment_subject_id": {
                    "description": "The ID of the entity for which the payment has been made",
                    "type": "string"
                  },
                  "payment_subject_type": {
                    "description": "The type of entity for which the payment has been made. Available types: 'Meeting', 'EventAttendance', 'Invoice', 'ClientBookingPackage', 'ProductOrder'.",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Max 24 chars",
                    "type": "string"
                  },
                  "send_receipt": {
                    "description": "true, false. default true",
                    "type": "boolean"
                  },
                  "staff_id": {
                    "description": "Default is set to the staff that performed the API call. Business owner is allowed to send staff_id",
                    "type": "string"
                  },
                  "title": {
                    "description": "paid for service or product",
                    "type": "string"
                  }
                },
                "required": [
                  "client_id",
                  "payment_method",
                  "currency",
                  "amount",
                  "title"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payment": {
                          "amount": 150,
                          "client_id": "aaabbbccc112233",
                          "conversation_id": "aaabbbccc112233",
                          "created_at": "2019-10-16T13:05:43Z",
                          "currency": "USD",
                          "other_payment_method": "bit",
                          "paid_at": "2019-10-15T13:05:43Z",
                          "paid_offline": true,
                          "payment_action": "record_payment",
                          "payment_id": "aaabbbccc112233",
                          "payment_method": "credit_card",
                          "reference": "123",
                          "send_receipt": true,
                          "staff_id": "aaabbbccc112233",
                          "title": "Payment Title"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payments_post_201_response"
                }
              }
            },
            "description": "Payment Created"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments/{payment_uid}/match": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "relevant payment UID",
            "in": "path",
            "name": "payment_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "matter_uid": {
                    "description": "The matter uid of the relevant payment",
                    "type": "string"
                  },
                  "payment_status_uid": {
                    "description": "The uid of the relevant payment request to match",
                    "type": "string"
                  }
                },
                "required": [
                  "matter_uid",
                  "payment_status_uid"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "payment": {
                          "amount": 1,
                          "client_id": "jfcomkyykiz0mqkw",
                          "conversation_id": "lzxxiv5euh8z18qw",
                          "created_at": "2022-01-19T12:26:15Z",
                          "currency": "ILS",
                          "other_payment_method": "bit",
                          "paid_at": "2022-01-19T12:26:05Z",
                          "paid_offline": true,
                          "payment_action": "record_payment",
                          "payment_id": "2ulfclwzu8yksj9u",
                          "payment_method": "Cash",
                          "reference": "123",
                          "send_receipt": true,
                          "source_data": {
                            "campaign": "1",
                            "channel": "1",
                            "name": "initiated_by_staff",
                            "website_url": "1"
                          }
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/payments_payment_uid_match_post_201_response"
                }
              }
            },
            "description": "Payment Matched"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Match Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/appointments": {
      "get": {
        "description": "Get appointments list",
        "parameters": [
          {
            "description": "Business ID (optional)",
            "in": "query",
            "name": "business_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Client ID Filter",
            "in": "query",
            "name": "client_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "State Filter - rejected/scheduled/done/cancelled/pending_reschedule/reschedule e.g state=done,rejected",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Multiple order by option - updated:DESC,start_at:ASC,created:DESC",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "appointments": [
                          {
                            "approval_mode": null,
                            "business_uid": "65bf25e0e6cf8a65",
                            "category_name": null,
                            "charge_type": "no_price",
                            "client_color_id": 26,
                            "client_first_name": "Merrill",
                            "client_id": "tq4bn20imqm51q9k",
                            "client_last_name": "Kuvalis",
                            "conversation_id": "qdkmyol1if66f86w",
                            "created_at": "2022-02-20T12:28:36.941Z",
                            "currency": null,
                            "duration": 30,
                            "id": "d95ou92ge1f9b7so",
                            "image_url": "",
                            "interaction_details": "expedita",
                            "interaction_type": "client_location",
                            "is_recurring": false,
                            "no_show": false,
                            "notes": null,
                            "optional_times": [],
                            "payment_id": null,
                            "payment_status": null,
                            "price": "0.0",
                            "series_id": null,
                            "series_instance_count": null,
                            "service_id": "gxwcfm1tzbynz8of",
                            "staff_display_name": "Robbie Wisozk",
                            "staff_id": "7661df9bf0368e17",
                            "staff_image": null,
                            "start_time": "2022-02-21T07:00:00.000Z",
                            "state": "scheduled",
                            "title": "Enhanced asymmetric migration",
                            "type": "appointment",
                            "updated_at": "2022-02-20T12:28:36.941Z"
                          }
                        ],
                        "next_page": null
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_appointments_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Appointments List",
        "tags": [
          "Appointments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/appointments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/appointments/{appointment_id}": {
      "get": {
        "description": "Get appointment",
        "parameters": [
          {
            "description": "Appointment id",
            "in": "path",
            "name": "appointment_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "appointment": {
                          "approval_mode": null,
                          "auto_follow_up_hours": 0,
                          "business_uid": "65bf25e0e6cf8a65",
                          "category_name": null,
                          "charge_type": "no_price",
                          "client_color_id": 26,
                          "client_first_name": "Merrill",
                          "client_id": "tq4bn20imqm51q9k",
                          "client_last_name": "Kuvalis",
                          "conversation_id": "qdkmyol1if66f86w",
                          "coupon": null,
                          "created_at": "2022-02-20T12:28:36.941Z",
                          "currency": null,
                          "duration": 30,
                          "follow_up_data": null,
                          "follow_up_note": "",
                          "follow_up_time": null,
                          "follow_up_type": null,
                          "future_bookings_limit": 0,
                          "id": "d95ou92ge1f9b7so",
                          "image_url": "",
                          "interaction_details": "expedita",
                          "interaction_type": "client_location",
                          "invoices": [],
                          "is_recurring": false,
                          "last_action_message": null,
                          "meeting_reminder_sms_1": false,
                          "meeting_reminder_sms_2": false,
                          "min_hours_before_meeting": null,
                          "no_show": false,
                          "notes": null,
                          "optional_times": [],
                          "payment": null,
                          "payment_id": null,
                          "payment_status": null,
                          "price": "0.0",
                          "remind_before_in_hours_1": 0.25,
                          "remind_before_in_hours_2": 0,
                          "request_data": null,
                          "series_id": null,
                          "series_instance_count": null,
                          "service_id": "gxwcfm1tzbynz8of",
                          "sms_booking_confirmation": null,
                          "source_data": {
                            "campaign": null,
                            "channel": null,
                            "id": 28,
                            "name": "initiated_by_staff",
                            "website_url": null
                          },
                          "staff_display_name": "Robbie Wisozk",
                          "staff_id": "7661df9bf0368e17",
                          "staff_image": null,
                          "start_time": "2022-02-21T07:00:00.000Z",
                          "state": "scheduled",
                          "title": "Enhanced asymmetric migration",
                          "type": "appointment",
                          "updated_at": "2022-02-20T12:28:36.941Z",
                          "zoom_start_url": null
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_appointments_appointment_id_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Appointment",
        "tags": [
          "Appointments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/appointments/{appointment_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/bookings": {
      "get": {
        "description": "Get bookings of client",
        "parameters": [
          {
            "description": "Maximum number of records which are returned for the request",
            "in": "query",
            "name": "per_page",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "First record's index in the returned list (e.g. per_page = 10, offset = 1, reords 11 to 20 are returned)",
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business UID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Matter UID",
            "in": "query",
            "name": "matter_uid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If equals to true, returns records from the past only. Otherwise, returns future bookings as well.",
            "in": "query",
            "name": "passed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Relevant to recurring appointment/event, returns appointment/event attendance which their start_time is bigger than this parameter",
            "in": "query",
            "name": "start_time",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Relevant to recurring appointment/event, returns appointment/event attendance which their start_time is smaller than this parameter",
            "in": "query",
            "name": "end_time",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "bookings": [
                          {
                            "approval_mode": "immediate",
                            "category_name": null,
                            "charge_type": "no_price",
                            "client_id": "m7ei9q8juskgdmxj",
                            "conversation_id": "otkgzmvex5xjlq08",
                            "currency": "ILS",
                            "depth": "deep",
                            "description": null,
                            "duration": 60,
                            "end_time": "2022-02-22T07:28:40.070-06:00",
                            "image_url": "",
                            "interaction_details": "Denver, CO, USA",
                            "interaction_type": "business_location",
                            "invoice_payment_status_uid": null,
                            "invoices": [],
                            "is_recurring": true,
                            "no_show": false,
                            "notes": "",
                            "payable": false,
                            "payment": null,
                            "payment_id": null,
                            "payment_status": null,
                            "policies": {
                              "cancellation": {
                                "can_cancel": true,
                                "can_cancel_now": true,
                                "time_limit": 0
                              },
                              "meetings": {
                                "meetings_policy": ""
                              },
                              "rescheduling": {
                                "can_reschedule": true,
                                "can_reschedule_now": true,
                                "time_limit": 0
                              }
                            },
                            "price": "0.0",
                            "recurrence_description": "Daily (4 times)",
                            "rsvp_required": false,
                            "rsvp_state": "confirmed",
                            "series_id": "vr40xtqf6qecdbft",
                            "service_id": "om30w1mj75dvvnja",
                            "source_data": {
                              "campaign": null,
                              "channel": null,
                              "id": 1412199,
                              "name": "initiated_by_staff",
                              "website_url": null
                            },
                            "staff_id": "dc148c6f829a4736",
                            "staff_name": "staff name",
                            "start_time": "2022-02-22T06:28:40.070-06:00",
                            "state": "scheduled",
                            "suggested_times": [],
                            "suggested_times_end": [],
                            "time_zone": "(GMT+02:00) Jerusalem",
                            "title": "Appointment 1",
                            "type": "appointment",
                            "uid": "qd1k6untk754n89u"
                          },
                          {
                            "approval_mode": "immediate",
                            "category_name": null,
                            "charge_type": "no_price",
                            "client_id": "m7ei9q8juskgdmxj",
                            "conversation_id": "otkgzmvex5xjlq08",
                            "currency": "ILS",
                            "depth": "deep",
                            "description": null,
                            "duration": 60,
                            "end_time": "2022-02-23T07:28:40.109-06:00",
                            "image_url": "",
                            "interaction_details": "Denver, CO, USA",
                            "interaction_type": "business_location",
                            "invoice_payment_status_uid": null,
                            "invoices": [],
                            "is_recurring": true,
                            "no_show": false,
                            "notes": "",
                            "payable": false,
                            "payment": null,
                            "payment_id": null,
                            "payment_status": null,
                            "policies": {
                              "cancellation": {
                                "can_cancel": true,
                                "can_cancel_now": true,
                                "time_limit": 0
                              },
                              "meetings": {
                                "meetings_policy": ""
                              },
                              "rescheduling": {
                                "can_reschedule": true,
                                "can_reschedule_now": true,
                                "time_limit": 0
                              }
                            },
                            "price": "0.0",
                            "recurrence_description": "Daily (4 times)",
                            "rsvp_required": false,
                            "rsvp_state": "confirmed",
                            "series_id": "vr40xtqf6qecdbft",
                            "service_id": "om30w1mj75dvvnja",
                            "source_data": {
                              "campaign": null,
                              "channel": null,
                              "id": 1412199,
                              "name": "initiated_by_staff",
                              "website_url": null
                            },
                            "staff_id": "dc148c6f829a4736",
                            "staff_name": "staff name",
                            "start_time": "2022-02-23T06:28:40.109-06:00",
                            "state": "scheduled",
                            "suggested_times": [],
                            "suggested_times_end": [],
                            "time_zone": "(GMT+02:00) Jerusalem",
                            "title": "Appointment 2",
                            "type": "appointment",
                            "uid": "jmd34l18o0826e5g"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_bookings_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Bookings [Alpha] ",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Create Booking",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_id": {
                    "description": "Business uid",
                    "type": "string"
                  },
                  "campaign": {
                    "description": "Source campaign",
                    "type": "string"
                  },
                  "channel": {
                    "description": "Source channel",
                    "type": "string"
                  },
                  "client_id": {
                    "description": "Client uid",
                    "type": "string"
                  },
                  "event_instance_id": {
                    "description": "Event instance uid. Required for event.",
                    "type": "string"
                  },
                  "form_data": {
                    "type": "object",
                    "$ref": "#/components/schemas/form_data"
                  },
                  "matter_uid": {
                    "description": "Matter uid",
                    "type": "string"
                  },
                  "optional_times": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "service_id": {
                    "description": "Service uid. Required for appointment.",
                    "type": "string"
                  },
                  "source_name": {
                    "description": "Source name",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "Source URL",
                    "type": "string"
                  },
                  "staff_id": {
                    "description": "Staff uid. Required for appointment.",
                    "type": "string"
                  },
                  "start_time": {
                    "description": "ISO 8601 format. Required for appointment.",
                    "type": "string"
                  },
                  "time_zone": {
                    "description": "Default is set to UTC if not provided",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "booking": {
                          "business_id": "7292ccb7a5ede4ca",
                          "client_id": "1kfvtps4a4wlh3lc",
                          "conversation_id": "ugd2qqidl75wrto6",
                          "created_at": "2020-01-19T07:44:21Z",
                          "duration": 60,
                          "event_instance_id": "a8ma2ephjfvwnvy7 (only for event)",
                          "id": "v8mvcenb8y3wej2n",
                          "service_id": "enmlem8l67k8a8xw",
                          "source_data": {
                            "campaign": null,
                            "channel": "",
                            "name": "client_portal",
                            "website_url": null
                          },
                          "staff_id": "mg9d91uh92bclwzg",
                          "start_time": "2020-01-22T13:00:00Z",
                          "status": "scheduled",
                          "time_zone": "UTC",
                          "title": "Imm + free",
                          "type": "appointment/event"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_bookings_post_201_response"
                }
              }
            },
            "description": "Success"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "error text",
                      "error_code": "TIMESLOT_UNAVAILABLE/ALREADY_REGISTERED",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_bookings_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Booking [Alpha]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/bookings/cancel": {
      "post": {
        "description": "cancel booking",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "booking_id": {
                    "description": "Booking (appointment/event) uid",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "Business uid",
                    "type": "string"
                  },
                  "event_instance_id": {
                    "description": "Event instance uid. Required for event.",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id",
                  "booking_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "booking": {
                          "business_id": "68c692543fe0b659",
                          "client_id": "nmkso8j8ngmy3k1q",
                          "conversation_id": "qbtsps3tb5otk552",
                          "created_at": "2020-01-19T07:44:21Z",
                          "duration": 60,
                          "event_instance_id": "a8ma2ephjfvwnvy7 (only for event)",
                          "id": "strmj32qmcl75kjl",
                          "source_data": {
                            "campaign": null,
                            "channel": "",
                            "name": "client_portal",
                            "website_url": null
                          },
                          "staff_id": "2794492fc1eb6825",
                          "start_time": "2022-02-22T06:28:39.646-06:00",
                          "status": "cancelled",
                          "time_zone": "UTC",
                          "title": "Imm + free",
                          "type": "appointment/event"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_bookings_cancel_post_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Cancel a Booking [Alpha]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings/cancel"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/bookings/{booking_uid}/update_rsvp_state": {
      "put": {
        "description": "Update RSVP state",
        "parameters": [
          {
            "description": "Booking UID",
            "in": "path",
            "name": "booking_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "New RSVP State. 'confirmed' is the only valid option. any other state is forbidden (return 403)",
            "in": "query",
            "name": "new_rsvp_state",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "appointment_type": {
                    "description": "Three types are valid. 'appointment', 'event_instance' or 'event_attendance'",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "Business UID",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id",
                  "appointment_type"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "booking": {
                          "approval_mode": "immediate",
                          "category_name": null,
                          "charge_type": "no_price",
                          "client_id": "tyn38jeuuf6o6xdx",
                          "conversation_id": "2f5rgv7akyqtjxma",
                          "currency": "ILS",
                          "depth": "deep",
                          "description": null,
                          "duration": 60,
                          "end_time": "2022-02-22T07:28:40.517-06:00",
                          "image_url": "",
                          "interaction_details": "Denver, CO, USA",
                          "interaction_type": "business_location",
                          "invoice_payment_status_uid": null,
                          "invoices": [],
                          "is_recurring": true,
                          "no_show": false,
                          "notes": "",
                          "payable": false,
                          "payment": null,
                          "payment_id": null,
                          "payment_status": null,
                          "policies": {
                            "cancellation": {
                              "can_cancel": true,
                              "can_cancel_now": true,
                              "time_limit": 0
                            },
                            "meetings": {
                              "meetings_policy": ""
                            },
                            "rescheduling": {
                              "can_reschedule": true,
                              "can_reschedule_now": true,
                              "time_limit": 0
                            }
                          },
                          "price": "0.0",
                          "recurrence_description": "Daily (4 times)",
                          "rsvp_required": false,
                          "rsvp_state": "confirmed",
                          "series_id": "vr40xtqf6qecdbft",
                          "service_id": "om30w1mj75dvvnja",
                          "source_data": {
                            "campaign": null,
                            "channel": null,
                            "id": 1412199,
                            "name": "initiated_by_staff",
                            "website_url": null
                          },
                          "staff_id": "2c628a845b62dadb",
                          "staff_name": "staff name",
                          "start_time": "2022-02-22T06:28:40.517-06:00",
                          "state": "scheduled",
                          "suggested_times": [],
                          "suggested_times_end": [],
                          "time_zone": "(GMT+02:00) Jerusalem",
                          "title": "Service Without Payment",
                          "type": "appointment",
                          "uid": "quuatouilbpgp0ro"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_bookings_booking_uid_update_rsvp_state_put_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update RSVP state",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings/{booking_uid}/update_rsvp_state"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/event_instance/{event_instance_id}": {
      "get": {
        "description": "Get Event Instance Details.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the event instance",
            "in": "path",
            "name": "event_instance_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "event_instance": {
                          "charge_type": "paid",
                          "currency": "USD",
                          "duration": 60,
                          "end_time": "2020-06-08T22:00:00.000Z",
                          "interaction_details": "Tel Aviv, Israel",
                          "interaction_type": "business_location",
                          "price": "10.0",
                          "service_id": "d37paicvkb4u8taf",
                          "staff_id": "36ri3mtnk53zpfkc",
                          "start_time": "2020-06-08T21:00:00.000Z",
                          "state": "scheduled",
                          "title": "Event require pay",
                          "uid": "gmy6c6keyo2mmnaa"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_event_instance_event_instance_id_get_200_response"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Event Instance",
        "tags": [
          "Event Instance"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/event_instance/{event_instance_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/scheduling_forms/get_form": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "source_name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/scheduling_scheduling_forms_get_form_get_200_response"
                }
              }
            },
            "description": "Scheduling form"
          }
        },
        "tags": [
          "Scheduling Forms"
        ]
      }
    },
    "/scheduling/staff": {
      "get": {
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter only active services or all",
            "in": "query",
            "name": "only_active_services",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by service id",
            "in": "query",
            "name": "service_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by category id",
            "in": "query",
            "name": "category_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "staff": [
                          {
                            "active": "true",
                            "deleted": "false",
                            "display_name": "The Last",
                            "first_name": "Adam",
                            "id": "j9c1xh0vzvkr2g0g",
                            "last_name": "Last",
                            "photo_url": "www.google.com",
                            "professional_title": "Professional Title",
                            "role": "admin"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_staff_get_200_response"
                }
              }
            },
            "description": "Staff Returned"
          }
        },
        "summary": "Get Staff List [Alpha]",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {},
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/staff/"
        }
      }
    },
    "/scheduling/staff/{staff_id}": {
      "get": {
        "parameters": [
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter only active services or all",
            "in": "query",
            "name": "only_active_services",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "staff": {
                          "active": "true",
                          "deleted": "false",
                          "display_name": "The Last",
                          "first_name": "Adam",
                          "id": "j9c1xh0vzvkr2g0g",
                          "last_name": "Last",
                          "photo_url": "www.google.com",
                          "professional_title": "Professional Title",
                          "role": "admin"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_staff_staff_id_get_200_response"
                }
              }
            },
            "description": "Staff Returned"
          }
        },
        "summary": "Get Staff By ID [Alpha]",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/staff/{staff_id}"
        }
      }
    },
    "/scheduling/waitlist": {
      "post": {
        "description": "Create event Waitlist",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_id": {
                    "description": "Business Uid",
                    "type": "string"
                  },
                  "channel": {
                    "description": "Source Channel",
                    "type": "string"
                  },
                  "client_id": {
                    "description": "Client Uid",
                    "type": "string"
                  },
                  "event_instance_id": {
                    "description": "Event instance uid. Required for event.",
                    "type": "string"
                  },
                  "matter_uid": {
                    "description": "Matter Uid",
                    "type": "string"
                  },
                  "source_name": {
                    "description": "Source Name",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "Source URL",
                    "type": "string"
                  },
                  "time_zone": {
                    "description": "translation missing: en.waitlist-controller.parameters.time_zone.description",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "waitlist": {
                          "client_id": 7203,
                          "created_at": "2021-09-09T10:38:15.962+03:00",
                          "entity_id": 664,
                          "entity_type": "EventInstance",
                          "event_instance_uid": "49rytay9lggliv5f",
                          "initiator": "client",
                          "matter": {
                            "display_name": "AddedClient6",
                            "uid": "rh3bl5x5ksjlikbh"
                          },
                          "source_id": 8012,
                          "spot": 6,
                          "staff_uid": "91g1yq1uzbypf5wx",
                          "start_time_h": "Thu, September 16 at 2:00pm",
                          "state_summary": {
                            "state": "pending",
                            "state_h": "Pending"
                          },
                          "status": "pending",
                          "title": "Demo class / event",
                          "type": "waitlist",
                          "uid": "kqzp5epsr2wr90pn",
                          "where_h": "Modiin, Israel"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_waitlist_post_201_response"
                }
              }
            },
            "description": "Success"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "Invalid staff",
                      "status": "Error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_waitlist_post_422_response"
                }
              }
            },
            "description": "Failure"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create event Waitlist",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/waitlist"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/waitlist/cancel": {
      "put": {
        "description": "Cancel a Waitlist registration",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_uid": {
                    "description": "Business Uid",
                    "type": "string"
                  },
                  "client_uid": {
                    "description": "Client Uid",
                    "type": "string"
                  },
                  "event_instance_uid": {
                    "description": "Event instance uid. Required for event.",
                    "type": "string"
                  },
                  "matter_uid": {
                    "description": "Matter Uid",
                    "type": "string"
                  }
                },
                "required": [
                  "business_uid"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "waitlist": {
                          "client_id": 7192,
                          "created_at": "2021-08-24T14:46:42.355Z",
                          "entity_id": 664,
                          "entity_type": "EventInstance",
                          "event_instance_uid": "a8ma2ephjfvwnvy7",
                          "initiator": "client",
                          "matter": {
                            "display_name": "Tatto ",
                            "uid": "4s7p4tecdnq5g9ae"
                          },
                          "source_id": 7945,
                          "spot": 1,
                          "staff_uid": "91g1yq1uzbypf5wx",
                          "start_time_h": "Thu, September 16 at 11:00am",
                          "state_summary": {
                            "state": "cancelled",
                            "state_h": "Cancelled"
                          },
                          "status": "cancelled",
                          "title": "Demo class / event",
                          "type": "waitlist",
                          "uid": "0noit00aqikuq3n8",
                          "where_h": "Modiin, Israel"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scheduling_waitlist_cancel_put_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Cancel a Waitlist registration",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/waitlist/cancel"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services": {
      "get": {
        "description": "Get Services List [Alpha]",
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff uids array",
            "explode": false,
            "in": "query",
            "name": "staff_array",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return only services that have events with future instances",
            "in": "query",
            "name": "has_future_instance",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Including hidden services",
            "in": "query",
            "name": "include_hidden",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Return only services which at least one of the staff of the service is active",
            "in": "query",
            "name": "active_staff_only",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Adding the following fields to response: min_hours_before_meeting , future_bookings_limit, remind_before_in_hours_1, remind_before_in_hours_2, meeting_reminder_sms_1, sms_booking_confirmation, meeting_reminder_sms_2, auto_follow_up_hours, default_staff, order, rwg_eligible, padding",
            "in": "query",
            "name": "extra_decorator_fields",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "next_page": 1,
                        "services": [
                          {
                            "auto_follow_up_hours": 0,
                            "booking_restriction": {
                              "is_client_restricted": true,
                              "restricted_client_statuses": [
                                "lead"
                              ],
                              "restriction_rule_text": "Existing clients only",
                              "uid": "some uid"
                            },
                            "charge_type": "no_price",
                            "currency": "ILS",
                            "default_staff": null,
                            "description": "desc",
                            "duration": 60,
                            "future_bookings_limit": 0,
                            "id": "qp2ggfq6x4sd8evq",
                            "image_path": "",
                            "interaction_type": "business_location",
                            "meeting_reminder_sms_1": true,
                            "meeting_reminder_sms_2": true,
                            "min_hours_before_meeting": 24,
                            "name": "In-office appointment",
                            "order": 1000,
                            "padding": 0,
                            "price": 120,
                            "remind_before_in_hours_1": 0.25,
                            "remind_before_in_hours_2": 48,
                            "rwg_eligible": false,
                            "sms_booking_confirmation": false,
                            "type": "AppointmentService"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/services_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services List [Alpha]",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/{service_id}": {
      "get": {
        "description": "Get Service By ID [Alpha]",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "service": {
                          "booking_restriction": {
                            "is_client_restricted": true,
                            "restricted_client_statuses": [
                              "lead"
                            ],
                            "restriction_rule_text": "Existing clients only",
                            "uid": "some uid"
                          },
                          "charge_type": "free",
                          "currency": "ILS",
                          "description": "Service description",
                          "duration": 120,
                          "id": "j9c1xh0vzvkr2g0g",
                          "image_path": "/path/to/image",
                          "interaction_type": "business_location",
                          "name": "2 hours class",
                          "price": 120,
                          "type": "EventService"
                        }
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/services_service_id_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service By ID [Alpha]",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/{service_id}/availability": {
      "get": {
        "description": "Get Service availability By ID [Alpha]",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start date YYYY-MM-DD format",
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "End date YYYY-MM-DD format",
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time zone",
            "in": "query",
            "name": "time_zone",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include DST - When this parameter set to true the response will calculate availability times including dst offset",
            "in": "query",
            "name": "include_dst",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ids array[]. \n In case of more than one id, query in URL will appear as: \n staff_ids_array[]=ID1&staff_ids_array[]=ID2",
            "explode": true,
            "in": "query",
            "name": "staff_ids_array[]",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "availabilities": {
                          "2020-01-20": [
                            {
                              "charge_type": "paid_force",
                              "currency": "USD",
                              "duration_minutes": 30,
                              "event_instance_id": "2gq44zlylgmas8hc (for events only)",
                              "interaction_details": "Tel Aviv, Israel",
                              "interaction_type": "business_location",
                              "price": 1,
                              "spots_open": 1,
                              "spots_total": 1,
                              "staff_id": "clmtykygtbu5e34b",
                              "start_time": "2020-01-20T00:00:00-10:00"
                            }
                          ]
                        },
                        "time_zone": "Hawaii"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/services_service_id_availability_get_200_response"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service availability By ID [Alpha]",
        "tags": [
          "Availability"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}/availability"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/tokens": {
      "get": {
        "description": "Gets a list of tokens.",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Application ID",
            "in": "query",
            "name": "app_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "User ID",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "tokens": [
                          {
                            "token": "some_token"
                          }
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/tokens_get_201_response"
                }
              }
            },
            "description": "Tokens Returned"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get tokens",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "app_id": {
                    "description": "A unique identifier for a 3rd party application. ",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "A unique identifier for a business.",
                    "type": "string"
                  },
                  "directory_id": {
                    "description": "A unique identifier for a partner.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "token": "some_token"
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/tokens_post_201_response"
                }
              }
            },
            "description": "Token Created"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Creates a token",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/tokens/revoke": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "token": {
                    "description": "Token to revoke",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "revoked_tokens": [
                          "some_token"
                        ]
                      },
                      "status": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/tokens_revoke_post_201_response"
                }
              }
            },
            "description": "Token Revoked"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Revokes a token",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens/revoke"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhook/subscribe": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "event": {
                    "description": "Object / Event name to subscribe to",
                    "type": "string"
                  },
                  "target_url": {
                    "description": "Where to send the webhook",
                    "type": "string"
                  }
                },
                "required": [
                  "target_url",
                  "event"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscribed"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Subscribe To Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions/platform/subscribe"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhook/unsubscribe": {
      "post": {
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "event": {
                    "description": "Object / Event name to unsubscribe from",
                    "type": "string"
                  },
                  "target_url": {
                    "description": "Where to send the webhook",
                    "type": "string"
                  }
                },
                "required": [
                  "target_url"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Unsubscribed"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Unsubscribe from Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions/platform/unsubscribe"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhooks": {
      "get": {
        "description": "Get appointment",
        "parameters": [
          {
            "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering the list of webhooks.\nFilter is a 'deepObject' works with:\n  1. 'entity' - object which listen to event (example: client)\n  2. 'event_type' - type of event to triger hoom (example: created)\n\nExample:\n  <url>?filter[entity]=client&filter[event_type]=created\n",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "status": "OK",
                      "subscriptions": [
                        {
                          "entity": "client",
                          "event_type": "create",
                          "uid": 32,
                          "url": "https://my.domain.com/path/of/webhook/call"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subscriptions": {
                      "items": {
                        "properties": {
                          "entity": {
                            "type": "string"
                          },
                          "event_type": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "target_url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "status",
                    "subscriptions"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "List webhooks"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Webhooks List",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions"
        },
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "servers": [
    {
      "url": "//api.vcita.biz/platform/v1"
    }
  ],
  "x-throttling-tier": "8ReqPerSec"
}
